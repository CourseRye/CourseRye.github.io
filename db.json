{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"themes/onenote/source/css/custom.css","path":"css/custom.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/css/markdown.css","path":"css/markdown.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/onenote/source/img/Snipaste_2024-06-20_22-44-31.png","path":"img/Snipaste_2024-06-20_22-44-31.png","modified":0,"renderable":1},{"_id":"themes/onenote/source/img/favicon.png","path":"img/favicon.png","modified":0,"renderable":1},{"_id":"themes/onenote/source/img/screen.jpg","path":"img/screen.jpg","modified":0,"renderable":1},{"_id":"themes/onenote/source/js/copy-code.js","path":"js/copy-code.js","modified":0,"renderable":1},{"_id":"themes/onenote/source/js/highlight.min.js","path":"js/highlight.min.js","modified":0,"renderable":1},{"_id":"themes/onenote/source/js/highlightjs-line-numbers.js","path":"js/highlightjs-line-numbers.js","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-Black.ttf","path":"fonts/NotoSansSC-Black.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-Bold.ttf","path":"fonts/NotoSansSC-Bold.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-ExtraLight.ttf","path":"fonts/NotoSansSC-ExtraLight.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-ExtraBold.ttf","path":"fonts/NotoSansSC-ExtraBold.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-Light.ttf","path":"fonts/NotoSansSC-Light.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-Medium.ttf","path":"fonts/NotoSansSC-Medium.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-Regular.ttf","path":"fonts/NotoSansSC-Regular.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-SemiBold.ttf","path":"fonts/NotoSansSC-SemiBold.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/NotoSansSC-Thin.ttf","path":"fonts/NotoSansSC-Thin.ttf","modified":0,"renderable":1},{"_id":"themes/onenote/source/fonts/TsangerJinKai-Regular.ttf","path":"fonts/TsangerJinKai-Regular.ttf","modified":0,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"2ea99213ea367e6a45cf9cc537d939cfaf7699cc","modified":1727081854126},{"_id":"themes/onenote/README.md","hash":"ae62a5cb014930965f49e906afe520f9b59b1314","modified":1721017995000},{"_id":"themes/onenote/_config.yml","hash":"33cfe2699071da2814b2667d8985880bcf4c3a33","modified":1721017995000},{"_id":"themes/onenote/.DS_Store","hash":"a51eab15794218ce0132ea32d8bbeac0efc1108e","modified":1727182823522},{"_id":"themes/onenote/.gitignore","hash":"0ca5ec8351895abf2d95b8940eff6c32761c29e3","modified":1721017995000},{"_id":"themes/onenote/layout/about.ejs","hash":"e6474ed6f5d57d3a8c1537c317bb11942312f0e6","modified":1721017995000},{"_id":"themes/onenote/layout/archive.ejs","hash":"4cdab7333c2b8ee8344721c879f1f88f4a3b03fc","modified":1721017995000},{"_id":"themes/onenote/layout/index.ejs","hash":"5f02fe4d0d6f24f84b56accac3101ed98cb579e5","modified":1727182702890},{"_id":"themes/onenote/layout/page.ejs","hash":"0bad4e904b9af7d69db30e896ad87793b4db73e1","modified":1721017995000},{"_id":"themes/onenote/layout/post.ejs","hash":"8c68a0f1fabc49d9e34684e196ed0c931e65f86e","modified":1727107428892},{"_id":"themes/onenote/layout/layout.ejs","hash":"8ccdc9224edfbaf7e611f6984027f7aa7612fbf7","modified":1721017995000},{"_id":"themes/onenote/layout/_partial/footer.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1727115188436},{"_id":"themes/onenote/layout/_partial/head.ejs","hash":"98e4fa4550819a4343e8e6771dcb288b35dba76a","modified":1727182887075},{"_id":"themes/onenote/layout/_partial/header.ejs","hash":"2b54259f35942eeb1b99482c2a4517152fc87f0c","modified":1721017995000},{"_id":"themes/onenote/source/css/a11y-dark.min.css","hash":"a6e7bdebb44451581cef94bf8ab7105fe15229f4","modified":1721017995000},{"_id":"themes/onenote/source/css/custom.css","hash":"65d519e3261be69c4992e5cb0011175b6b281506","modified":1727111263054},{"_id":"themes/onenote/source/.DS_Store","hash":"9a89bdb1b37cce600dc39bca0b408bfc7de0a4ee","modified":1727182823521},{"_id":"themes/onenote/source/css/markdown.css","hash":"a4d8d0a38271ca08304aa1ad9980772b762e2ea0","modified":1727181917696},{"_id":"themes/onenote/source/css/reset.css","hash":"b43be1e4603aab5e600e2122cbd0afbfa2901357","modified":1727112789823},{"_id":"themes/onenote/layout/_partial/paginator.ejs","hash":"980bf0a0be798c19df4b0827aa4b90b35c872425","modified":1721017995000},{"_id":"themes/onenote/layout/_partial/post-header.ejs","hash":"973592aadfa0cc074cacb1f18a0dcce6ffdb8443","modified":1721017995000},{"_id":"themes/onenote/source/img/favicon.png","hash":"0845678601e8b144ae45c448a25650f4d3d2182d","modified":1721017995000},{"_id":"themes/onenote/source/js/copy-code.js","hash":"d51eac36afc5290952fb134f9c0aa92fd5a1c6be","modified":1721017995000},{"_id":"themes/onenote/source/js/highlightjs-line-numbers.js","hash":"690e96133591495fa847d828573bd0576b2d168a","modified":1721017995000},{"_id":"themes/onenote/source/css/style.css","hash":"fa289cb454c56daa69511bd915d5e87775f1fa00","modified":1727174857212},{"_id":"themes/onenote/source/img/Snipaste_2024-06-20_22-44-31.png","hash":"b7f605ba9689934b8a3d3125f57a5e1aa5e13b98","modified":1721017995000},{"_id":"themes/onenote/source/js/highlight.min.js","hash":"d264ad16bdf39cfec2b06c20223b87fcb37ad27b","modified":1721017995000},{"_id":"themes/onenote/source/img/screen.jpg","hash":"2804ea52a64f2e2faaeb44cbf010eb0c2f842455","modified":1721017995000},{"_id":"public/2024/09/22/hello-world/index.html","hash":"177c717bad836e9614fa759cfe1ddba6216971bb","modified":1727182419261},{"_id":"public/index.html","hash":"6986e5c21d0f0bdd64fbdfc1fcfab888a79f5127","modified":1727182419261},{"_id":"public/archives/index.html","hash":"1f97175874bf0e255d13d1c3080175f53f53eb70","modified":1727182419261},{"_id":"public/archives/2024/index.html","hash":"73eb780f515f1f02b457017608c746c61cfe6bc4","modified":1727182419261},{"_id":"public/archives/2024/09/index.html","hash":"bd7621162d24b0cfbdca8139b786e39bbb7d84f9","modified":1727182419261},{"_id":"public/img/favicon.png","hash":"0845678601e8b144ae45c448a25650f4d3d2182d","modified":1727182419261},{"_id":"public/img/Snipaste_2024-06-20_22-44-31.png","hash":"b7f605ba9689934b8a3d3125f57a5e1aa5e13b98","modified":1727182419261},{"_id":"public/css/a11y-dark.min.css","hash":"a6e7bdebb44451581cef94bf8ab7105fe15229f4","modified":1727182419261},{"_id":"public/css/custom.css","hash":"65d519e3261be69c4992e5cb0011175b6b281506","modified":1727182419261},{"_id":"public/css/markdown.css","hash":"a4d8d0a38271ca08304aa1ad9980772b762e2ea0","modified":1727182419261},{"_id":"public/css/reset.css","hash":"9601833a94a0d2b95dbf2ba80e84b1b200080c61","modified":1726999339487},{"_id":"public/js/copy-code.js","hash":"d51eac36afc5290952fb134f9c0aa92fd5a1c6be","modified":1727182419261},{"_id":"public/css/style.css","hash":"fa289cb454c56daa69511bd915d5e87775f1fa00","modified":1727182419261},{"_id":"public/js/highlight.min.js","hash":"d264ad16bdf39cfec2b06c20223b87fcb37ad27b","modified":1727182419261},{"_id":"public/js/highlightjs-line-numbers.js","hash":"690e96133591495fa847d828573bd0576b2d168a","modified":1727182419261},{"_id":"public/img/screen.jpg","hash":"2804ea52a64f2e2faaeb44cbf010eb0c2f842455","modified":1727182419261},{"_id":"source/.DS_Store","hash":"75c4511123f08d49cc82ac356964549d6ef5254a","modified":1727182208230},{"_id":"source/_posts/02 硝烟中的 Scrum 和 XP ★★★★☆.md","hash":"6fbba6fb4b455177340fc661a2eab7a02e26a18c","modified":1727115486668},{"_id":"source/_posts/01 赤裸裸的统计学 ★★★★☆.md","hash":"f2d8cd5ea71423f84a6b9b7d0ca2d39d6510b9d6","modified":1663324033069},{"_id":"themes/onenote/layout/.DS_Store","hash":"335448a1496a50f5d7cd1156d5327f4cb2ed2402","modified":1727182807532},{"_id":"source/fonts/NotoSansSC-Black.ttf","hash":"b868dc3b1a64fbc881307b037ad6f68d5c33d8e7","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-Bold.ttf","hash":"63ebe4cb97239f17d00f473289f1e9c9e034b203","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-Thin.ttf","hash":"3cda4201534b14172d468445053b29e8d4fddaed","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-ExtraLight.ttf","hash":"d2f4742bc9519b0e3a8a5563a7b2756dd576d9c8","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-Medium.ttf","hash":"e190d3fee7c944782c32239c2b9c4ef7a7854090","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-ExtraBold.ttf","hash":"1186073cb366d9c8564bd2e86a46ba085cdc78ba","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-SemiBold.ttf","hash":"32119d072f160263c7081adb10c18979b25ef6af","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-Regular.ttf","hash":"ef9134ae0e54ec6af31eed0f94b2a0dfe3d90adc","modified":1722373080000},{"_id":"source/fonts/NotoSansSC-Light.ttf","hash":"8c91be9a36015c2f172226b324733008a716ecc5","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-Bold.ttf","hash":"63ebe4cb97239f17d00f473289f1e9c9e034b203","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-Medium.ttf","hash":"e190d3fee7c944782c32239c2b9c4ef7a7854090","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-ExtraBold.ttf","hash":"1186073cb366d9c8564bd2e86a46ba085cdc78ba","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-Black.ttf","hash":"b868dc3b1a64fbc881307b037ad6f68d5c33d8e7","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-ExtraLight.ttf","hash":"d2f4742bc9519b0e3a8a5563a7b2756dd576d9c8","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-Thin.ttf","hash":"3cda4201534b14172d468445053b29e8d4fddaed","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-SemiBold.ttf","hash":"32119d072f160263c7081adb10c18979b25ef6af","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-Light.ttf","hash":"8c91be9a36015c2f172226b324733008a716ecc5","modified":1722373080000},{"_id":"themes/onenote/fonts/NotoSansSC-Regular.ttf","hash":"ef9134ae0e54ec6af31eed0f94b2a0dfe3d90adc","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-Black.ttf","hash":"b868dc3b1a64fbc881307b037ad6f68d5c33d8e7","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-Medium.ttf","hash":"e190d3fee7c944782c32239c2b9c4ef7a7854090","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-ExtraLight.ttf","hash":"d2f4742bc9519b0e3a8a5563a7b2756dd576d9c8","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-Bold.ttf","hash":"63ebe4cb97239f17d00f473289f1e9c9e034b203","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-ExtraBold.ttf","hash":"1186073cb366d9c8564bd2e86a46ba085cdc78ba","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-Thin.ttf","hash":"3cda4201534b14172d468445053b29e8d4fddaed","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-Regular.ttf","hash":"ef9134ae0e54ec6af31eed0f94b2a0dfe3d90adc","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-Light.ttf","hash":"8c91be9a36015c2f172226b324733008a716ecc5","modified":1722373080000},{"_id":"themes/onenote/source/fonts/NotoSansSC-SemiBold.ttf","hash":"32119d072f160263c7081adb10c18979b25ef6af","modified":1722373080000},{"_id":"themes/onenote/source/css/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1727078510071},{"_id":"themes/onenote/source/fonts/TsangerJinKai-Regular.ttf","hash":"f5118c4d6089085001692f2f8a31f77518ddaead","modified":1727079978330},{"_id":"source/_posts/Blog Template.md","hash":"31886e7a92e93fcb0d4848e62ce6a84b5a6c675e","modified":1727156616250},{"_id":"public/2024/05/06/Blog Template/index.html","hash":"b4aab4ae9ac5f9de63935335639bb89dd1016492","modified":1727182419261},{"_id":"public/2022/09/15/02 硝烟中的 Scrum 和 XP ★★★★☆/index.html","hash":"8b3f0028f05e257b64f1e4a8bbb3fcd765d21723","modified":1727182419261},{"_id":"public/2022/09/15/01 赤裸裸的统计学 ★★★★☆/index.html","hash":"d096aff9b5fd8425a1d5a1f5e5f358263f86855f","modified":1727182419261},{"_id":"public/tags/vw3x/index.html","hash":"ceb6d751706bb436b7748f9a8f2abff5bc556163","modified":1727182419261},{"_id":"public/tags/v2ex/index.html","hash":"badef568529fdb853b8eee9b35de72edda7a48cc","modified":1727182419261},{"_id":"public/archives/2022/index.html","hash":"4df46e069fdcafc37b554c6cc24b6d492533c2db","modified":1727182419261},{"_id":"public/archives/2022/09/index.html","hash":"4df46e069fdcafc37b554c6cc24b6d492533c2db","modified":1727182419261},{"_id":"public/archives/2024/05/index.html","hash":"af49b798654f9ce89d8f2e98c94ebe8d6f510cc4","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-Regular.ttf","hash":"ef9134ae0e54ec6af31eed0f94b2a0dfe3d90adc","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-Bold.ttf","hash":"63ebe4cb97239f17d00f473289f1e9c9e034b203","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-ExtraBold.ttf","hash":"1186073cb366d9c8564bd2e86a46ba085cdc78ba","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-Black.ttf","hash":"b868dc3b1a64fbc881307b037ad6f68d5c33d8e7","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-Light.ttf","hash":"8c91be9a36015c2f172226b324733008a716ecc5","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-Medium.ttf","hash":"e190d3fee7c944782c32239c2b9c4ef7a7854090","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-SemiBold.ttf","hash":"32119d072f160263c7081adb10c18979b25ef6af","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-ExtraLight.ttf","hash":"d2f4742bc9519b0e3a8a5563a7b2756dd576d9c8","modified":1727182419261},{"_id":"public/fonts/NotoSansSC-Thin.ttf","hash":"3cda4201534b14172d468445053b29e8d4fddaed","modified":1727182419261},{"_id":"public/fonts/TsangerJinKai-Regular.ttf","hash":"f5118c4d6089085001692f2f8a31f77518ddaead","modified":1727182419261}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","slug":"hello-world","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nslug: hello-world\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","published":1,"date":"2024-09-22T09:42:01.062Z","updated":"2024-09-23T08:57:34.126Z","_id":"cm1de58ma0000rhv20jza1v2i","comments":1,"layout":"post","photos":[],"content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2><span id=\"quick-start\">Quick Start</span></h2><h3><span id=\"create-a-new-post\">Create a new post</span></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3><span id=\"run-server\">Run server</span></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3><span id=\"generate-static-files\">Generate static files</span></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3><span id=\"deploy-to-remote-sites\">Deploy to remote sites</span></h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"_content":"# 01 赤裸裸的统计学 ★★★★☆\n\n## 这本书讲了什么？\n\n## 统计数学的理论\n\n### 平均数与中位数\n平均数很容易受到异常值的干扰，但中位数很难受到异常值的干扰。\n\n比如美国的减税政策将使 9200 万人享受减税待遇，人均减税超过 1000 美元。乍一看就觉得政策十分惠民，但其实平均数受到了干扰，因为少部分的富翁会大幅度减税，从而拉高平均值，其实大多数人仅仅减税 100 美元。\n\n再比如在一个酒吧的吧台前，坐着 10 个人，他们的平均收入是 3.5W 美元，这时候比尔•盖茨走了进来（假设盖茨年收入 10 亿美元）。比尔•盖茨也同样的坐在了吧台前，此时他们的平均收入是 9100W 美元。如果我说这 11 个人的平均年收入是 9100W 美元，在数据上是正确的，但同时也具有误导性。\n\n所以为了避免异常值的干扰，我们可以使用中位数。还是酒吧的例子，原先坐在吧台前的 10 个人的年均收人中位数为 3.5W 美元，当比尔.盖茨入座之后，这 11 个人的年收入中位数依然为 3.5 W美元。如果将他们按照收入高低来排座的话，那么坐在第 6把凳子上的人的收入就代表了整组人收入的中位数。\n\n\n### 标准差\n标准差能够帮助我们在一大堆杂乱无章的数字中发现真理的统计数值，它能够让我们用一个独立的数字来表示距离平均数的离散程度。数据在平均值周围分布越密集，其标准差就越小，反之则越大。\n\n比如我要同时收集 100 名 飞机乘客的体重、100 名马拉松运动员的体重，假设两组人的平均体重都是 70kg。但飞机乘客的体重距离平均数的标准差要远远大于马拉松运动员，因为马拉松运动员的体重可能都差不多，但飞机乘客就不一样了，有抱在怀里的婴儿，也有胖的像个气球的人，也就是说飞机乘客的体重分布更加分散。\n\n对于任何一组数据来说，只要知道了平均数和标准差，就能进行简单的统计学分析，得出可信赖的结论。比如，美国 SAT 数学考试的平均分为 500 分，标准差为 100，大部分参学生的成绩都会在标准差范围内浮动，比如 400~600分。那么又有多少名学生的成绩会高于 720 分呢？估计不会有很多，因为这比平均分高出两个标准差还要多。\n\n\n### 正态分布\n正态分布是统计学中最重要、最有用、最常见的分布之一。正态分布的数据一般都是对称的，以平均数为中轴，呈现类似于钟的形状。\n\n据华尔街日报报道，美国人甚至连在购物商场停车都呈现出正态分布，正对着商场的地方停车数量最多，也就是正态曲线的峰值，在入口左右两侧的停车数逐渐变少，即曲线两端下滑的尾巴。所以当你来到一家陌生商场，要想尽快找到出入口，比较简洁的方法就是去车多的地方看看。<a href='01%20%E8%B5%A4%E8%A3%B8%E8%A3%B8%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png%23align=left&display=inline&height=586&originHeight=586&originWidth=1144&status=done&width=827'>1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png#align=left&display=inline&height=586&originHeight=586&originWidth=1144&status=done&width=827</a>\n\n### 相关性与相关系数\n相关性体现的是两个现象之间相互关联的程度，例如在夏天，温度的高低与冰淇淋的销量就存在相关性，当温度升高时，冰淇淋的销量也会相应提高。\n\n如果其中一个变量的改变引发另一个变量朝着相同的方向变化，那么这两个变量存在正相关性，就比如身高与体重之间的关系，一般来说个子高的人体重会重些，个子矮的人体重会轻些。\n\n如果一个变量的改变引发另一个变量朝着相反的方向变化，那么这两个变量就存在负相关性，比如如锻炼与体重。\n\n相关性将两个变量的关联精炼成一个描述性数据：相关系数。相关系数是区间为 -1 到 1 的常数。相关系数为 1，表示正相关，相关系数为 -1，表示负相关。如果相关系数为零(或者接近零)，则意味着变量之间不存在有意义的联系，就比如一个人的鞋码和高考成绩之间的关系。\n\n\n### 概率、期望值与大数定律\n概率学是研究不确定事件和结果的学问，概率不会确凿的告诉我们会发生什么，但是我们通过概率计算，能够知道可能发生什么，不会发生什么。\n\n比如抛硬币，在硬币落地前，是不知道硬币到底是正面还是方面，但是我们可以知道正面的概率是 1/2，反面的概率是 1/2，竖着的概率是 0。\n\n很多时候，了解多重时间同时发生的概率是很有价值的。比如连续抛硬币 4 次都得到正面朝上的概率为 1/16，那下一次得到正面朝上的概率是多少？是 1/32 吗？不，是 1/2，因为抛硬币是独立事件，一个事件的发生和结果不会对另外一事件产生影响。相反，今天下雨的概率与昨天是否下雨并不是相互孤立的，因为下雨作为一种天气现象，具有连续性，有时候经常连续几天都下雨。\n\n期望值是所有不同结果的和，每个结果都是由各自的概率和收益相乘而来。假设参与了掷骰子游戏，每掷一次骰子需要 $3，掷出 1 点可以获得 $1，掷出 2 点可以获得 $2，以此类推，那是否要参加这个游戏？此时我们就能计算掷一次骰子的期望值：（1+2+3+4+5+6）÷ 6=$3.5，那我们可以参加掷骰子游戏，因为期望回报 $3.5＞游戏成本 $3。\n\n大数定律，随着实验次数的增多，结果的平均值会越来越接近期望值。也就是说，我们投一个正常的六面骰，投的次数越多，平均值就会越接近 3.5。\n\n\n## 统计数字的陷阱\n\n### 正确的获取数据\n统计学是基于数据的科学，我们无法从一份错误的数据中推出正确的结论，因此数据的获取就至关重要。\n\n比如在软件卸载界面做卸载理由调查时，用户有可能直接选择第一个默认选项，因此应该随机展示选项，减少默认选项干扰。\n\n在好莱坞公布的数据中，截至 2011 年，美国史上票房最高的三部电影依次是：阿凡达、泰坦尼克号、蝙蝠侠前传 2：暗夜骑士。但如果将通货膨胀考虑在内，最卖座的排名将变为：乱世佳人、星球大战Ⅳ、音乐之声。原来的冠军阿凡达在排行榜上位列第 14。\n\n\n### 选择性的使用数据\n如果对某一事物的描述存在多种描述方式，那么我们使用的描述方法就会影响他人对事物的印象，甚至可以用数据去支持完全不成立的结论，比如：\n\n> 政客甲：我们的教育水平正变得越来越糟，2013 年有 6 成学校的考试成绩低于2012年  \n> 政客乙：我们的教育水平正变得越来越好，2013 年有 8 成学生的考试成绩高于2012年  \n可以发现政客甲将学校当作分析单位，政客乙是将学生作为其分析单位。如果成绩上升的学生正好来自办学规模非常大的学校，那么大部分学生在学业有所进步而大部分学校的成绩正在退步，这两者是完全有可能同时发生。\n\n纽约州就因为统计陷阱而付出的惨痛的代价，州政府出台了记分卡制度：对接受心脏搭桥手术的病人的死亡率进行统计，以便让公众在选择心脏科医生时有参考。作为心脏科医生，肯定会在意他们的记分卡，而降低死亡率最简单易行的方法就是拒绝为那些病况最严重的病人进行手术。\n\n在参与调查的心脏科医生中，有 83% 的医生表示正是由于公开了死亡率数据，一些本来可以从搭桥手术中获益的病人最终没能被安排进行手术；79% 的医生表示收集并公开死亡率数据或多或少地影响了他们的治疗决策。\n\n\n### 统计学的偏见\n\n#### 选择性偏见\n1936 年，一家杂志主办了一次规模巨大的调查，结果预测兰登将以 57％ 的支持率击败罗斯福赢得大选，而实际是罗斯福获得了 60％ 的投票。因为杂志调查的对象是有汽车和电话的人，这显然不能代表当时美国人的整体状况。所以，如果调查对象是特定的人或是有强烈的主观意图，对调差结论就要小心了。希特勒在纳粹党徒中得到广泛拥戴，但这并不代表更多人的观点。\n\n\n#### 发表性偏见\n《纽约时报》曾报道：抗抑郁药百忧解、帕罗西汀等产品的生产商故意不发表更多的药物试验结果。94％ 证实这些药物有效的研究得到发表，发现这些药物无效的研究中只有14％被发表。偏见的来源并不是研究本身，而是那些能够接触到大众读者的信息载体。肯定性的研究发现相比否定性的研究发现来说，更可能被发表，从而影响我们对事实真相的判断。\n\n\n#### 记忆性偏见\n1993 年，一位哈佛大学的研究人员进行了一项饮食习惯与癌症之间关系的研究。通过对比两组患病和健康女性早年的饮食习惯发现，患病组中更多的人年轻时喜欢吃高脂肪含量的食物。但是，对所有参与者多年前还没有被诊出患病的另一份调查记录显示，患病者后来回忆的饮食构成脂肪含量明显高于实际。所以，这项研究并不能揭示饮食习惯和癌症之间的关系，仅仅是告诉我们癌症是如何影响记忆的。回忆确实很神奇，但不是优质数据的可靠来源。\n\n#### 幸存者偏见\n房间里站满高矮不等的人，让较矮的人离开自然会提高平均身高，但实际上没有一个人长高了。基金公司就是这样做的。一家大型基金公司会同时开放许多共同基金，其中每只基金跑赢标准普尔 500 指数的概率都是 50％，长期数据确实如此。两三年后，那些收益率不高的基金都被悄无声息地关闭了，剩余资产并入现存基金。此时，基金公司就可以大肆宣传他们剩下的两三只基金表现始终优于标准普尔 500 指数了。当样本中有一些或许多数据缺失，导致样本组发生改变，必然会影响分析结果。\n\n\n#### 健康用户偏见\n专栏作家加里·陶布斯说：『就从最简单的角度来分析，那些忠于健康生活方式的人，按时吃药、保持健康的饮食习惯，与其他人有本质区别，这就是问题所在』。\n\n定期服用维生素的人更有可能不受疾病困扰，因为他们就是那类定期服用维生素的人。所以维生素在他们的健康方面到底发挥了多大作用，完全是另一回事。","source":"_posts/01 赤裸裸的统计学 ★★★★☆.md","raw":"# 01 赤裸裸的统计学 ★★★★☆\n\n## 这本书讲了什么？\n\n## 统计数学的理论\n\n### 平均数与中位数\n平均数很容易受到异常值的干扰，但中位数很难受到异常值的干扰。\n\n比如美国的减税政策将使 9200 万人享受减税待遇，人均减税超过 1000 美元。乍一看就觉得政策十分惠民，但其实平均数受到了干扰，因为少部分的富翁会大幅度减税，从而拉高平均值，其实大多数人仅仅减税 100 美元。\n\n再比如在一个酒吧的吧台前，坐着 10 个人，他们的平均收入是 3.5W 美元，这时候比尔•盖茨走了进来（假设盖茨年收入 10 亿美元）。比尔•盖茨也同样的坐在了吧台前，此时他们的平均收入是 9100W 美元。如果我说这 11 个人的平均年收入是 9100W 美元，在数据上是正确的，但同时也具有误导性。\n\n所以为了避免异常值的干扰，我们可以使用中位数。还是酒吧的例子，原先坐在吧台前的 10 个人的年均收人中位数为 3.5W 美元，当比尔.盖茨入座之后，这 11 个人的年收入中位数依然为 3.5 W美元。如果将他们按照收入高低来排座的话，那么坐在第 6把凳子上的人的收入就代表了整组人收入的中位数。\n\n\n### 标准差\n标准差能够帮助我们在一大堆杂乱无章的数字中发现真理的统计数值，它能够让我们用一个独立的数字来表示距离平均数的离散程度。数据在平均值周围分布越密集，其标准差就越小，反之则越大。\n\n比如我要同时收集 100 名 飞机乘客的体重、100 名马拉松运动员的体重，假设两组人的平均体重都是 70kg。但飞机乘客的体重距离平均数的标准差要远远大于马拉松运动员，因为马拉松运动员的体重可能都差不多，但飞机乘客就不一样了，有抱在怀里的婴儿，也有胖的像个气球的人，也就是说飞机乘客的体重分布更加分散。\n\n对于任何一组数据来说，只要知道了平均数和标准差，就能进行简单的统计学分析，得出可信赖的结论。比如，美国 SAT 数学考试的平均分为 500 分，标准差为 100，大部分参学生的成绩都会在标准差范围内浮动，比如 400~600分。那么又有多少名学生的成绩会高于 720 分呢？估计不会有很多，因为这比平均分高出两个标准差还要多。\n\n\n### 正态分布\n正态分布是统计学中最重要、最有用、最常见的分布之一。正态分布的数据一般都是对称的，以平均数为中轴，呈现类似于钟的形状。\n\n据华尔街日报报道，美国人甚至连在购物商场停车都呈现出正态分布，正对着商场的地方停车数量最多，也就是正态曲线的峰值，在入口左右两侧的停车数逐渐变少，即曲线两端下滑的尾巴。所以当你来到一家陌生商场，要想尽快找到出入口，比较简洁的方法就是去车多的地方看看。<a href='01%20%E8%B5%A4%E8%A3%B8%E8%A3%B8%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png%23align=left&display=inline&height=586&originHeight=586&originWidth=1144&status=done&width=827'>1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png#align=left&display=inline&height=586&originHeight=586&originWidth=1144&status=done&width=827</a>\n\n### 相关性与相关系数\n相关性体现的是两个现象之间相互关联的程度，例如在夏天，温度的高低与冰淇淋的销量就存在相关性，当温度升高时，冰淇淋的销量也会相应提高。\n\n如果其中一个变量的改变引发另一个变量朝着相同的方向变化，那么这两个变量存在正相关性，就比如身高与体重之间的关系，一般来说个子高的人体重会重些，个子矮的人体重会轻些。\n\n如果一个变量的改变引发另一个变量朝着相反的方向变化，那么这两个变量就存在负相关性，比如如锻炼与体重。\n\n相关性将两个变量的关联精炼成一个描述性数据：相关系数。相关系数是区间为 -1 到 1 的常数。相关系数为 1，表示正相关，相关系数为 -1，表示负相关。如果相关系数为零(或者接近零)，则意味着变量之间不存在有意义的联系，就比如一个人的鞋码和高考成绩之间的关系。\n\n\n### 概率、期望值与大数定律\n概率学是研究不确定事件和结果的学问，概率不会确凿的告诉我们会发生什么，但是我们通过概率计算，能够知道可能发生什么，不会发生什么。\n\n比如抛硬币，在硬币落地前，是不知道硬币到底是正面还是方面，但是我们可以知道正面的概率是 1/2，反面的概率是 1/2，竖着的概率是 0。\n\n很多时候，了解多重时间同时发生的概率是很有价值的。比如连续抛硬币 4 次都得到正面朝上的概率为 1/16，那下一次得到正面朝上的概率是多少？是 1/32 吗？不，是 1/2，因为抛硬币是独立事件，一个事件的发生和结果不会对另外一事件产生影响。相反，今天下雨的概率与昨天是否下雨并不是相互孤立的，因为下雨作为一种天气现象，具有连续性，有时候经常连续几天都下雨。\n\n期望值是所有不同结果的和，每个结果都是由各自的概率和收益相乘而来。假设参与了掷骰子游戏，每掷一次骰子需要 $3，掷出 1 点可以获得 $1，掷出 2 点可以获得 $2，以此类推，那是否要参加这个游戏？此时我们就能计算掷一次骰子的期望值：（1+2+3+4+5+6）÷ 6=$3.5，那我们可以参加掷骰子游戏，因为期望回报 $3.5＞游戏成本 $3。\n\n大数定律，随着实验次数的增多，结果的平均值会越来越接近期望值。也就是说，我们投一个正常的六面骰，投的次数越多，平均值就会越接近 3.5。\n\n\n## 统计数字的陷阱\n\n### 正确的获取数据\n统计学是基于数据的科学，我们无法从一份错误的数据中推出正确的结论，因此数据的获取就至关重要。\n\n比如在软件卸载界面做卸载理由调查时，用户有可能直接选择第一个默认选项，因此应该随机展示选项，减少默认选项干扰。\n\n在好莱坞公布的数据中，截至 2011 年，美国史上票房最高的三部电影依次是：阿凡达、泰坦尼克号、蝙蝠侠前传 2：暗夜骑士。但如果将通货膨胀考虑在内，最卖座的排名将变为：乱世佳人、星球大战Ⅳ、音乐之声。原来的冠军阿凡达在排行榜上位列第 14。\n\n\n### 选择性的使用数据\n如果对某一事物的描述存在多种描述方式，那么我们使用的描述方法就会影响他人对事物的印象，甚至可以用数据去支持完全不成立的结论，比如：\n\n> 政客甲：我们的教育水平正变得越来越糟，2013 年有 6 成学校的考试成绩低于2012年  \n> 政客乙：我们的教育水平正变得越来越好，2013 年有 8 成学生的考试成绩高于2012年  \n可以发现政客甲将学校当作分析单位，政客乙是将学生作为其分析单位。如果成绩上升的学生正好来自办学规模非常大的学校，那么大部分学生在学业有所进步而大部分学校的成绩正在退步，这两者是完全有可能同时发生。\n\n纽约州就因为统计陷阱而付出的惨痛的代价，州政府出台了记分卡制度：对接受心脏搭桥手术的病人的死亡率进行统计，以便让公众在选择心脏科医生时有参考。作为心脏科医生，肯定会在意他们的记分卡，而降低死亡率最简单易行的方法就是拒绝为那些病况最严重的病人进行手术。\n\n在参与调查的心脏科医生中，有 83% 的医生表示正是由于公开了死亡率数据，一些本来可以从搭桥手术中获益的病人最终没能被安排进行手术；79% 的医生表示收集并公开死亡率数据或多或少地影响了他们的治疗决策。\n\n\n### 统计学的偏见\n\n#### 选择性偏见\n1936 年，一家杂志主办了一次规模巨大的调查，结果预测兰登将以 57％ 的支持率击败罗斯福赢得大选，而实际是罗斯福获得了 60％ 的投票。因为杂志调查的对象是有汽车和电话的人，这显然不能代表当时美国人的整体状况。所以，如果调查对象是特定的人或是有强烈的主观意图，对调差结论就要小心了。希特勒在纳粹党徒中得到广泛拥戴，但这并不代表更多人的观点。\n\n\n#### 发表性偏见\n《纽约时报》曾报道：抗抑郁药百忧解、帕罗西汀等产品的生产商故意不发表更多的药物试验结果。94％ 证实这些药物有效的研究得到发表，发现这些药物无效的研究中只有14％被发表。偏见的来源并不是研究本身，而是那些能够接触到大众读者的信息载体。肯定性的研究发现相比否定性的研究发现来说，更可能被发表，从而影响我们对事实真相的判断。\n\n\n#### 记忆性偏见\n1993 年，一位哈佛大学的研究人员进行了一项饮食习惯与癌症之间关系的研究。通过对比两组患病和健康女性早年的饮食习惯发现，患病组中更多的人年轻时喜欢吃高脂肪含量的食物。但是，对所有参与者多年前还没有被诊出患病的另一份调查记录显示，患病者后来回忆的饮食构成脂肪含量明显高于实际。所以，这项研究并不能揭示饮食习惯和癌症之间的关系，仅仅是告诉我们癌症是如何影响记忆的。回忆确实很神奇，但不是优质数据的可靠来源。\n\n#### 幸存者偏见\n房间里站满高矮不等的人，让较矮的人离开自然会提高平均身高，但实际上没有一个人长高了。基金公司就是这样做的。一家大型基金公司会同时开放许多共同基金，其中每只基金跑赢标准普尔 500 指数的概率都是 50％，长期数据确实如此。两三年后，那些收益率不高的基金都被悄无声息地关闭了，剩余资产并入现存基金。此时，基金公司就可以大肆宣传他们剩下的两三只基金表现始终优于标准普尔 500 指数了。当样本中有一些或许多数据缺失，导致样本组发生改变，必然会影响分析结果。\n\n\n#### 健康用户偏见\n专栏作家加里·陶布斯说：『就从最简单的角度来分析，那些忠于健康生活方式的人，按时吃药、保持健康的饮食习惯，与其他人有本质区别，这就是问题所在』。\n\n定期服用维生素的人更有可能不受疾病困扰，因为他们就是那类定期服用维生素的人。所以维生素在他们的健康方面到底发挥了多大作用，完全是另一回事。","slug":"01 赤裸裸的统计学 ★★★★☆","published":1,"date":"2022-09-15T06:40:59.675Z","updated":"2022-09-16T10:27:13.069Z","title":"","comments":1,"layout":"post","photos":[],"_id":"cm1ee2hfj00008qv2gcc56iun","content":"<h1 id=\"01-赤裸裸的统计学-★★★★☆\"><a href=\"#01-赤裸裸的统计学-★★★★☆\" class=\"headerlink\" title=\"01 赤裸裸的统计学 ★★★★☆\"></a>01 赤裸裸的统计学 ★★★★☆</h1><h2 id=\"这本书讲了什么？\"><a href=\"#这本书讲了什么？\" class=\"headerlink\" title=\"这本书讲了什么？\"></a>这本书讲了什么？</h2><h2 id=\"统计数学的理论\"><a href=\"#统计数学的理论\" class=\"headerlink\" title=\"统计数学的理论\"></a>统计数学的理论</h2><h3 id=\"平均数与中位数\"><a href=\"#平均数与中位数\" class=\"headerlink\" title=\"平均数与中位数\"></a>平均数与中位数</h3><p>平均数很容易受到异常值的干扰，但中位数很难受到异常值的干扰。</p>\n<p>比如美国的减税政策将使 9200 万人享受减税待遇，人均减税超过 1000 美元。乍一看就觉得政策十分惠民，但其实平均数受到了干扰，因为少部分的富翁会大幅度减税，从而拉高平均值，其实大多数人仅仅减税 100 美元。</p>\n<p>再比如在一个酒吧的吧台前，坐着 10 个人，他们的平均收入是 3.5W 美元，这时候比尔•盖茨走了进来（假设盖茨年收入 10 亿美元）。比尔•盖茨也同样的坐在了吧台前，此时他们的平均收入是 9100W 美元。如果我说这 11 个人的平均年收入是 9100W 美元，在数据上是正确的，但同时也具有误导性。</p>\n<p>所以为了避免异常值的干扰，我们可以使用中位数。还是酒吧的例子，原先坐在吧台前的 10 个人的年均收人中位数为 3.5W 美元，当比尔.盖茨入座之后，这 11 个人的年收入中位数依然为 3.5 W美元。如果将他们按照收入高低来排座的话，那么坐在第 6把凳子上的人的收入就代表了整组人收入的中位数。</p>\n<h3 id=\"标准差\"><a href=\"#标准差\" class=\"headerlink\" title=\"标准差\"></a>标准差</h3><p>标准差能够帮助我们在一大堆杂乱无章的数字中发现真理的统计数值，它能够让我们用一个独立的数字来表示距离平均数的离散程度。数据在平均值周围分布越密集，其标准差就越小，反之则越大。</p>\n<p>比如我要同时收集 100 名 飞机乘客的体重、100 名马拉松运动员的体重，假设两组人的平均体重都是 70kg。但飞机乘客的体重距离平均数的标准差要远远大于马拉松运动员，因为马拉松运动员的体重可能都差不多，但飞机乘客就不一样了，有抱在怀里的婴儿，也有胖的像个气球的人，也就是说飞机乘客的体重分布更加分散。</p>\n<p>对于任何一组数据来说，只要知道了平均数和标准差，就能进行简单的统计学分析，得出可信赖的结论。比如，美国 SAT 数学考试的平均分为 500 分，标准差为 100，大部分参学生的成绩都会在标准差范围内浮动，比如 400~600分。那么又有多少名学生的成绩会高于 720 分呢？估计不会有很多，因为这比平均分高出两个标准差还要多。</p>\n<h3 id=\"正态分布\"><a href=\"#正态分布\" class=\"headerlink\" title=\"正态分布\"></a>正态分布</h3><p>正态分布是统计学中最重要、最有用、最常见的分布之一。正态分布的数据一般都是对称的，以平均数为中轴，呈现类似于钟的形状。</p>\n<p>据华尔街日报报道，美国人甚至连在购物商场停车都呈现出正态分布，正对着商场的地方停车数量最多，也就是正态曲线的峰值，在入口左右两侧的停车数逐渐变少，即曲线两端下滑的尾巴。所以当你来到一家陌生商场，要想尽快找到出入口，比较简洁的方法就是去车多的地方看看。<a href='01%20%E8%B5%A4%E8%A3%B8%E8%A3%B8%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png%23align=left&display=inline&height=586&originHeight=586&originWidth=1144&status=done&width=827'>1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;586&amp;originHeight&#x3D;586&amp;originWidth&#x3D;1144&amp;status&#x3D;done&amp;width&#x3D;827</a></p>\n<h3 id=\"相关性与相关系数\"><a href=\"#相关性与相关系数\" class=\"headerlink\" title=\"相关性与相关系数\"></a>相关性与相关系数</h3><p>相关性体现的是两个现象之间相互关联的程度，例如在夏天，温度的高低与冰淇淋的销量就存在相关性，当温度升高时，冰淇淋的销量也会相应提高。</p>\n<p>如果其中一个变量的改变引发另一个变量朝着相同的方向变化，那么这两个变量存在正相关性，就比如身高与体重之间的关系，一般来说个子高的人体重会重些，个子矮的人体重会轻些。</p>\n<p>如果一个变量的改变引发另一个变量朝着相反的方向变化，那么这两个变量就存在负相关性，比如如锻炼与体重。</p>\n<p>相关性将两个变量的关联精炼成一个描述性数据：相关系数。相关系数是区间为 -1 到 1 的常数。相关系数为 1，表示正相关，相关系数为 -1，表示负相关。如果相关系数为零(或者接近零)，则意味着变量之间不存在有意义的联系，就比如一个人的鞋码和高考成绩之间的关系。</p>\n<h3 id=\"概率、期望值与大数定律\"><a href=\"#概率、期望值与大数定律\" class=\"headerlink\" title=\"概率、期望值与大数定律\"></a>概率、期望值与大数定律</h3><p>概率学是研究不确定事件和结果的学问，概率不会确凿的告诉我们会发生什么，但是我们通过概率计算，能够知道可能发生什么，不会发生什么。</p>\n<p>比如抛硬币，在硬币落地前，是不知道硬币到底是正面还是方面，但是我们可以知道正面的概率是 1&#x2F;2，反面的概率是 1&#x2F;2，竖着的概率是 0。</p>\n<p>很多时候，了解多重时间同时发生的概率是很有价值的。比如连续抛硬币 4 次都得到正面朝上的概率为 1&#x2F;16，那下一次得到正面朝上的概率是多少？是 1&#x2F;32 吗？不，是 1&#x2F;2，因为抛硬币是独立事件，一个事件的发生和结果不会对另外一事件产生影响。相反，今天下雨的概率与昨天是否下雨并不是相互孤立的，因为下雨作为一种天气现象，具有连续性，有时候经常连续几天都下雨。</p>\n<p>期望值是所有不同结果的和，每个结果都是由各自的概率和收益相乘而来。假设参与了掷骰子游戏，每掷一次骰子需要 $3，掷出 1 点可以获得 $1，掷出 2 点可以获得 $2，以此类推，那是否要参加这个游戏？此时我们就能计算掷一次骰子的期望值：（1+2+3+4+5+6）÷ 6&#x3D;$3.5，那我们可以参加掷骰子游戏，因为期望回报 $3.5＞游戏成本 $3。</p>\n<p>大数定律，随着实验次数的增多，结果的平均值会越来越接近期望值。也就是说，我们投一个正常的六面骰，投的次数越多，平均值就会越接近 3.5。</p>\n<h2 id=\"统计数字的陷阱\"><a href=\"#统计数字的陷阱\" class=\"headerlink\" title=\"统计数字的陷阱\"></a>统计数字的陷阱</h2><h3 id=\"正确的获取数据\"><a href=\"#正确的获取数据\" class=\"headerlink\" title=\"正确的获取数据\"></a>正确的获取数据</h3><p>统计学是基于数据的科学，我们无法从一份错误的数据中推出正确的结论，因此数据的获取就至关重要。</p>\n<p>比如在软件卸载界面做卸载理由调查时，用户有可能直接选择第一个默认选项，因此应该随机展示选项，减少默认选项干扰。</p>\n<p>在好莱坞公布的数据中，截至 2011 年，美国史上票房最高的三部电影依次是：阿凡达、泰坦尼克号、蝙蝠侠前传 2：暗夜骑士。但如果将通货膨胀考虑在内，最卖座的排名将变为：乱世佳人、星球大战Ⅳ、音乐之声。原来的冠军阿凡达在排行榜上位列第 14。</p>\n<h3 id=\"选择性的使用数据\"><a href=\"#选择性的使用数据\" class=\"headerlink\" title=\"选择性的使用数据\"></a>选择性的使用数据</h3><p>如果对某一事物的描述存在多种描述方式，那么我们使用的描述方法就会影响他人对事物的印象，甚至可以用数据去支持完全不成立的结论，比如：</p>\n<blockquote>\n<p>政客甲：我们的教育水平正变得越来越糟，2013 年有 6 成学校的考试成绩低于2012年<br>政客乙：我们的教育水平正变得越来越好，2013 年有 8 成学生的考试成绩高于2012年<br>可以发现政客甲将学校当作分析单位，政客乙是将学生作为其分析单位。如果成绩上升的学生正好来自办学规模非常大的学校，那么大部分学生在学业有所进步而大部分学校的成绩正在退步，这两者是完全有可能同时发生。</p>\n</blockquote>\n<p>纽约州就因为统计陷阱而付出的惨痛的代价，州政府出台了记分卡制度：对接受心脏搭桥手术的病人的死亡率进行统计，以便让公众在选择心脏科医生时有参考。作为心脏科医生，肯定会在意他们的记分卡，而降低死亡率最简单易行的方法就是拒绝为那些病况最严重的病人进行手术。</p>\n<p>在参与调查的心脏科医生中，有 83% 的医生表示正是由于公开了死亡率数据，一些本来可以从搭桥手术中获益的病人最终没能被安排进行手术；79% 的医生表示收集并公开死亡率数据或多或少地影响了他们的治疗决策。</p>\n<h3 id=\"统计学的偏见\"><a href=\"#统计学的偏见\" class=\"headerlink\" title=\"统计学的偏见\"></a>统计学的偏见</h3><h4 id=\"选择性偏见\"><a href=\"#选择性偏见\" class=\"headerlink\" title=\"选择性偏见\"></a>选择性偏见</h4><p>1936 年，一家杂志主办了一次规模巨大的调查，结果预测兰登将以 57％ 的支持率击败罗斯福赢得大选，而实际是罗斯福获得了 60％ 的投票。因为杂志调查的对象是有汽车和电话的人，这显然不能代表当时美国人的整体状况。所以，如果调查对象是特定的人或是有强烈的主观意图，对调差结论就要小心了。希特勒在纳粹党徒中得到广泛拥戴，但这并不代表更多人的观点。</p>\n<h4 id=\"发表性偏见\"><a href=\"#发表性偏见\" class=\"headerlink\" title=\"发表性偏见\"></a>发表性偏见</h4><p>《纽约时报》曾报道：抗抑郁药百忧解、帕罗西汀等产品的生产商故意不发表更多的药物试验结果。94％ 证实这些药物有效的研究得到发表，发现这些药物无效的研究中只有14％被发表。偏见的来源并不是研究本身，而是那些能够接触到大众读者的信息载体。肯定性的研究发现相比否定性的研究发现来说，更可能被发表，从而影响我们对事实真相的判断。</p>\n<h4 id=\"记忆性偏见\"><a href=\"#记忆性偏见\" class=\"headerlink\" title=\"记忆性偏见\"></a>记忆性偏见</h4><p>1993 年，一位哈佛大学的研究人员进行了一项饮食习惯与癌症之间关系的研究。通过对比两组患病和健康女性早年的饮食习惯发现，患病组中更多的人年轻时喜欢吃高脂肪含量的食物。但是，对所有参与者多年前还没有被诊出患病的另一份调查记录显示，患病者后来回忆的饮食构成脂肪含量明显高于实际。所以，这项研究并不能揭示饮食习惯和癌症之间的关系，仅仅是告诉我们癌症是如何影响记忆的。回忆确实很神奇，但不是优质数据的可靠来源。</p>\n<h4 id=\"幸存者偏见\"><a href=\"#幸存者偏见\" class=\"headerlink\" title=\"幸存者偏见\"></a>幸存者偏见</h4><p>房间里站满高矮不等的人，让较矮的人离开自然会提高平均身高，但实际上没有一个人长高了。基金公司就是这样做的。一家大型基金公司会同时开放许多共同基金，其中每只基金跑赢标准普尔 500 指数的概率都是 50％，长期数据确实如此。两三年后，那些收益率不高的基金都被悄无声息地关闭了，剩余资产并入现存基金。此时，基金公司就可以大肆宣传他们剩下的两三只基金表现始终优于标准普尔 500 指数了。当样本中有一些或许多数据缺失，导致样本组发生改变，必然会影响分析结果。</p>\n<h4 id=\"健康用户偏见\"><a href=\"#健康用户偏见\" class=\"headerlink\" title=\"健康用户偏见\"></a>健康用户偏见</h4><p>专栏作家加里·陶布斯说：『就从最简单的角度来分析，那些忠于健康生活方式的人，按时吃药、保持健康的饮食习惯，与其他人有本质区别，这就是问题所在』。</p>\n<p>定期服用维生素的人更有可能不受疾病困扰，因为他们就是那类定期服用维生素的人。所以维生素在他们的健康方面到底发挥了多大作用，完全是另一回事。</p>\n","excerpt":"","more":"<h1 id=\"01-赤裸裸的统计学-★★★★☆\"><a href=\"#01-赤裸裸的统计学-★★★★☆\" class=\"headerlink\" title=\"01 赤裸裸的统计学 ★★★★☆\"></a>01 赤裸裸的统计学 ★★★★☆</h1><h2 id=\"这本书讲了什么？\"><a href=\"#这本书讲了什么？\" class=\"headerlink\" title=\"这本书讲了什么？\"></a>这本书讲了什么？</h2><h2 id=\"统计数学的理论\"><a href=\"#统计数学的理论\" class=\"headerlink\" title=\"统计数学的理论\"></a>统计数学的理论</h2><h3 id=\"平均数与中位数\"><a href=\"#平均数与中位数\" class=\"headerlink\" title=\"平均数与中位数\"></a>平均数与中位数</h3><p>平均数很容易受到异常值的干扰，但中位数很难受到异常值的干扰。</p>\n<p>比如美国的减税政策将使 9200 万人享受减税待遇，人均减税超过 1000 美元。乍一看就觉得政策十分惠民，但其实平均数受到了干扰，因为少部分的富翁会大幅度减税，从而拉高平均值，其实大多数人仅仅减税 100 美元。</p>\n<p>再比如在一个酒吧的吧台前，坐着 10 个人，他们的平均收入是 3.5W 美元，这时候比尔•盖茨走了进来（假设盖茨年收入 10 亿美元）。比尔•盖茨也同样的坐在了吧台前，此时他们的平均收入是 9100W 美元。如果我说这 11 个人的平均年收入是 9100W 美元，在数据上是正确的，但同时也具有误导性。</p>\n<p>所以为了避免异常值的干扰，我们可以使用中位数。还是酒吧的例子，原先坐在吧台前的 10 个人的年均收人中位数为 3.5W 美元，当比尔.盖茨入座之后，这 11 个人的年收入中位数依然为 3.5 W美元。如果将他们按照收入高低来排座的话，那么坐在第 6把凳子上的人的收入就代表了整组人收入的中位数。</p>\n<h3 id=\"标准差\"><a href=\"#标准差\" class=\"headerlink\" title=\"标准差\"></a>标准差</h3><p>标准差能够帮助我们在一大堆杂乱无章的数字中发现真理的统计数值，它能够让我们用一个独立的数字来表示距离平均数的离散程度。数据在平均值周围分布越密集，其标准差就越小，反之则越大。</p>\n<p>比如我要同时收集 100 名 飞机乘客的体重、100 名马拉松运动员的体重，假设两组人的平均体重都是 70kg。但飞机乘客的体重距离平均数的标准差要远远大于马拉松运动员，因为马拉松运动员的体重可能都差不多，但飞机乘客就不一样了，有抱在怀里的婴儿，也有胖的像个气球的人，也就是说飞机乘客的体重分布更加分散。</p>\n<p>对于任何一组数据来说，只要知道了平均数和标准差，就能进行简单的统计学分析，得出可信赖的结论。比如，美国 SAT 数学考试的平均分为 500 分，标准差为 100，大部分参学生的成绩都会在标准差范围内浮动，比如 400~600分。那么又有多少名学生的成绩会高于 720 分呢？估计不会有很多，因为这比平均分高出两个标准差还要多。</p>\n<h3 id=\"正态分布\"><a href=\"#正态分布\" class=\"headerlink\" title=\"正态分布\"></a>正态分布</h3><p>正态分布是统计学中最重要、最有用、最常见的分布之一。正态分布的数据一般都是对称的，以平均数为中轴，呈现类似于钟的形状。</p>\n<p>据华尔街日报报道，美国人甚至连在购物商场停车都呈现出正态分布，正对着商场的地方停车数量最多，也就是正态曲线的峰值，在入口左右两侧的停车数逐渐变少，即曲线两端下滑的尾巴。所以当你来到一家陌生商场，要想尽快找到出入口，比较简洁的方法就是去车多的地方看看。<a href='01%20%E8%B5%A4%E8%A3%B8%E8%A3%B8%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png%23align=left&display=inline&height=586&originHeight=586&originWidth=1144&status=done&width=827'>1535538622785-e218c3a5-09fa-44f8-95d0-7187822da3ce.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;586&amp;originHeight&#x3D;586&amp;originWidth&#x3D;1144&amp;status&#x3D;done&amp;width&#x3D;827</a></p>\n<h3 id=\"相关性与相关系数\"><a href=\"#相关性与相关系数\" class=\"headerlink\" title=\"相关性与相关系数\"></a>相关性与相关系数</h3><p>相关性体现的是两个现象之间相互关联的程度，例如在夏天，温度的高低与冰淇淋的销量就存在相关性，当温度升高时，冰淇淋的销量也会相应提高。</p>\n<p>如果其中一个变量的改变引发另一个变量朝着相同的方向变化，那么这两个变量存在正相关性，就比如身高与体重之间的关系，一般来说个子高的人体重会重些，个子矮的人体重会轻些。</p>\n<p>如果一个变量的改变引发另一个变量朝着相反的方向变化，那么这两个变量就存在负相关性，比如如锻炼与体重。</p>\n<p>相关性将两个变量的关联精炼成一个描述性数据：相关系数。相关系数是区间为 -1 到 1 的常数。相关系数为 1，表示正相关，相关系数为 -1，表示负相关。如果相关系数为零(或者接近零)，则意味着变量之间不存在有意义的联系，就比如一个人的鞋码和高考成绩之间的关系。</p>\n<h3 id=\"概率、期望值与大数定律\"><a href=\"#概率、期望值与大数定律\" class=\"headerlink\" title=\"概率、期望值与大数定律\"></a>概率、期望值与大数定律</h3><p>概率学是研究不确定事件和结果的学问，概率不会确凿的告诉我们会发生什么，但是我们通过概率计算，能够知道可能发生什么，不会发生什么。</p>\n<p>比如抛硬币，在硬币落地前，是不知道硬币到底是正面还是方面，但是我们可以知道正面的概率是 1&#x2F;2，反面的概率是 1&#x2F;2，竖着的概率是 0。</p>\n<p>很多时候，了解多重时间同时发生的概率是很有价值的。比如连续抛硬币 4 次都得到正面朝上的概率为 1&#x2F;16，那下一次得到正面朝上的概率是多少？是 1&#x2F;32 吗？不，是 1&#x2F;2，因为抛硬币是独立事件，一个事件的发生和结果不会对另外一事件产生影响。相反，今天下雨的概率与昨天是否下雨并不是相互孤立的，因为下雨作为一种天气现象，具有连续性，有时候经常连续几天都下雨。</p>\n<p>期望值是所有不同结果的和，每个结果都是由各自的概率和收益相乘而来。假设参与了掷骰子游戏，每掷一次骰子需要 $3，掷出 1 点可以获得 $1，掷出 2 点可以获得 $2，以此类推，那是否要参加这个游戏？此时我们就能计算掷一次骰子的期望值：（1+2+3+4+5+6）÷ 6&#x3D;$3.5，那我们可以参加掷骰子游戏，因为期望回报 $3.5＞游戏成本 $3。</p>\n<p>大数定律，随着实验次数的增多，结果的平均值会越来越接近期望值。也就是说，我们投一个正常的六面骰，投的次数越多，平均值就会越接近 3.5。</p>\n<h2 id=\"统计数字的陷阱\"><a href=\"#统计数字的陷阱\" class=\"headerlink\" title=\"统计数字的陷阱\"></a>统计数字的陷阱</h2><h3 id=\"正确的获取数据\"><a href=\"#正确的获取数据\" class=\"headerlink\" title=\"正确的获取数据\"></a>正确的获取数据</h3><p>统计学是基于数据的科学，我们无法从一份错误的数据中推出正确的结论，因此数据的获取就至关重要。</p>\n<p>比如在软件卸载界面做卸载理由调查时，用户有可能直接选择第一个默认选项，因此应该随机展示选项，减少默认选项干扰。</p>\n<p>在好莱坞公布的数据中，截至 2011 年，美国史上票房最高的三部电影依次是：阿凡达、泰坦尼克号、蝙蝠侠前传 2：暗夜骑士。但如果将通货膨胀考虑在内，最卖座的排名将变为：乱世佳人、星球大战Ⅳ、音乐之声。原来的冠军阿凡达在排行榜上位列第 14。</p>\n<h3 id=\"选择性的使用数据\"><a href=\"#选择性的使用数据\" class=\"headerlink\" title=\"选择性的使用数据\"></a>选择性的使用数据</h3><p>如果对某一事物的描述存在多种描述方式，那么我们使用的描述方法就会影响他人对事物的印象，甚至可以用数据去支持完全不成立的结论，比如：</p>\n<blockquote>\n<p>政客甲：我们的教育水平正变得越来越糟，2013 年有 6 成学校的考试成绩低于2012年<br>政客乙：我们的教育水平正变得越来越好，2013 年有 8 成学生的考试成绩高于2012年<br>可以发现政客甲将学校当作分析单位，政客乙是将学生作为其分析单位。如果成绩上升的学生正好来自办学规模非常大的学校，那么大部分学生在学业有所进步而大部分学校的成绩正在退步，这两者是完全有可能同时发生。</p>\n</blockquote>\n<p>纽约州就因为统计陷阱而付出的惨痛的代价，州政府出台了记分卡制度：对接受心脏搭桥手术的病人的死亡率进行统计，以便让公众在选择心脏科医生时有参考。作为心脏科医生，肯定会在意他们的记分卡，而降低死亡率最简单易行的方法就是拒绝为那些病况最严重的病人进行手术。</p>\n<p>在参与调查的心脏科医生中，有 83% 的医生表示正是由于公开了死亡率数据，一些本来可以从搭桥手术中获益的病人最终没能被安排进行手术；79% 的医生表示收集并公开死亡率数据或多或少地影响了他们的治疗决策。</p>\n<h3 id=\"统计学的偏见\"><a href=\"#统计学的偏见\" class=\"headerlink\" title=\"统计学的偏见\"></a>统计学的偏见</h3><h4 id=\"选择性偏见\"><a href=\"#选择性偏见\" class=\"headerlink\" title=\"选择性偏见\"></a>选择性偏见</h4><p>1936 年，一家杂志主办了一次规模巨大的调查，结果预测兰登将以 57％ 的支持率击败罗斯福赢得大选，而实际是罗斯福获得了 60％ 的投票。因为杂志调查的对象是有汽车和电话的人，这显然不能代表当时美国人的整体状况。所以，如果调查对象是特定的人或是有强烈的主观意图，对调差结论就要小心了。希特勒在纳粹党徒中得到广泛拥戴，但这并不代表更多人的观点。</p>\n<h4 id=\"发表性偏见\"><a href=\"#发表性偏见\" class=\"headerlink\" title=\"发表性偏见\"></a>发表性偏见</h4><p>《纽约时报》曾报道：抗抑郁药百忧解、帕罗西汀等产品的生产商故意不发表更多的药物试验结果。94％ 证实这些药物有效的研究得到发表，发现这些药物无效的研究中只有14％被发表。偏见的来源并不是研究本身，而是那些能够接触到大众读者的信息载体。肯定性的研究发现相比否定性的研究发现来说，更可能被发表，从而影响我们对事实真相的判断。</p>\n<h4 id=\"记忆性偏见\"><a href=\"#记忆性偏见\" class=\"headerlink\" title=\"记忆性偏见\"></a>记忆性偏见</h4><p>1993 年，一位哈佛大学的研究人员进行了一项饮食习惯与癌症之间关系的研究。通过对比两组患病和健康女性早年的饮食习惯发现，患病组中更多的人年轻时喜欢吃高脂肪含量的食物。但是，对所有参与者多年前还没有被诊出患病的另一份调查记录显示，患病者后来回忆的饮食构成脂肪含量明显高于实际。所以，这项研究并不能揭示饮食习惯和癌症之间的关系，仅仅是告诉我们癌症是如何影响记忆的。回忆确实很神奇，但不是优质数据的可靠来源。</p>\n<h4 id=\"幸存者偏见\"><a href=\"#幸存者偏见\" class=\"headerlink\" title=\"幸存者偏见\"></a>幸存者偏见</h4><p>房间里站满高矮不等的人，让较矮的人离开自然会提高平均身高，但实际上没有一个人长高了。基金公司就是这样做的。一家大型基金公司会同时开放许多共同基金，其中每只基金跑赢标准普尔 500 指数的概率都是 50％，长期数据确实如此。两三年后，那些收益率不高的基金都被悄无声息地关闭了，剩余资产并入现存基金。此时，基金公司就可以大肆宣传他们剩下的两三只基金表现始终优于标准普尔 500 指数了。当样本中有一些或许多数据缺失，导致样本组发生改变，必然会影响分析结果。</p>\n<h4 id=\"健康用户偏见\"><a href=\"#健康用户偏见\" class=\"headerlink\" title=\"健康用户偏见\"></a>健康用户偏见</h4><p>专栏作家加里·陶布斯说：『就从最简单的角度来分析，那些忠于健康生活方式的人，按时吃药、保持健康的饮食习惯，与其他人有本质区别，这就是问题所在』。</p>\n<p>定期服用维生素的人更有可能不受疾病困扰，因为他们就是那类定期服用维生素的人。所以维生素在他们的健康方面到底发挥了多大作用，完全是另一回事。</p>\n"},{"title":"硝烟中的 Scrum 和 XP","slug":"02 硝烟中的 Scrum 和 XP ★★★★☆","_content":"# 02 硝烟中的 Scrum 和 XP ★★★★☆\n\n## 如何编写产品待办列表 Product Backlog\n\n## 用户故事 User Story 包含以下字段：\n\n\n```\nqweqweqweqweqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\n\nqweqweqwe\n```\n\n\n* **ID：**统一标识符，⾃增⻓的数字，用来防止重命名名故事称后，无法搜索到故事。\n* **名称：**简短的、描述性的。⽐如「查看你⾃⼰的交易明细」。它必须要含义明确，这样开发⼈员和产品负责⼈才能⼤致明⽩我们说的是什么东⻄，跟其他故事区分开。它⼀般由 2 到 10 个字组成。\n* **重要性 Importance：**产品负责⼈评出⼀个数值，指⽰这个故事有多重要。例如 10 或 150，分数越⾼越重要\n\t* 我⼀直都想避免优先级这个说法，因为⼀般说来优先级 1 都表⽰最⾼优先级，如果后来有其他更重要的东⻄就⿇烦了。它的优先级评级应该是什么呢？优先级 0 ？优先级 -1？\n\t* 分数只是⽤来根据重要性对待办事项列表条⽬排序。假如 A 的分数是 20，⽽ B 的分数是 100，那仅仅是说明 B ⽐ A重 要⽽已，绝不意味着 B ⽐ A 重要五倍。如果 B 的分数是 21 ⽽不是100，含义也是⼀样的。\n\t* 最好在分数之间留出适当间隔，以防后⾯出现⼀个 C，⽐ A 重要⽽不如 B 重要。当然我们也可以给 C 打⼀个 20.5 分，但这样看上去就很难看了，所以我们还是留出间隔来！\n\t* ⽆论任何故事，只要产品负责⼈相信它会在下⼀个 Sprint 实现，那它就应该被划分到⼀个特有的重要性层次。\n* **初始估算 Initial Estimate：**团队的初步估算，表⽰与其他故事相⽐，完成该故事所需的⼯作量。\n\t* 最⼩的单位是故事点，1 故事点 = 1 理想化的人/天\n\t* 假设一个功能需要 3 个人研发 4 天，那么就是 12 故事点\n\t* 不需要保证估值绝对⽆误，⽐如两个故事点的故事就应该花两天时间，⽽是要保证相对的正确性，比如两个点的故事所花费的时间应该是四个点的故事所需的⼀半\n* **如何做演示 How To Demo：**本质上是一个简单的测试规范。「先这样做，然后那样做，得到 XXX 结果」\n* **注解 Notes：**相关信息、解释说明和对其他资料的引用等等，一般都非常简短。\n\n我们曾试过很多字段，但最后发现，只有上⾯的六个字段会⼀直使⽤下去。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png%23align=left&display=inline&height=1230&name=screely-1568170309766.png&originHeight=1230&originWidth=2120&size=343655&status=done&width=2120'>1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png#align=left&display=inline&height=1230&name=screely-1568170309766.png&originHeight=1230&originWidth=2120&size=343655&status=done&width=2120</a>screely-1568170309766.png\n\n\n## 额外的用户故事字段\n有时为了便于产品负责⼈判断优先级别，我们也会在产品待办事项列表中使⽤⼀些其他字段：\n\n* **类别 Track：**当前故事的⼤致分类，例如「后台系统」或「优化」。这样产品负责⼈就可以很容易选出所有的「优化」条⽬，把它们的级别都设得⽐较低，类似的操作执⾏起来都很⽅便。\n* **组件 Components：**通常在⽂档中⽤复选框实现，例如「数据库」「服务器」「客户端」。团队或者产品负责⼈可以在这⾥进⾏标识，以明确哪些技术组件在这个故事的实现中会被包含进来。这种做法在多个 Scrum 团队协作的时候很有⽤。⽐如⼀个后台系统团队和⼀个客户端团队，他们很容易知道⾃⼰应当对哪些故事负责。\n* **请求者 Requestor：**产品负责⼈可能需要记录是哪个客户或相关⼲系⼈最先提出了这项需求，在后续开发过程中向他提供反馈。\n* **Bug 跟踪 ID Bug tracking ID：**如果你有个 Bug 跟踪系统，那么了解⼀下故事与 Bug 之间的直接联系就会对你很有帮助。\n\n\n## 如何让产品待办事项列表停留在业务层次上\n如果产品负责⼈有技术相关的背景，那他就可能添加这样⼀个故事「给 Events 表添加索引」。他为啥要这么做？真正的潜在⽬标也许是要提⾼在后台系统中搜索事件表单的响应速度。\n\n到后⾯我们可能会发现：索引并不是带来表单速度变慢的瓶颈。也许原因与索引完全不相⼲。指出如何解决问题的应该是开发团队，产品负责⼈只需要关注业务⽬标。\n\n只要发现这种⾯向技术的故事，我⼀般都会问产品负责⼈「但是为什么呢」这样的问题，⼀直问下去，直到我们发现内在的⽬标为⽌。然后再⽤真正的⽬标来改写这个故事：提⾼在后台系统中搜索并⽣成表单的响应速度。\n\n最开始的技术描述只会作为⼀个注解存在，为事件表添加索引可能会解决这个问题。\n\n\n# 如何制定 Sprint 计划\n\n## ⽆休⽌的 Sprint 计划会议\n在 Sprint 计划会议中最困难的事情是：\n\n* ⼈们认为他们花不了多⻓时间\n* 但他们会的！\n\nScrum 中的⼀切事情都有时间盒 Time Box。我喜欢这条简单如⼀的规则，并⼀直⼒求贯彻到底。\n\n假如 Sprint 计划会议接近尾声，但仍然没有得出 Sprint ⽬标或者 Sprint Backlog，这时该怎么办？我们要打断它么？还是再延⻓⼀个⼩时？或者到时间就结束会议，然后明天继续？\n\n最好的方法是打断会议，这个 Sprint 让⼤家不太好过。但我们应该看到它的正⾯影响，整个团队都从中获益匪浅，下个 Sprint 计划会议会更有效率。另外，如果他们从前还觉得你定下的会议时间过⻓的话，下次他们的抵制情绪就会少⼀些了。\n\n学会按照时间盒安排⼯作，学会制定合乎情理的时间盒，这对会议⻓度和 Sprint ⻓度同样有帮助。\n\n\n## 确认 Sprint 长度\n产品负责⼈⼀般会喜欢短⼀点的 Sprint，⽽开发⼈员喜欢时间⻓的 Sprint。所以 Sprint 的⻓度是妥协后的产物。做过多次实验后，我们最终总结出了最喜欢的⻓度：三个星期。绝⼤部分团队的 Sprint ⻓度都是三周。它不⻓不短，既让我们拥有⾜够的敏捷性，⼜让团队进⼊心流的状态，同时还可以解决 Sprint 中出现的问题。\n\n\n## 确定 Sprint ⽬标\n出于某些原因，制定 Sprint ⽬标确实很困难。但我发现即使是像挤⽛膏⼀样把它挤出来，那也是值得的。半死不活的⽬标也⽐啥都没有强。这个⽬标可以是挣更多的钱，或者完成优先级排到最前⾯的三个故事，或打动 CEO，或把系统做得⾜够好，可以作为 Beta 版发布给真正的⽤户使⽤，或添加基本的后台系统⽀持等等。\n\n它必须⽤业务术语表达，⽽不是技术词汇，让团队以外的⼈也能够理解。\n\n\n## 决定 Sprint 要包含的故事\n决定哪些故事需要在这个 Sprint 中完成，是 Sprint 计划会议的⼀个主要活动。更具体地说，就是哪些故事需要从产品待办事项列表拷⻉到 Sprint Backlog 中，如下图所⽰。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png%23align=left&display=inline&height=1230&name=screely-1568122769088.png&originHeight=1230&originWidth=2120&size=117456&status=done&width=2120'>1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png#align=left&display=inline&height=1230&name=screely-1568122769088.png&originHeight=1230&originWidth=2120&size=117456&status=done&width=2120</a>screely-1568122769088.png\n\n每个矩形都表⽰⼀个故事，按重要性排序。最重要的故事在列表顶部。矩形尺⼨表⽰故事⼤⼩（也就是以故事点估算的时间⻓短。括号的⾼度表⽰团队估算的⽣产率 Estimated Velocity，也即团队认为他们在下⼀个 Sprint 中所能完成的故事点数。\n\n在 Sprint 中包含多少故事由团队决定，⽽不是产品负责⼈或其他⼈。这便引发了两个问题：\n\n* 团队怎么决定把哪些故事放到 Sprint ⾥⾯？\n* 产品负责⼈怎么影响他们的决定？\n\n\n## 产品负责⼈如何对 Sprint 放哪些故事产⽣影响\n假设在 Sprint 计划会议中我们遇到下图所⽰的情况。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png%23align=left&display=inline&height=1230&name=screely-1568122776640.png&originHeight=1230&originWidth=2120&size=109748&status=done&width=2120'>1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png#align=left&display=inline&height=1230&name=screely-1568122776640.png&originHeight=1230&originWidth=2120&size=109748&status=done&width=2120</a>screely-1568122776640.png\n\n产品负责⼈很失望，因为故事 D 不会被放到 Sprint ⾥⾯。那他在 Sprint 计划会议上能做些什么？\n\n* ⾸先，他可以重新设置优先级。如果他给故事 D 赋予最⾼的重要级别，团队就不得不把它先放到 Sprint⾥⾯来，需要把 C 扔出去。\n* 其次，他可以缩⼩故事 A 的范围，直到团队相信故事 D 能在这个 Sprint ⾥完成为⽌\n* 最后，他还可以拆分故事。产品负责⼈判断出故事A中某些⽅⾯实际并不重要，所以他把 A 分成两个故事 A1 和 A2，赋给它们不同的重要级别。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png%23align=left&display=inline&height=1230&name=screely-1568122784593.png&originHeight=1230&originWidth=2120&size=123423&status=done&width=2120'>1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png#align=left&display=inline&height=1230&name=screely-1568122784593.png&originHeight=1230&originWidth=2120&size=123423&status=done&width=2120</a>screely-1568122784593.png\n\n\n## 团队怎样决定把哪些故事放到 Sprint ⾥⾯\n下图中，左边是 Sprint 启动时的估算的⽣产率，右边是 Sprint 结束时的实际⽣产率。每个矩形都是⼀个故事，⾥⾯的数字表⽰这个故事的原始估算。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png%23align=left&display=inline&height=1230&name=screely-1568122792044.png&originHeight=1230&originWidth=2120&size=124879&status=done&width=2120'>1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png#align=left&display=inline&height=1230&name=screely-1568122792044.png&originHeight=1230&originWidth=2120&size=124879&status=done&width=2120</a>screely-1568122792044.png\n\n这个数字并不精确。但它依然很有⽤，尤其是与啥都没有相⽐，感觉就更明显了。它可以给你⼀些硬⽣⽣的事实：抛开具体原因，我们曾经以为能完成这么多，⽽实际完成的⼯作与当初预计的还是有区别。\n\n我们还可以看看团队的历史，看看他们在过去⼏个 Sprint ⾥⾯的⽣产率是多少，然后假定在下⼀个 Sprint ⾥⾯⽣产率差不多不变。\n\n这项技术也叫昨⽇天⽓ Yesterday's Weather。要想使⽤该技术，必须满⾜两个条件：\n\n* 团队已经完成了⼏个 Sprint，这样就可以得到统计数据\n* 以⼏乎完全相同的⽅式，团队⻓度不变，⼯作状态等条件不变来进⾏下⼀个 Sprint\n\n再复杂⼀点⼉，还可以进⾏简单的资源计算。假设我们在计划⼀个 4 ⼈团队 3 星期的 Sprint，15个⼯作⽇。Lisa 会休假两天，Dave 只能投⼊ 50 ％的时间，另外还会休假⼀天，把这些加到⼀起，这个 Sprint ⼀共有 50 个可⽤的⼈/天。\n\n但实际中，估算的单位是故事点，也就是理想化的人/天。⼀个理想化的⼈/天是完美、⾼效、不受打扰的⼀天，但这种情况太少⻅了。我们还必须考虑到各种因素，例如要把未计划到的⼯作添加到Sprint 中、⼈们患病不能⼯作等等。\n\n那我们的估算⽣产率肯定要⽐ 50 少，少多少呢？我们引⼊投⼊程度 Focus Factor 这个词来看下。\n\n> 投⼊程度⽤来估算团队会在 Sprint 中投⼊多少精⼒。投⼊程度低，就表⽰团队估计会受到很⼤⼲扰，或者他们觉得⾃⼰的时间估算太过理想化。要想得出⼀个合理的投⼊程度，最好的办法就是看看上⼀个 Sprint的 值，对前⼏个 Sprint 取平均值⾃然更好。  \n投入程度 = 故事点数 ÷ 估算生产率。假设上个 Sprint 中，⼯作了 45 个⼈/天，完成 18 个故事点，那么投入程度为 40%。\n\n那么就能得出，本次 Sprint 估算生产率是 20 个故事点。\n\n昨⽇天⽓⽤起来很⽅便，但需要考虑⼀些常识：\n\n* 如果上⼀个 Sprint ⼲得很糟，是因为⼤部分成员都病了⼀星期。那你差不多可以放⼼假设这次运⽓不会那么坏，给这个 Sprint 设个⾼点的投⼊程度\n* 如果团队最近刚装了⼀个执⾏速度快如闪电的持续集成系统，那你也可以因此提⾼⼀下投⼊程度\n* 如果有新⼈加⼊这个 Sprint，就得把他的培训占⽤的精⼒也算进来，降低投⼊程度\n\n只要条件允许，你就应该看看从前的 Sprint，计算出平均数，这样可以得到更合理的估算。\n\n如果这是个全新的团队，没有任何数据怎么办？你可以参考⼀下在类似条件下⼯作的团队，他们的投⼊程度数值是多少。\n\n如果没有其他团队可以参考怎么办？随便猜⼀个数作为投⼊程度吧。毕竟这个猜测只会在第⼀个Sprint ⾥⾯使⽤。过了这次以后你就有了历史数据可以分析，然后对投⼊程度和估算⽣产率做出不断的改进。\n\n我在新团队中使⽤的默认投⼊程度通常是 70％，因为这是其他⼤多数团队都能达到的数值。\n\n\n## 使⽤计划扑克做时间估算\n估算是⼀项团队活动，通常每个成员都会参与所有故事的估算。为啥要每个⼈都参加？\n\n* 在计划的时候，我们⼀般都还不知道到底谁会来实现哪个故事的哪个部分\n* 每个故事⼀般有好⼏个⼈参与，也包括不同类型的专⻓，⽤户界⾯设计、编程、测试等\n* 团队成员必须要对故事内容有⼀定的理解才能进⾏估算。要求每个⼈都做估算，我们就可以确保他们都理解了每个条⽬的内容。这样就为⼤家在 Sprint 中相互帮助夯实了基础，也有助于故事中的重要问题被尽早发现。\n* 如果要求每个⼈都对故事做估算，我们就会常常发现两个⼈对同⼀个故事的估算结果差异很⼤。我们应该尽早发现这种问题并就此进⾏讨论。\n\n如果让整个团队进⾏估算，通常那个对故事理解最透彻的⼈会第⼀个发⾔。不幸的是，这会严重影响其他⼈的估算。\n\n> 这里就不太懂，比如设计师如何预估需要技术实现的 Story？设计师又不懂技术  \n有⼀项很优秀的技术可以避免这⼀点，它的名字是计划扑克，它是 Mike Cohn 创造出来的。\n\n每个⼈都会得到如下图所⽰的 13 张纸牌。在估算故事的时候，每个⼈都选出⼀张纸牌来表⽰他的时间估算，以故事点的⽅式表⽰，并把它正⾯朝下扣在桌上。所有⼈都完成以后，桌上的纸牌会被同时揭开。这样每个⼈都会被迫进⾏⾃我思考，⽽不是依赖于其他⼈估算的结果。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png%23align=left&display=inline&height=1230&name=screely-1568172384831.png&originHeight=1230&originWidth=2120&size=1102278&status=done&width=2120'>1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png#align=left&display=inline&height=1230&name=screely-1568172384831.png&originHeight=1230&originWidth=2120&size=1102278&status=done&width=2120</a>screely-1568172384831.png\n\n如果在两个估算之间有着巨⼤差异，团队就会就此进⾏讨论，并试图让⼤家对故事内容达成共识。他们也许会进⾏任务分解，之后再重新估算。这样的循环会往复进⾏，直到时间估算趋于⼀致为⽌，也就是每个⼈对这个故事的估算都差不多相同。\n\n重要的是，我们必须提醒团队成员，他们要对这个故事中所包含的全部⼯作进⾏估算，⽽不是他们⾃⼰负责的部分⼯作。测试⼈员不能只估算测试⼯作。\n\n注意，这⾥的数字顺序不是线性的。例如在 40 和 100 之间就没有数字。为什么这样？\n\n这是因为，⼀旦时间的估算值⽐较⼤，其精确度就很难把握；这样做就可以避免⼈们对估算精确度产⽣错误的印象。如果⼀个故事的估算值是差不多 20 个故事点，它到底应该是 20 还是 18 还是 21，其实⽆关紧要。我们知道的就是它是⼀个很⼤的故事，很难估算。所以 20 只是⼀个粗略估计。\n\n需要进⾏更精确的估算？那就把故事分拆，去估算那些更⼩的故事！\n\n下⾯这些卡⽚⽐较特殊：\n\n* 0：这个故事已经完成了或者这个故事根本没啥东⻄，⼏分钟就能搞定\n* ？：我⼀点概念都没有。没想法\n* 咖啡杯：我太累了，先歇会吧\n\n\n# 我们怎样让别⼈了解我们的 Sprint\n在讲述 Scrum 的书和⽂章中，⼤多数都是⽤⼩时⽽不是天数来估算时间。我们也这样⼲过。我们的通⽤⽅程为 1 个有效的⼈/天＝6 个有效的⼈/⼩时。\n\n现在我们已经不这么⼲了，⾄少在⼤部分团队中如此。原因如下：\n\n* ⼈/⼩时的粒度太细了，它会导致太多⼩到 1—2 个⼩时的任务出现，然后就会引发微观管理\n* 最后发现实际上每个⼈还是按照⼈/天的⽅式来思考，只是在填写数据时把它乘 6 就得到了⼈/⼩时。「嗯……这个任务要花⼀天。哦，对，我要写⼩时数，那我就写 6 ⼩时好了」\n* 两种不同的单位会导致混乱。「这个估算的单位是啥？⼈/天还是⼈/⼩时？」\n\n\n# 我们怎样布置房间\n**让团队坐在一起**\n\n⼤家都懒得动。⾄少我⼯作的地⽅是这样的。他们不想收拾起⾃⼰的零碎⼉、拔下计算机电源、把东⻄都挪到新的电脑桌上，然后把⼀切再插回去。挪的距离越短，这种抵触情绪就越强烈。「⽼⼤，⼲嘛呢，动这 5 ⽶有啥⽤？」\n\n这点深有体会。靠的越近、交流的会越频繁。之前刚工作的时候，和 leader 面对面，交流的一般。后来察觉到这个因素，搬到 leader 的旁边，交流频率显著上升，时不时的讨论下。\n\n坐在一起有以下含义：\n\n* 互相听到：所有⼈都可以彼此交谈，不必⼤声喊，不必离开座位\n* 互相看到：所有⼈都可以看到彼此，都能看到任务板，不⽤⾮得近到可以看清楚内容，但⾄少可以看到个⼤概\n* 隔离：如果你们整个团队突然站起来，⾃发形成⼀个激烈的设计讨论，团队外的任何⼈都不会被打扰到。反之亦然。\n\n隔离并不是意味着这个团队需要被完全隔离起来。在⼀个格⼦间的环境中，如果你的团队拥有⾃⼰的格⼦，⽽且隔间的墙⾜够⼤，可以屏蔽墙内外的⼤多数噪⾳，这也就⾜够了。\n\n\n# 我们怎么做 Sprint 回顾\n**我们怎样才能在下个 Sprint 中做得更好：**\n\n* Good：如果我们可以重做同⼀个 Sprint，哪些做法可以保留？\n* Could Have Done Better：如果我们可以重做同⼀个 Sprint，哪些做法需要改变？\n* Improvements：有关将来如何改进的具体想法？\n\n**定义验收标准：**\n\n* 必须发布：重要性 >＝ 100 的 User Story\n* 应该发布：重要性在 50—99 之间\n* 稍后发布：重要性在 25—49 之间的条⽬也都是需要的，不过可以在 1.1 版中发布\n* 不确定的：重要性 <25 的条⽬都是不确定的，也许永远不会⽤到\n\n\n# 我们怎样结合使用 Scrum 和 XP\nScrum 注重的是管理和组织实践，⽽ XP 关注的是实际的编程实践。这就是为什么它们可以很好地协同⼯作，它们解决的是不同领域的问题，可以互为补充，相得益彰。\n\n\n## 结对编程\n\n* 结对编程可以提⾼代码质量\n* 结对编程可以让团队的精⼒更加集中。⽐如坐在你后⾯的那个⼈会提醒你，这个东⻄真的是本次 Sprint 必需的吗？\n* 令⼈惊奇的是，很多强烈抵制结对编程的开发⼈员根本就没有尝试过，⽽⼀旦尝试之后就会迅速喜欢上它\n* 结对编程令⼈精疲⼒竭，不能全天都这样做\n* 常常更换结对是有好处的\n* 结对编程可以增进团队间的知识传播，速度快到令⼈难以想象\n* 有些⼈就是不习惯结对编程。不要因为⼀个优秀的开发⼈员不习惯结对编程就把他置之不理\n* 可以把代码审查作为结对编程的替代⽅案\n* 领航员（不⽤键盘的员工）应该⾃⼰也有⼀台机器。不是⽤来开发，⽽是在需要的时候稍稍做⼀些探索尝试、当司机（使⽤键盘的员工）、遇到难题的时候查看⽂档，等等\n* 不要强制⼤家使⽤结对编程。⿎励他们，提供合适的⼯具，让他们按照⾃⼰的节奏去尝试\n\n\n## 测试驱动开发 TDD\n测试驱动开发意味着你要先写⼀个⾃动测试，然后编写恰好够⽤的代码，让它通过这个测试，接着对代码进⾏重构，主要是提⾼它的可读性和消除重复。整理⼀下，然后继续。\n\n⼈们对测试驱动开发有着各种看法：\n\n* TDD 很难，开发⼈员需要花上⼀定时间才能掌握。实际上，往往问题并不在于你⽤了多少精⼒去教学、辅导和演⽰。多数情况下，开发⼈员掌握它的唯⼀⽅式就是跟⼀个熟悉 TDD 的⼈⼀起结对编程，⼀旦掌握以后，他就会受到彻底的影响，从此再也不想使⽤其他⽅式⼯作。\n* TDD 对系统设计的正⾯影响特别⼤。\n* 在新产品中，需要过上⼀段时间，TDD 才能开始应⽤并有效运⾏，尤其是⿊盒集成测试。但是回报来得⾮常快。\n* 投⼊⾜够的时间，来保证⼤家可以很容易地编写测试。这意味着要有合适的⼯具、有经验的⼈、提供合适的⼯具类或基类，等等。\n\n\n# 我们怎样做测试\n\n## 如果没有任何事情需要测试，测试⼈员该做什么？\n⾸先，他应该要为测试做准备。包括编写测试规范，准备测试环境等等。开发⼈员有开发完的功能可供测试以后，就不⽤再等了，测试先⽣可以⽴刻开始测试。\n\n如果团队在做 TDD，从第⼀天开始，⼤家都会花时间来编写测试代码，此时测试⼈员应该跟编写测试代码的开发⼈员⼀起结对编程。如果测试⼈员根本不会编程，他也应该跟开发⼈员结对，即便他只能坐在⼀边看，让开发⼈员敲键盘。相对于好的开发⼈员，好的测试⼈员常常能想出多种不同类型的测试，所以他们可以互补。\n\n如果团队没有实施 TDD，或者没有⾜够的测试⽤例需要编写，那测试⼈员可以去随意做⼀些能够帮助团队达成 Sprint ⽬标的事情，就像其他团队成员⼀样。如果测试⼈员会编程，那⾃然再好不过。如果他不会，你的团队就得找出在 Sprint 中需要完成的、⽽且不⽤编程的⼯作。\n\n\n# 我们怎样管理多个 Scrum 团队\n在多个 Scrum 团队开发同⼀个产品的状况下，很多事情都会变得更加复杂、棘⼿。这个问题普遍存在，跟 Scrum 没太⼤关系。更多开发者＝更多复杂情况。\n\n有两个核⼼问题：\n\n* 要创建多少个团队？\n* 如何把⼈员分配到各个团队中？\n\n\n## 创建多少个团队？\n单个 Scrum 团队最多包括 11 个⼈。⼤家可以⼀起⼯作，但是效果不好。每天的 Scrum 会议基本上都会超过 15 分钟。每个⼈都不太清楚其他⼈在做什么，所以整个状态就有些混乱。Scrum Master 很难保证每个⼈都在向同⼀个⽬标努⼒，也不太能找得到时间来解决发现的所有问题。\n\n有⼈可能会建议说，把⼤团队分成两个团队。但这样做情况就⼀定会好转么？未必。\n\n如果这个团队在实施 Scrum ⽅⾯很有经验，也习惯这种做法，⽽且能够以符合其内在逻辑的⽅式切分产品，把它分成两个独⽴的部分，保证各⾃的源代码不会重叠，那把团队分割就是⼀个好主意。不然我还是会坚持⽤⼀个团队，尽管⼤团队存在种种缺陷。\n\n我的经验是，宁可团队数量少，⼈数多，也⽐弄上⼀⼤堆总在互相⼲扰的⼩团队强。要想拆分⼩团队，必须确保他们彼此之间不会产⽣互相⼲扰！\n\n\n## 最佳的团队规模\n在我读过的⼤多数书中，5 到 9 个⼈被公认为是最佳的团队构成⼈数。\n\n从到⽬前为⽌观察到的情况来看，我同意这种说法。不过我会建议说 3 到 8 个⼈。⽽且我相信，为了达到这种团队规模，花上⼀定代价还是值得的。\n\n假设你有⼀个 10 ⼈的 Scrum 团队。那么就考虑⼀下把最差的 2 个⼈踢出去吧。\n\n假设你有两个不同的产品，每个产品都由⼀个 3 ⼈团队负责，进度都很慢。也许可以把他们合并成有 6 个⼈的团队，同时负责这两个产品。然后让其中⼀个产品负责⼈离开这⾥，或者给他顾问之类的⾓⾊。\n\n假设你的团队有 12 个⼈，因为代码库很烂，所以两个团队不可能独⽴在上⾯⼯作。那就应该认真投⼊时间、精⼒修复代码库，⽽不是增加新功能，直到可以分拆团队为⽌。这种投资很快就可以得到回报。\n\n\n## 我们怎样在团队中分配⼈⼿\n有多个团队开发同⼀个产品时，⼀般有两种分配⼈⼿的策略：\n\n* 让⼀个指定的⼈来做分配，例如产品负责⼈或 Scrum Master\n* 让团队⾃⼰决定\n\n我们这三种全都⽤过。三种？是的，策略 1，策略 2，还有两者的组合。我们发现两者组合以后的效果最好。\n\n在 Sprint 计划会议之前，产品负责⼈和 Scrum Master ⼀起开团队分配会，讨论是否需要重新分配。也许会合并两个团队，或者调换某个⼈。我们就⼀些问题达成⼀致，并写到团队分配提案中，在Sprint 计划会议上进⾏讨论。\n\n在 Sprint 计划会议上，我们⾸先遍历产品待办事项列表中优先级最⾼的条⽬。然后团队领导说「各位，我们建议下⼀个 Sprint 像下⾯这样分配⼈⼿。」\n\n你们看，我们会从 4 个团队变成 3 个，每个团队中的⼈员名单已列出来了。你们可以凑到⼀块，⾃⼰商量⼀下要墙上的哪块地⽅。\n\n产品负责人和 Scrum Master 耐⼼地等着⼤家在房间⾥转悠，直到他们分成 3 组，各⾃站在⼀块空墙下。","source":"_posts/02 硝烟中的 Scrum 和 XP ★★★★☆.md","raw":"---\ntitle: 硝烟中的 Scrum 和 XP\nslug: xioayan-scrm-xp\n---\n# 02 硝烟中的 Scrum 和 XP ★★★★☆\n\n## 如何编写产品待办列表 Product Backlog\n\n## 用户故事 User Story 包含以下字段：\n\n\n```\nqweqweqweqweqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\n\nqweqweqwe\n```\n\n\n* **ID：**统一标识符，⾃增⻓的数字，用来防止重命名名故事称后，无法搜索到故事。\n* **名称：**简短的、描述性的。⽐如「查看你⾃⼰的交易明细」。它必须要含义明确，这样开发⼈员和产品负责⼈才能⼤致明⽩我们说的是什么东⻄，跟其他故事区分开。它⼀般由 2 到 10 个字组成。\n* **重要性 Importance：**产品负责⼈评出⼀个数值，指⽰这个故事有多重要。例如 10 或 150，分数越⾼越重要\n\t* 我⼀直都想避免优先级这个说法，因为⼀般说来优先级 1 都表⽰最⾼优先级，如果后来有其他更重要的东⻄就⿇烦了。它的优先级评级应该是什么呢？优先级 0 ？优先级 -1？\n\t* 分数只是⽤来根据重要性对待办事项列表条⽬排序。假如 A 的分数是 20，⽽ B 的分数是 100，那仅仅是说明 B ⽐ A重 要⽽已，绝不意味着 B ⽐ A 重要五倍。如果 B 的分数是 21 ⽽不是100，含义也是⼀样的。\n\t* 最好在分数之间留出适当间隔，以防后⾯出现⼀个 C，⽐ A 重要⽽不如 B 重要。当然我们也可以给 C 打⼀个 20.5 分，但这样看上去就很难看了，所以我们还是留出间隔来！\n\t* ⽆论任何故事，只要产品负责⼈相信它会在下⼀个 Sprint 实现，那它就应该被划分到⼀个特有的重要性层次。\n* **初始估算 Initial Estimate：**团队的初步估算，表⽰与其他故事相⽐，完成该故事所需的⼯作量。\n\t* 最⼩的单位是故事点，1 故事点 = 1 理想化的人/天\n\t* 假设一个功能需要 3 个人研发 4 天，那么就是 12 故事点\n\t* 不需要保证估值绝对⽆误，⽐如两个故事点的故事就应该花两天时间，⽽是要保证相对的正确性，比如两个点的故事所花费的时间应该是四个点的故事所需的⼀半\n* **如何做演示 How To Demo：**本质上是一个简单的测试规范。「先这样做，然后那样做，得到 XXX 结果」\n* **注解 Notes：**相关信息、解释说明和对其他资料的引用等等，一般都非常简短。\n\n我们曾试过很多字段，但最后发现，只有上⾯的六个字段会⼀直使⽤下去。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png%23align=left&display=inline&height=1230&name=screely-1568170309766.png&originHeight=1230&originWidth=2120&size=343655&status=done&width=2120'>1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png#align=left&display=inline&height=1230&name=screely-1568170309766.png&originHeight=1230&originWidth=2120&size=343655&status=done&width=2120</a>screely-1568170309766.png\n\n\n## 额外的用户故事字段\n有时为了便于产品负责⼈判断优先级别，我们也会在产品待办事项列表中使⽤⼀些其他字段：\n\n* **类别 Track：**当前故事的⼤致分类，例如「后台系统」或「优化」。这样产品负责⼈就可以很容易选出所有的「优化」条⽬，把它们的级别都设得⽐较低，类似的操作执⾏起来都很⽅便。\n* **组件 Components：**通常在⽂档中⽤复选框实现，例如「数据库」「服务器」「客户端」。团队或者产品负责⼈可以在这⾥进⾏标识，以明确哪些技术组件在这个故事的实现中会被包含进来。这种做法在多个 Scrum 团队协作的时候很有⽤。⽐如⼀个后台系统团队和⼀个客户端团队，他们很容易知道⾃⼰应当对哪些故事负责。\n* **请求者 Requestor：**产品负责⼈可能需要记录是哪个客户或相关⼲系⼈最先提出了这项需求，在后续开发过程中向他提供反馈。\n* **Bug 跟踪 ID Bug tracking ID：**如果你有个 Bug 跟踪系统，那么了解⼀下故事与 Bug 之间的直接联系就会对你很有帮助。\n\n\n## 如何让产品待办事项列表停留在业务层次上\n如果产品负责⼈有技术相关的背景，那他就可能添加这样⼀个故事「给 Events 表添加索引」。他为啥要这么做？真正的潜在⽬标也许是要提⾼在后台系统中搜索事件表单的响应速度。\n\n到后⾯我们可能会发现：索引并不是带来表单速度变慢的瓶颈。也许原因与索引完全不相⼲。指出如何解决问题的应该是开发团队，产品负责⼈只需要关注业务⽬标。\n\n只要发现这种⾯向技术的故事，我⼀般都会问产品负责⼈「但是为什么呢」这样的问题，⼀直问下去，直到我们发现内在的⽬标为⽌。然后再⽤真正的⽬标来改写这个故事：提⾼在后台系统中搜索并⽣成表单的响应速度。\n\n最开始的技术描述只会作为⼀个注解存在，为事件表添加索引可能会解决这个问题。\n\n\n# 如何制定 Sprint 计划\n\n## ⽆休⽌的 Sprint 计划会议\n在 Sprint 计划会议中最困难的事情是：\n\n* ⼈们认为他们花不了多⻓时间\n* 但他们会的！\n\nScrum 中的⼀切事情都有时间盒 Time Box。我喜欢这条简单如⼀的规则，并⼀直⼒求贯彻到底。\n\n假如 Sprint 计划会议接近尾声，但仍然没有得出 Sprint ⽬标或者 Sprint Backlog，这时该怎么办？我们要打断它么？还是再延⻓⼀个⼩时？或者到时间就结束会议，然后明天继续？\n\n最好的方法是打断会议，这个 Sprint 让⼤家不太好过。但我们应该看到它的正⾯影响，整个团队都从中获益匪浅，下个 Sprint 计划会议会更有效率。另外，如果他们从前还觉得你定下的会议时间过⻓的话，下次他们的抵制情绪就会少⼀些了。\n\n学会按照时间盒安排⼯作，学会制定合乎情理的时间盒，这对会议⻓度和 Sprint ⻓度同样有帮助。\n\n\n## 确认 Sprint 长度\n产品负责⼈⼀般会喜欢短⼀点的 Sprint，⽽开发⼈员喜欢时间⻓的 Sprint。所以 Sprint 的⻓度是妥协后的产物。做过多次实验后，我们最终总结出了最喜欢的⻓度：三个星期。绝⼤部分团队的 Sprint ⻓度都是三周。它不⻓不短，既让我们拥有⾜够的敏捷性，⼜让团队进⼊心流的状态，同时还可以解决 Sprint 中出现的问题。\n\n\n## 确定 Sprint ⽬标\n出于某些原因，制定 Sprint ⽬标确实很困难。但我发现即使是像挤⽛膏⼀样把它挤出来，那也是值得的。半死不活的⽬标也⽐啥都没有强。这个⽬标可以是挣更多的钱，或者完成优先级排到最前⾯的三个故事，或打动 CEO，或把系统做得⾜够好，可以作为 Beta 版发布给真正的⽤户使⽤，或添加基本的后台系统⽀持等等。\n\n它必须⽤业务术语表达，⽽不是技术词汇，让团队以外的⼈也能够理解。\n\n\n## 决定 Sprint 要包含的故事\n决定哪些故事需要在这个 Sprint 中完成，是 Sprint 计划会议的⼀个主要活动。更具体地说，就是哪些故事需要从产品待办事项列表拷⻉到 Sprint Backlog 中，如下图所⽰。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png%23align=left&display=inline&height=1230&name=screely-1568122769088.png&originHeight=1230&originWidth=2120&size=117456&status=done&width=2120'>1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png#align=left&display=inline&height=1230&name=screely-1568122769088.png&originHeight=1230&originWidth=2120&size=117456&status=done&width=2120</a>screely-1568122769088.png\n\n每个矩形都表⽰⼀个故事，按重要性排序。最重要的故事在列表顶部。矩形尺⼨表⽰故事⼤⼩（也就是以故事点估算的时间⻓短。括号的⾼度表⽰团队估算的⽣产率 Estimated Velocity，也即团队认为他们在下⼀个 Sprint 中所能完成的故事点数。\n\n在 Sprint 中包含多少故事由团队决定，⽽不是产品负责⼈或其他⼈。这便引发了两个问题：\n\n* 团队怎么决定把哪些故事放到 Sprint ⾥⾯？\n* 产品负责⼈怎么影响他们的决定？\n\n\n## 产品负责⼈如何对 Sprint 放哪些故事产⽣影响\n假设在 Sprint 计划会议中我们遇到下图所⽰的情况。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png%23align=left&display=inline&height=1230&name=screely-1568122776640.png&originHeight=1230&originWidth=2120&size=109748&status=done&width=2120'>1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png#align=left&display=inline&height=1230&name=screely-1568122776640.png&originHeight=1230&originWidth=2120&size=109748&status=done&width=2120</a>screely-1568122776640.png\n\n产品负责⼈很失望，因为故事 D 不会被放到 Sprint ⾥⾯。那他在 Sprint 计划会议上能做些什么？\n\n* ⾸先，他可以重新设置优先级。如果他给故事 D 赋予最⾼的重要级别，团队就不得不把它先放到 Sprint⾥⾯来，需要把 C 扔出去。\n* 其次，他可以缩⼩故事 A 的范围，直到团队相信故事 D 能在这个 Sprint ⾥完成为⽌\n* 最后，他还可以拆分故事。产品负责⼈判断出故事A中某些⽅⾯实际并不重要，所以他把 A 分成两个故事 A1 和 A2，赋给它们不同的重要级别。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png%23align=left&display=inline&height=1230&name=screely-1568122784593.png&originHeight=1230&originWidth=2120&size=123423&status=done&width=2120'>1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png#align=left&display=inline&height=1230&name=screely-1568122784593.png&originHeight=1230&originWidth=2120&size=123423&status=done&width=2120</a>screely-1568122784593.png\n\n\n## 团队怎样决定把哪些故事放到 Sprint ⾥⾯\n下图中，左边是 Sprint 启动时的估算的⽣产率，右边是 Sprint 结束时的实际⽣产率。每个矩形都是⼀个故事，⾥⾯的数字表⽰这个故事的原始估算。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png%23align=left&display=inline&height=1230&name=screely-1568122792044.png&originHeight=1230&originWidth=2120&size=124879&status=done&width=2120'>1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png#align=left&display=inline&height=1230&name=screely-1568122792044.png&originHeight=1230&originWidth=2120&size=124879&status=done&width=2120</a>screely-1568122792044.png\n\n这个数字并不精确。但它依然很有⽤，尤其是与啥都没有相⽐，感觉就更明显了。它可以给你⼀些硬⽣⽣的事实：抛开具体原因，我们曾经以为能完成这么多，⽽实际完成的⼯作与当初预计的还是有区别。\n\n我们还可以看看团队的历史，看看他们在过去⼏个 Sprint ⾥⾯的⽣产率是多少，然后假定在下⼀个 Sprint ⾥⾯⽣产率差不多不变。\n\n这项技术也叫昨⽇天⽓ Yesterday's Weather。要想使⽤该技术，必须满⾜两个条件：\n\n* 团队已经完成了⼏个 Sprint，这样就可以得到统计数据\n* 以⼏乎完全相同的⽅式，团队⻓度不变，⼯作状态等条件不变来进⾏下⼀个 Sprint\n\n再复杂⼀点⼉，还可以进⾏简单的资源计算。假设我们在计划⼀个 4 ⼈团队 3 星期的 Sprint，15个⼯作⽇。Lisa 会休假两天，Dave 只能投⼊ 50 ％的时间，另外还会休假⼀天，把这些加到⼀起，这个 Sprint ⼀共有 50 个可⽤的⼈/天。\n\n但实际中，估算的单位是故事点，也就是理想化的人/天。⼀个理想化的⼈/天是完美、⾼效、不受打扰的⼀天，但这种情况太少⻅了。我们还必须考虑到各种因素，例如要把未计划到的⼯作添加到Sprint 中、⼈们患病不能⼯作等等。\n\n那我们的估算⽣产率肯定要⽐ 50 少，少多少呢？我们引⼊投⼊程度 Focus Factor 这个词来看下。\n\n> 投⼊程度⽤来估算团队会在 Sprint 中投⼊多少精⼒。投⼊程度低，就表⽰团队估计会受到很⼤⼲扰，或者他们觉得⾃⼰的时间估算太过理想化。要想得出⼀个合理的投⼊程度，最好的办法就是看看上⼀个 Sprint的 值，对前⼏个 Sprint 取平均值⾃然更好。  \n投入程度 = 故事点数 ÷ 估算生产率。假设上个 Sprint 中，⼯作了 45 个⼈/天，完成 18 个故事点，那么投入程度为 40%。\n\n那么就能得出，本次 Sprint 估算生产率是 20 个故事点。\n\n昨⽇天⽓⽤起来很⽅便，但需要考虑⼀些常识：\n\n* 如果上⼀个 Sprint ⼲得很糟，是因为⼤部分成员都病了⼀星期。那你差不多可以放⼼假设这次运⽓不会那么坏，给这个 Sprint 设个⾼点的投⼊程度\n* 如果团队最近刚装了⼀个执⾏速度快如闪电的持续集成系统，那你也可以因此提⾼⼀下投⼊程度\n* 如果有新⼈加⼊这个 Sprint，就得把他的培训占⽤的精⼒也算进来，降低投⼊程度\n\n只要条件允许，你就应该看看从前的 Sprint，计算出平均数，这样可以得到更合理的估算。\n\n如果这是个全新的团队，没有任何数据怎么办？你可以参考⼀下在类似条件下⼯作的团队，他们的投⼊程度数值是多少。\n\n如果没有其他团队可以参考怎么办？随便猜⼀个数作为投⼊程度吧。毕竟这个猜测只会在第⼀个Sprint ⾥⾯使⽤。过了这次以后你就有了历史数据可以分析，然后对投⼊程度和估算⽣产率做出不断的改进。\n\n我在新团队中使⽤的默认投⼊程度通常是 70％，因为这是其他⼤多数团队都能达到的数值。\n\n\n## 使⽤计划扑克做时间估算\n估算是⼀项团队活动，通常每个成员都会参与所有故事的估算。为啥要每个⼈都参加？\n\n* 在计划的时候，我们⼀般都还不知道到底谁会来实现哪个故事的哪个部分\n* 每个故事⼀般有好⼏个⼈参与，也包括不同类型的专⻓，⽤户界⾯设计、编程、测试等\n* 团队成员必须要对故事内容有⼀定的理解才能进⾏估算。要求每个⼈都做估算，我们就可以确保他们都理解了每个条⽬的内容。这样就为⼤家在 Sprint 中相互帮助夯实了基础，也有助于故事中的重要问题被尽早发现。\n* 如果要求每个⼈都对故事做估算，我们就会常常发现两个⼈对同⼀个故事的估算结果差异很⼤。我们应该尽早发现这种问题并就此进⾏讨论。\n\n如果让整个团队进⾏估算，通常那个对故事理解最透彻的⼈会第⼀个发⾔。不幸的是，这会严重影响其他⼈的估算。\n\n> 这里就不太懂，比如设计师如何预估需要技术实现的 Story？设计师又不懂技术  \n有⼀项很优秀的技术可以避免这⼀点，它的名字是计划扑克，它是 Mike Cohn 创造出来的。\n\n每个⼈都会得到如下图所⽰的 13 张纸牌。在估算故事的时候，每个⼈都选出⼀张纸牌来表⽰他的时间估算，以故事点的⽅式表⽰，并把它正⾯朝下扣在桌上。所有⼈都完成以后，桌上的纸牌会被同时揭开。这样每个⼈都会被迫进⾏⾃我思考，⽽不是依赖于其他⼈估算的结果。\n\n<a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png%23align=left&display=inline&height=1230&name=screely-1568172384831.png&originHeight=1230&originWidth=2120&size=1102278&status=done&width=2120'>1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png#align=left&display=inline&height=1230&name=screely-1568172384831.png&originHeight=1230&originWidth=2120&size=1102278&status=done&width=2120</a>screely-1568172384831.png\n\n如果在两个估算之间有着巨⼤差异，团队就会就此进⾏讨论，并试图让⼤家对故事内容达成共识。他们也许会进⾏任务分解，之后再重新估算。这样的循环会往复进⾏，直到时间估算趋于⼀致为⽌，也就是每个⼈对这个故事的估算都差不多相同。\n\n重要的是，我们必须提醒团队成员，他们要对这个故事中所包含的全部⼯作进⾏估算，⽽不是他们⾃⼰负责的部分⼯作。测试⼈员不能只估算测试⼯作。\n\n注意，这⾥的数字顺序不是线性的。例如在 40 和 100 之间就没有数字。为什么这样？\n\n这是因为，⼀旦时间的估算值⽐较⼤，其精确度就很难把握；这样做就可以避免⼈们对估算精确度产⽣错误的印象。如果⼀个故事的估算值是差不多 20 个故事点，它到底应该是 20 还是 18 还是 21，其实⽆关紧要。我们知道的就是它是⼀个很⼤的故事，很难估算。所以 20 只是⼀个粗略估计。\n\n需要进⾏更精确的估算？那就把故事分拆，去估算那些更⼩的故事！\n\n下⾯这些卡⽚⽐较特殊：\n\n* 0：这个故事已经完成了或者这个故事根本没啥东⻄，⼏分钟就能搞定\n* ？：我⼀点概念都没有。没想法\n* 咖啡杯：我太累了，先歇会吧\n\n\n# 我们怎样让别⼈了解我们的 Sprint\n在讲述 Scrum 的书和⽂章中，⼤多数都是⽤⼩时⽽不是天数来估算时间。我们也这样⼲过。我们的通⽤⽅程为 1 个有效的⼈/天＝6 个有效的⼈/⼩时。\n\n现在我们已经不这么⼲了，⾄少在⼤部分团队中如此。原因如下：\n\n* ⼈/⼩时的粒度太细了，它会导致太多⼩到 1—2 个⼩时的任务出现，然后就会引发微观管理\n* 最后发现实际上每个⼈还是按照⼈/天的⽅式来思考，只是在填写数据时把它乘 6 就得到了⼈/⼩时。「嗯……这个任务要花⼀天。哦，对，我要写⼩时数，那我就写 6 ⼩时好了」\n* 两种不同的单位会导致混乱。「这个估算的单位是啥？⼈/天还是⼈/⼩时？」\n\n\n# 我们怎样布置房间\n**让团队坐在一起**\n\n⼤家都懒得动。⾄少我⼯作的地⽅是这样的。他们不想收拾起⾃⼰的零碎⼉、拔下计算机电源、把东⻄都挪到新的电脑桌上，然后把⼀切再插回去。挪的距离越短，这种抵触情绪就越强烈。「⽼⼤，⼲嘛呢，动这 5 ⽶有啥⽤？」\n\n这点深有体会。靠的越近、交流的会越频繁。之前刚工作的时候，和 leader 面对面，交流的一般。后来察觉到这个因素，搬到 leader 的旁边，交流频率显著上升，时不时的讨论下。\n\n坐在一起有以下含义：\n\n* 互相听到：所有⼈都可以彼此交谈，不必⼤声喊，不必离开座位\n* 互相看到：所有⼈都可以看到彼此，都能看到任务板，不⽤⾮得近到可以看清楚内容，但⾄少可以看到个⼤概\n* 隔离：如果你们整个团队突然站起来，⾃发形成⼀个激烈的设计讨论，团队外的任何⼈都不会被打扰到。反之亦然。\n\n隔离并不是意味着这个团队需要被完全隔离起来。在⼀个格⼦间的环境中，如果你的团队拥有⾃⼰的格⼦，⽽且隔间的墙⾜够⼤，可以屏蔽墙内外的⼤多数噪⾳，这也就⾜够了。\n\n\n# 我们怎么做 Sprint 回顾\n**我们怎样才能在下个 Sprint 中做得更好：**\n\n* Good：如果我们可以重做同⼀个 Sprint，哪些做法可以保留？\n* Could Have Done Better：如果我们可以重做同⼀个 Sprint，哪些做法需要改变？\n* Improvements：有关将来如何改进的具体想法？\n\n**定义验收标准：**\n\n* 必须发布：重要性 >＝ 100 的 User Story\n* 应该发布：重要性在 50—99 之间\n* 稍后发布：重要性在 25—49 之间的条⽬也都是需要的，不过可以在 1.1 版中发布\n* 不确定的：重要性 <25 的条⽬都是不确定的，也许永远不会⽤到\n\n\n# 我们怎样结合使用 Scrum 和 XP\nScrum 注重的是管理和组织实践，⽽ XP 关注的是实际的编程实践。这就是为什么它们可以很好地协同⼯作，它们解决的是不同领域的问题，可以互为补充，相得益彰。\n\n\n## 结对编程\n\n* 结对编程可以提⾼代码质量\n* 结对编程可以让团队的精⼒更加集中。⽐如坐在你后⾯的那个⼈会提醒你，这个东⻄真的是本次 Sprint 必需的吗？\n* 令⼈惊奇的是，很多强烈抵制结对编程的开发⼈员根本就没有尝试过，⽽⼀旦尝试之后就会迅速喜欢上它\n* 结对编程令⼈精疲⼒竭，不能全天都这样做\n* 常常更换结对是有好处的\n* 结对编程可以增进团队间的知识传播，速度快到令⼈难以想象\n* 有些⼈就是不习惯结对编程。不要因为⼀个优秀的开发⼈员不习惯结对编程就把他置之不理\n* 可以把代码审查作为结对编程的替代⽅案\n* 领航员（不⽤键盘的员工）应该⾃⼰也有⼀台机器。不是⽤来开发，⽽是在需要的时候稍稍做⼀些探索尝试、当司机（使⽤键盘的员工）、遇到难题的时候查看⽂档，等等\n* 不要强制⼤家使⽤结对编程。⿎励他们，提供合适的⼯具，让他们按照⾃⼰的节奏去尝试\n\n\n## 测试驱动开发 TDD\n测试驱动开发意味着你要先写⼀个⾃动测试，然后编写恰好够⽤的代码，让它通过这个测试，接着对代码进⾏重构，主要是提⾼它的可读性和消除重复。整理⼀下，然后继续。\n\n⼈们对测试驱动开发有着各种看法：\n\n* TDD 很难，开发⼈员需要花上⼀定时间才能掌握。实际上，往往问题并不在于你⽤了多少精⼒去教学、辅导和演⽰。多数情况下，开发⼈员掌握它的唯⼀⽅式就是跟⼀个熟悉 TDD 的⼈⼀起结对编程，⼀旦掌握以后，他就会受到彻底的影响，从此再也不想使⽤其他⽅式⼯作。\n* TDD 对系统设计的正⾯影响特别⼤。\n* 在新产品中，需要过上⼀段时间，TDD 才能开始应⽤并有效运⾏，尤其是⿊盒集成测试。但是回报来得⾮常快。\n* 投⼊⾜够的时间，来保证⼤家可以很容易地编写测试。这意味着要有合适的⼯具、有经验的⼈、提供合适的⼯具类或基类，等等。\n\n\n# 我们怎样做测试\n\n## 如果没有任何事情需要测试，测试⼈员该做什么？\n⾸先，他应该要为测试做准备。包括编写测试规范，准备测试环境等等。开发⼈员有开发完的功能可供测试以后，就不⽤再等了，测试先⽣可以⽴刻开始测试。\n\n如果团队在做 TDD，从第⼀天开始，⼤家都会花时间来编写测试代码，此时测试⼈员应该跟编写测试代码的开发⼈员⼀起结对编程。如果测试⼈员根本不会编程，他也应该跟开发⼈员结对，即便他只能坐在⼀边看，让开发⼈员敲键盘。相对于好的开发⼈员，好的测试⼈员常常能想出多种不同类型的测试，所以他们可以互补。\n\n如果团队没有实施 TDD，或者没有⾜够的测试⽤例需要编写，那测试⼈员可以去随意做⼀些能够帮助团队达成 Sprint ⽬标的事情，就像其他团队成员⼀样。如果测试⼈员会编程，那⾃然再好不过。如果他不会，你的团队就得找出在 Sprint 中需要完成的、⽽且不⽤编程的⼯作。\n\n\n# 我们怎样管理多个 Scrum 团队\n在多个 Scrum 团队开发同⼀个产品的状况下，很多事情都会变得更加复杂、棘⼿。这个问题普遍存在，跟 Scrum 没太⼤关系。更多开发者＝更多复杂情况。\n\n有两个核⼼问题：\n\n* 要创建多少个团队？\n* 如何把⼈员分配到各个团队中？\n\n\n## 创建多少个团队？\n单个 Scrum 团队最多包括 11 个⼈。⼤家可以⼀起⼯作，但是效果不好。每天的 Scrum 会议基本上都会超过 15 分钟。每个⼈都不太清楚其他⼈在做什么，所以整个状态就有些混乱。Scrum Master 很难保证每个⼈都在向同⼀个⽬标努⼒，也不太能找得到时间来解决发现的所有问题。\n\n有⼈可能会建议说，把⼤团队分成两个团队。但这样做情况就⼀定会好转么？未必。\n\n如果这个团队在实施 Scrum ⽅⾯很有经验，也习惯这种做法，⽽且能够以符合其内在逻辑的⽅式切分产品，把它分成两个独⽴的部分，保证各⾃的源代码不会重叠，那把团队分割就是⼀个好主意。不然我还是会坚持⽤⼀个团队，尽管⼤团队存在种种缺陷。\n\n我的经验是，宁可团队数量少，⼈数多，也⽐弄上⼀⼤堆总在互相⼲扰的⼩团队强。要想拆分⼩团队，必须确保他们彼此之间不会产⽣互相⼲扰！\n\n\n## 最佳的团队规模\n在我读过的⼤多数书中，5 到 9 个⼈被公认为是最佳的团队构成⼈数。\n\n从到⽬前为⽌观察到的情况来看，我同意这种说法。不过我会建议说 3 到 8 个⼈。⽽且我相信，为了达到这种团队规模，花上⼀定代价还是值得的。\n\n假设你有⼀个 10 ⼈的 Scrum 团队。那么就考虑⼀下把最差的 2 个⼈踢出去吧。\n\n假设你有两个不同的产品，每个产品都由⼀个 3 ⼈团队负责，进度都很慢。也许可以把他们合并成有 6 个⼈的团队，同时负责这两个产品。然后让其中⼀个产品负责⼈离开这⾥，或者给他顾问之类的⾓⾊。\n\n假设你的团队有 12 个⼈，因为代码库很烂，所以两个团队不可能独⽴在上⾯⼯作。那就应该认真投⼊时间、精⼒修复代码库，⽽不是增加新功能，直到可以分拆团队为⽌。这种投资很快就可以得到回报。\n\n\n## 我们怎样在团队中分配⼈⼿\n有多个团队开发同⼀个产品时，⼀般有两种分配⼈⼿的策略：\n\n* 让⼀个指定的⼈来做分配，例如产品负责⼈或 Scrum Master\n* 让团队⾃⼰决定\n\n我们这三种全都⽤过。三种？是的，策略 1，策略 2，还有两者的组合。我们发现两者组合以后的效果最好。\n\n在 Sprint 计划会议之前，产品负责⼈和 Scrum Master ⼀起开团队分配会，讨论是否需要重新分配。也许会合并两个团队，或者调换某个⼈。我们就⼀些问题达成⼀致，并写到团队分配提案中，在Sprint 计划会议上进⾏讨论。\n\n在 Sprint 计划会议上，我们⾸先遍历产品待办事项列表中优先级最⾼的条⽬。然后团队领导说「各位，我们建议下⼀个 Sprint 像下⾯这样分配⼈⼿。」\n\n你们看，我们会从 4 个团队变成 3 个，每个团队中的⼈员名单已列出来了。你们可以凑到⼀块，⾃⼰商量⼀下要墙上的哪块地⽅。\n\n产品负责人和 Scrum Master 耐⼼地等着⼤家在房间⾥转悠，直到他们分成 3 组，各⾃站在⼀块空墙下。","published":1,"date":"2022-09-15T06:41:09.641Z","updated":"2024-09-23T18:18:06.668Z","_id":"cm1ee2hfn00018qv239apgm35","comments":1,"layout":"post","photos":[],"content":"<h1><span id=\"02-硝烟中的-scrum-和-xp\">02 硝烟中的 Scrum 和 XP ★★★★☆</span></h1><h2><span id=\"如何编写产品待办列表-product-backlog\">如何编写产品待办列表 Product Backlog</span></h2><h2><span id=\"用户故事-user-story-包含以下字段\">用户故事 User Story 包含以下字段：</span></h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qweqweqweqweqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww</span><br><span class=\"line\"></span><br><span class=\"line\">qweqweqwe</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><strong>ID：</strong>统一标识符，⾃增⻓的数字，用来防止重命名名故事称后，无法搜索到故事。</li>\n<li><strong>名称：</strong>简短的、描述性的。⽐如「查看你⾃⼰的交易明细」。它必须要含义明确，这样开发⼈员和产品负责⼈才能⼤致明⽩我们说的是什么东⻄，跟其他故事区分开。它⼀般由 2 到 10 个字组成。</li>\n<li><strong>重要性 Importance：</strong>产品负责⼈评出⼀个数值，指⽰这个故事有多重要。例如 10 或 150，分数越⾼越重要<ul>\n<li>我⼀直都想避免优先级这个说法，因为⼀般说来优先级 1 都表⽰最⾼优先级，如果后来有其他更重要的东⻄就⿇烦了。它的优先级评级应该是什么呢？优先级 0 ？优先级 -1？</li>\n<li>分数只是⽤来根据重要性对待办事项列表条⽬排序。假如 A 的分数是 20，⽽ B 的分数是 100，那仅仅是说明 B ⽐ A重 要⽽已，绝不意味着 B ⽐ A 重要五倍。如果 B 的分数是 21 ⽽不是100，含义也是⼀样的。</li>\n<li>最好在分数之间留出适当间隔，以防后⾯出现⼀个 C，⽐ A 重要⽽不如 B 重要。当然我们也可以给 C 打⼀个 20.5 分，但这样看上去就很难看了，所以我们还是留出间隔来！</li>\n<li>⽆论任何故事，只要产品负责⼈相信它会在下⼀个 Sprint 实现，那它就应该被划分到⼀个特有的重要性层次。</li>\n</ul>\n</li>\n<li><strong>初始估算 Initial Estimate：</strong>团队的初步估算，表⽰与其他故事相⽐，完成该故事所需的⼯作量。<ul>\n<li>最⼩的单位是故事点，1 故事点 &#x3D; 1 理想化的人&#x2F;天</li>\n<li>假设一个功能需要 3 个人研发 4 天，那么就是 12 故事点</li>\n<li>不需要保证估值绝对⽆误，⽐如两个故事点的故事就应该花两天时间，⽽是要保证相对的正确性，比如两个点的故事所花费的时间应该是四个点的故事所需的⼀半</li>\n</ul>\n</li>\n<li><strong>如何做演示 How To Demo：</strong>本质上是一个简单的测试规范。「先这样做，然后那样做，得到 XXX 结果」</li>\n<li><strong>注解 Notes：</strong>相关信息、解释说明和对其他资料的引用等等，一般都非常简短。</li>\n</ul>\n<p>我们曾试过很多字段，但最后发现，只有上⾯的六个字段会⼀直使⽤下去。</p>\n<p><a href=\"02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png%23align=left&display=inline&height=1230&name=screely-1568170309766.png&originHeight=1230&originWidth=2120&size=343655&status=done&width=2120\">1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568170309766.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;343655&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568170309766.png</p>\n<h2><span id=\"额外的用户故事字段\">额外的用户故事字段</span></h2><p>有时为了便于产品负责⼈判断优先级别，我们也会在产品待办事项列表中使⽤⼀些其他字段：</p>\n<ul>\n<li><strong>类别 Track：</strong>当前故事的⼤致分类，例如「后台系统」或「优化」。这样产品负责⼈就可以很容易选出所有的「优化」条⽬，把它们的级别都设得⽐较低，类似的操作执⾏起来都很⽅便。</li>\n<li><strong>组件 Components：</strong>通常在⽂档中⽤复选框实现，例如「数据库」「服务器」「客户端」。团队或者产品负责⼈可以在这⾥进⾏标识，以明确哪些技术组件在这个故事的实现中会被包含进来。这种做法在多个 Scrum 团队协作的时候很有⽤。⽐如⼀个后台系统团队和⼀个客户端团队，他们很容易知道⾃⼰应当对哪些故事负责。</li>\n<li><strong>请求者 Requestor：</strong>产品负责⼈可能需要记录是哪个客户或相关⼲系⼈最先提出了这项需求，在后续开发过程中向他提供反馈。</li>\n<li><strong>Bug 跟踪 ID Bug tracking ID：</strong>如果你有个 Bug 跟踪系统，那么了解⼀下故事与 Bug 之间的直接联系就会对你很有帮助。</li>\n</ul>\n<h2><span id=\"如何让产品待办事项列表停留在业务层次上\">如何让产品待办事项列表停留在业务层次上</span></h2><p>如果产品负责⼈有技术相关的背景，那他就可能添加这样⼀个故事「给 Events 表添加索引」。他为啥要这么做？真正的潜在⽬标也许是要提⾼在后台系统中搜索事件表单的响应速度。</p>\n<p>到后⾯我们可能会发现：索引并不是带来表单速度变慢的瓶颈。也许原因与索引完全不相⼲。指出如何解决问题的应该是开发团队，产品负责⼈只需要关注业务⽬标。</p>\n<p>只要发现这种⾯向技术的故事，我⼀般都会问产品负责⼈「但是为什么呢」这样的问题，⼀直问下去，直到我们发现内在的⽬标为⽌。然后再⽤真正的⽬标来改写这个故事：提⾼在后台系统中搜索并⽣成表单的响应速度。</p>\n<p>最开始的技术描述只会作为⼀个注解存在，为事件表添加索引可能会解决这个问题。</p>\n<h1><span id=\"如何制定-sprint-计划\">如何制定 Sprint 计划</span></h1><h2><span id=\"无休止的-sprint-计划会议\">⽆休⽌的 Sprint 计划会议</span></h2><p>在 Sprint 计划会议中最困难的事情是：</p>\n<ul>\n<li>⼈们认为他们花不了多⻓时间</li>\n<li>但他们会的！</li>\n</ul>\n<p>Scrum 中的⼀切事情都有时间盒 Time Box。我喜欢这条简单如⼀的规则，并⼀直⼒求贯彻到底。</p>\n<p>假如 Sprint 计划会议接近尾声，但仍然没有得出 Sprint ⽬标或者 Sprint Backlog，这时该怎么办？我们要打断它么？还是再延⻓⼀个⼩时？或者到时间就结束会议，然后明天继续？</p>\n<p>最好的方法是打断会议，这个 Sprint 让⼤家不太好过。但我们应该看到它的正⾯影响，整个团队都从中获益匪浅，下个 Sprint 计划会议会更有效率。另外，如果他们从前还觉得你定下的会议时间过⻓的话，下次他们的抵制情绪就会少⼀些了。</p>\n<p>学会按照时间盒安排⼯作，学会制定合乎情理的时间盒，这对会议⻓度和 Sprint ⻓度同样有帮助。</p>\n<h2><span id=\"确认-sprint-长度\">确认 Sprint 长度</span></h2><p>产品负责⼈⼀般会喜欢短⼀点的 Sprint，⽽开发⼈员喜欢时间⻓的 Sprint。所以 Sprint 的⻓度是妥协后的产物。做过多次实验后，我们最终总结出了最喜欢的⻓度：三个星期。绝⼤部分团队的 Sprint ⻓度都是三周。它不⻓不短，既让我们拥有⾜够的敏捷性，⼜让团队进⼊心流的状态，同时还可以解决 Sprint 中出现的问题。</p>\n<h2><span id=\"确定-sprint-目标\">确定 Sprint ⽬标</span></h2><p>出于某些原因，制定 Sprint ⽬标确实很困难。但我发现即使是像挤⽛膏⼀样把它挤出来，那也是值得的。半死不活的⽬标也⽐啥都没有强。这个⽬标可以是挣更多的钱，或者完成优先级排到最前⾯的三个故事，或打动 CEO，或把系统做得⾜够好，可以作为 Beta 版发布给真正的⽤户使⽤，或添加基本的后台系统⽀持等等。</p>\n<p>它必须⽤业务术语表达，⽽不是技术词汇，让团队以外的⼈也能够理解。</p>\n<h2><span id=\"决定-sprint-要包含的故事\">决定 Sprint 要包含的故事</span></h2><p>决定哪些故事需要在这个 Sprint 中完成，是 Sprint 计划会议的⼀个主要活动。更具体地说，就是哪些故事需要从产品待办事项列表拷⻉到 Sprint Backlog 中，如下图所⽰。</p>\n<p><a href=\"02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png%23align=left&display=inline&height=1230&name=screely-1568122769088.png&originHeight=1230&originWidth=2120&size=117456&status=done&width=2120\">1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122769088.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;117456&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122769088.png</p>\n<p>每个矩形都表⽰⼀个故事，按重要性排序。最重要的故事在列表顶部。矩形尺⼨表⽰故事⼤⼩（也就是以故事点估算的时间⻓短。括号的⾼度表⽰团队估算的⽣产率 Estimated Velocity，也即团队认为他们在下⼀个 Sprint 中所能完成的故事点数。</p>\n<p>在 Sprint 中包含多少故事由团队决定，⽽不是产品负责⼈或其他⼈。这便引发了两个问题：</p>\n<ul>\n<li>团队怎么决定把哪些故事放到 Sprint ⾥⾯？</li>\n<li>产品负责⼈怎么影响他们的决定？</li>\n</ul>\n<h2><span id=\"产品负责人如何对-sprint-放哪些故事产生影响\">产品负责⼈如何对 Sprint 放哪些故事产⽣影响</span></h2><p>假设在 Sprint 计划会议中我们遇到下图所⽰的情况。</p>\n<p><a href=\"02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png%23align=left&display=inline&height=1230&name=screely-1568122776640.png&originHeight=1230&originWidth=2120&size=109748&status=done&width=2120\">1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122776640.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;109748&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122776640.png</p>\n<p>产品负责⼈很失望，因为故事 D 不会被放到 Sprint ⾥⾯。那他在 Sprint 计划会议上能做些什么？</p>\n<ul>\n<li>⾸先，他可以重新设置优先级。如果他给故事 D 赋予最⾼的重要级别，团队就不得不把它先放到 Sprint⾥⾯来，需要把 C 扔出去。</li>\n<li>其次，他可以缩⼩故事 A 的范围，直到团队相信故事 D 能在这个 Sprint ⾥完成为⽌</li>\n<li>最后，他还可以拆分故事。产品负责⼈判断出故事A中某些⽅⾯实际并不重要，所以他把 A 分成两个故事 A1 和 A2，赋给它们不同的重要级别。</li>\n</ul>\n<p><a href=\"02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png%23align=left&display=inline&height=1230&name=screely-1568122784593.png&originHeight=1230&originWidth=2120&size=123423&status=done&width=2120\">1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122784593.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;123423&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122784593.png</p>\n<h2><span id=\"团队怎样决定把哪些故事放到-sprint-里面\">团队怎样决定把哪些故事放到 Sprint ⾥⾯</span></h2><p>下图中，左边是 Sprint 启动时的估算的⽣产率，右边是 Sprint 结束时的实际⽣产率。每个矩形都是⼀个故事，⾥⾯的数字表⽰这个故事的原始估算。</p>\n<p><a href=\"02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png%23align=left&display=inline&height=1230&name=screely-1568122792044.png&originHeight=1230&originWidth=2120&size=124879&status=done&width=2120\">1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122792044.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;124879&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122792044.png</p>\n<p>这个数字并不精确。但它依然很有⽤，尤其是与啥都没有相⽐，感觉就更明显了。它可以给你⼀些硬⽣⽣的事实：抛开具体原因，我们曾经以为能完成这么多，⽽实际完成的⼯作与当初预计的还是有区别。</p>\n<p>我们还可以看看团队的历史，看看他们在过去⼏个 Sprint ⾥⾯的⽣产率是多少，然后假定在下⼀个 Sprint ⾥⾯⽣产率差不多不变。</p>\n<p>这项技术也叫昨⽇天⽓ Yesterday’s Weather。要想使⽤该技术，必须满⾜两个条件：</p>\n<ul>\n<li>团队已经完成了⼏个 Sprint，这样就可以得到统计数据</li>\n<li>以⼏乎完全相同的⽅式，团队⻓度不变，⼯作状态等条件不变来进⾏下⼀个 Sprint</li>\n</ul>\n<p>再复杂⼀点⼉，还可以进⾏简单的资源计算。假设我们在计划⼀个 4 ⼈团队 3 星期的 Sprint，15个⼯作⽇。Lisa 会休假两天，Dave 只能投⼊ 50 ％的时间，另外还会休假⼀天，把这些加到⼀起，这个 Sprint ⼀共有 50 个可⽤的⼈&#x2F;天。</p>\n<p>但实际中，估算的单位是故事点，也就是理想化的人&#x2F;天。⼀个理想化的⼈&#x2F;天是完美、⾼效、不受打扰的⼀天，但这种情况太少⻅了。我们还必须考虑到各种因素，例如要把未计划到的⼯作添加到Sprint 中、⼈们患病不能⼯作等等。</p>\n<p>那我们的估算⽣产率肯定要⽐ 50 少，少多少呢？我们引⼊投⼊程度 Focus Factor 这个词来看下。</p>\n<blockquote>\n<p>投⼊程度⽤来估算团队会在 Sprint 中投⼊多少精⼒。投⼊程度低，就表⽰团队估计会受到很⼤⼲扰，或者他们觉得⾃⼰的时间估算太过理想化。要想得出⼀个合理的投⼊程度，最好的办法就是看看上⼀个 Sprint的 值，对前⼏个 Sprint 取平均值⾃然更好。<br>投入程度 &#x3D; 故事点数 ÷ 估算生产率。假设上个 Sprint 中，⼯作了 45 个⼈&#x2F;天，完成 18 个故事点，那么投入程度为 40%。</p>\n</blockquote>\n<p>那么就能得出，本次 Sprint 估算生产率是 20 个故事点。</p>\n<p>昨⽇天⽓⽤起来很⽅便，但需要考虑⼀些常识：</p>\n<ul>\n<li>如果上⼀个 Sprint ⼲得很糟，是因为⼤部分成员都病了⼀星期。那你差不多可以放⼼假设这次运⽓不会那么坏，给这个 Sprint 设个⾼点的投⼊程度</li>\n<li>如果团队最近刚装了⼀个执⾏速度快如闪电的持续集成系统，那你也可以因此提⾼⼀下投⼊程度</li>\n<li>如果有新⼈加⼊这个 Sprint，就得把他的培训占⽤的精⼒也算进来，降低投⼊程度</li>\n</ul>\n<p>只要条件允许，你就应该看看从前的 Sprint，计算出平均数，这样可以得到更合理的估算。</p>\n<p>如果这是个全新的团队，没有任何数据怎么办？你可以参考⼀下在类似条件下⼯作的团队，他们的投⼊程度数值是多少。</p>\n<p>如果没有其他团队可以参考怎么办？随便猜⼀个数作为投⼊程度吧。毕竟这个猜测只会在第⼀个Sprint ⾥⾯使⽤。过了这次以后你就有了历史数据可以分析，然后对投⼊程度和估算⽣产率做出不断的改进。</p>\n<p>我在新团队中使⽤的默认投⼊程度通常是 70％，因为这是其他⼤多数团队都能达到的数值。</p>\n<h2><span id=\"使用计划扑克做时间估算\">使⽤计划扑克做时间估算</span></h2><p>估算是⼀项团队活动，通常每个成员都会参与所有故事的估算。为啥要每个⼈都参加？</p>\n<ul>\n<li>在计划的时候，我们⼀般都还不知道到底谁会来实现哪个故事的哪个部分</li>\n<li>每个故事⼀般有好⼏个⼈参与，也包括不同类型的专⻓，⽤户界⾯设计、编程、测试等</li>\n<li>团队成员必须要对故事内容有⼀定的理解才能进⾏估算。要求每个⼈都做估算，我们就可以确保他们都理解了每个条⽬的内容。这样就为⼤家在 Sprint 中相互帮助夯实了基础，也有助于故事中的重要问题被尽早发现。</li>\n<li>如果要求每个⼈都对故事做估算，我们就会常常发现两个⼈对同⼀个故事的估算结果差异很⼤。我们应该尽早发现这种问题并就此进⾏讨论。</li>\n</ul>\n<p>如果让整个团队进⾏估算，通常那个对故事理解最透彻的⼈会第⼀个发⾔。不幸的是，这会严重影响其他⼈的估算。</p>\n<blockquote>\n<p>这里就不太懂，比如设计师如何预估需要技术实现的 Story？设计师又不懂技术<br>有⼀项很优秀的技术可以避免这⼀点，它的名字是计划扑克，它是 Mike Cohn 创造出来的。</p>\n</blockquote>\n<p>每个⼈都会得到如下图所⽰的 13 张纸牌。在估算故事的时候，每个⼈都选出⼀张纸牌来表⽰他的时间估算，以故事点的⽅式表⽰，并把它正⾯朝下扣在桌上。所有⼈都完成以后，桌上的纸牌会被同时揭开。这样每个⼈都会被迫进⾏⾃我思考，⽽不是依赖于其他⼈估算的结果。</p>\n<p><a href=\"02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png%23align=left&display=inline&height=1230&name=screely-1568172384831.png&originHeight=1230&originWidth=2120&size=1102278&status=done&width=2120\">1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568172384831.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;1102278&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568172384831.png</p>\n<p>如果在两个估算之间有着巨⼤差异，团队就会就此进⾏讨论，并试图让⼤家对故事内容达成共识。他们也许会进⾏任务分解，之后再重新估算。这样的循环会往复进⾏，直到时间估算趋于⼀致为⽌，也就是每个⼈对这个故事的估算都差不多相同。</p>\n<p>重要的是，我们必须提醒团队成员，他们要对这个故事中所包含的全部⼯作进⾏估算，⽽不是他们⾃⼰负责的部分⼯作。测试⼈员不能只估算测试⼯作。</p>\n<p>注意，这⾥的数字顺序不是线性的。例如在 40 和 100 之间就没有数字。为什么这样？</p>\n<p>这是因为，⼀旦时间的估算值⽐较⼤，其精确度就很难把握；这样做就可以避免⼈们对估算精确度产⽣错误的印象。如果⼀个故事的估算值是差不多 20 个故事点，它到底应该是 20 还是 18 还是 21，其实⽆关紧要。我们知道的就是它是⼀个很⼤的故事，很难估算。所以 20 只是⼀个粗略估计。</p>\n<p>需要进⾏更精确的估算？那就把故事分拆，去估算那些更⼩的故事！</p>\n<p>下⾯这些卡⽚⽐较特殊：</p>\n<ul>\n<li>0：这个故事已经完成了或者这个故事根本没啥东⻄，⼏分钟就能搞定</li>\n<li>？：我⼀点概念都没有。没想法</li>\n<li>咖啡杯：我太累了，先歇会吧</li>\n</ul>\n<h1><span id=\"我们怎样让别人了解我们的-sprint\">我们怎样让别⼈了解我们的 Sprint</span></h1><p>在讲述 Scrum 的书和⽂章中，⼤多数都是⽤⼩时⽽不是天数来估算时间。我们也这样⼲过。我们的通⽤⽅程为 1 个有效的⼈&#x2F;天＝6 个有效的⼈&#x2F;⼩时。</p>\n<p>现在我们已经不这么⼲了，⾄少在⼤部分团队中如此。原因如下：</p>\n<ul>\n<li>⼈&#x2F;⼩时的粒度太细了，它会导致太多⼩到 1—2 个⼩时的任务出现，然后就会引发微观管理</li>\n<li>最后发现实际上每个⼈还是按照⼈&#x2F;天的⽅式来思考，只是在填写数据时把它乘 6 就得到了⼈&#x2F;⼩时。「嗯……这个任务要花⼀天。哦，对，我要写⼩时数，那我就写 6 ⼩时好了」</li>\n<li>两种不同的单位会导致混乱。「这个估算的单位是啥？⼈&#x2F;天还是⼈&#x2F;⼩时？」</li>\n</ul>\n<h1><span id=\"我们怎样布置房间\">我们怎样布置房间</span></h1><p><strong>让团队坐在一起</strong></p>\n<p>⼤家都懒得动。⾄少我⼯作的地⽅是这样的。他们不想收拾起⾃⼰的零碎⼉、拔下计算机电源、把东⻄都挪到新的电脑桌上，然后把⼀切再插回去。挪的距离越短，这种抵触情绪就越强烈。「⽼⼤，⼲嘛呢，动这 5 ⽶有啥⽤？」</p>\n<p>这点深有体会。靠的越近、交流的会越频繁。之前刚工作的时候，和 leader 面对面，交流的一般。后来察觉到这个因素，搬到 leader 的旁边，交流频率显著上升，时不时的讨论下。</p>\n<p>坐在一起有以下含义：</p>\n<ul>\n<li>互相听到：所有⼈都可以彼此交谈，不必⼤声喊，不必离开座位</li>\n<li>互相看到：所有⼈都可以看到彼此，都能看到任务板，不⽤⾮得近到可以看清楚内容，但⾄少可以看到个⼤概</li>\n<li>隔离：如果你们整个团队突然站起来，⾃发形成⼀个激烈的设计讨论，团队外的任何⼈都不会被打扰到。反之亦然。</li>\n</ul>\n<p>隔离并不是意味着这个团队需要被完全隔离起来。在⼀个格⼦间的环境中，如果你的团队拥有⾃⼰的格⼦，⽽且隔间的墙⾜够⼤，可以屏蔽墙内外的⼤多数噪⾳，这也就⾜够了。</p>\n<h1><span id=\"我们怎么做-sprint-回顾\">我们怎么做 Sprint 回顾</span></h1><p><strong>我们怎样才能在下个 Sprint 中做得更好：</strong></p>\n<ul>\n<li>Good：如果我们可以重做同⼀个 Sprint，哪些做法可以保留？</li>\n<li>Could Have Done Better：如果我们可以重做同⼀个 Sprint，哪些做法需要改变？</li>\n<li>Improvements：有关将来如何改进的具体想法？</li>\n</ul>\n<p><strong>定义验收标准：</strong></p>\n<ul>\n<li>必须发布：重要性 &gt;＝ 100 的 User Story</li>\n<li>应该发布：重要性在 50—99 之间</li>\n<li>稍后发布：重要性在 25—49 之间的条⽬也都是需要的，不过可以在 1.1 版中发布</li>\n<li>不确定的：重要性 &lt;25 的条⽬都是不确定的，也许永远不会⽤到</li>\n</ul>\n<h1><span id=\"我们怎样结合使用-scrum-和-xp\">我们怎样结合使用 Scrum 和 XP</span></h1><p>Scrum 注重的是管理和组织实践，⽽ XP 关注的是实际的编程实践。这就是为什么它们可以很好地协同⼯作，它们解决的是不同领域的问题，可以互为补充，相得益彰。</p>\n<h2><span id=\"结对编程\">结对编程</span></h2><ul>\n<li>结对编程可以提⾼代码质量</li>\n<li>结对编程可以让团队的精⼒更加集中。⽐如坐在你后⾯的那个⼈会提醒你，这个东⻄真的是本次 Sprint 必需的吗？</li>\n<li>令⼈惊奇的是，很多强烈抵制结对编程的开发⼈员根本就没有尝试过，⽽⼀旦尝试之后就会迅速喜欢上它</li>\n<li>结对编程令⼈精疲⼒竭，不能全天都这样做</li>\n<li>常常更换结对是有好处的</li>\n<li>结对编程可以增进团队间的知识传播，速度快到令⼈难以想象</li>\n<li>有些⼈就是不习惯结对编程。不要因为⼀个优秀的开发⼈员不习惯结对编程就把他置之不理</li>\n<li>可以把代码审查作为结对编程的替代⽅案</li>\n<li>领航员（不⽤键盘的员工）应该⾃⼰也有⼀台机器。不是⽤来开发，⽽是在需要的时候稍稍做⼀些探索尝试、当司机（使⽤键盘的员工）、遇到难题的时候查看⽂档，等等</li>\n<li>不要强制⼤家使⽤结对编程。⿎励他们，提供合适的⼯具，让他们按照⾃⼰的节奏去尝试</li>\n</ul>\n<h2><span id=\"测试驱动开发-tdd\">测试驱动开发 TDD</span></h2><p>测试驱动开发意味着你要先写⼀个⾃动测试，然后编写恰好够⽤的代码，让它通过这个测试，接着对代码进⾏重构，主要是提⾼它的可读性和消除重复。整理⼀下，然后继续。</p>\n<p>⼈们对测试驱动开发有着各种看法：</p>\n<ul>\n<li>TDD 很难，开发⼈员需要花上⼀定时间才能掌握。实际上，往往问题并不在于你⽤了多少精⼒去教学、辅导和演⽰。多数情况下，开发⼈员掌握它的唯⼀⽅式就是跟⼀个熟悉 TDD 的⼈⼀起结对编程，⼀旦掌握以后，他就会受到彻底的影响，从此再也不想使⽤其他⽅式⼯作。</li>\n<li>TDD 对系统设计的正⾯影响特别⼤。</li>\n<li>在新产品中，需要过上⼀段时间，TDD 才能开始应⽤并有效运⾏，尤其是⿊盒集成测试。但是回报来得⾮常快。</li>\n<li>投⼊⾜够的时间，来保证⼤家可以很容易地编写测试。这意味着要有合适的⼯具、有经验的⼈、提供合适的⼯具类或基类，等等。</li>\n</ul>\n<h1><span id=\"我们怎样做测试\">我们怎样做测试</span></h1><h2><span id=\"如果没有任何事情需要测试测试人员该做什么\">如果没有任何事情需要测试，测试⼈员该做什么？</span></h2><p>⾸先，他应该要为测试做准备。包括编写测试规范，准备测试环境等等。开发⼈员有开发完的功能可供测试以后，就不⽤再等了，测试先⽣可以⽴刻开始测试。</p>\n<p>如果团队在做 TDD，从第⼀天开始，⼤家都会花时间来编写测试代码，此时测试⼈员应该跟编写测试代码的开发⼈员⼀起结对编程。如果测试⼈员根本不会编程，他也应该跟开发⼈员结对，即便他只能坐在⼀边看，让开发⼈员敲键盘。相对于好的开发⼈员，好的测试⼈员常常能想出多种不同类型的测试，所以他们可以互补。</p>\n<p>如果团队没有实施 TDD，或者没有⾜够的测试⽤例需要编写，那测试⼈员可以去随意做⼀些能够帮助团队达成 Sprint ⽬标的事情，就像其他团队成员⼀样。如果测试⼈员会编程，那⾃然再好不过。如果他不会，你的团队就得找出在 Sprint 中需要完成的、⽽且不⽤编程的⼯作。</p>\n<h1><span id=\"我们怎样管理多个-scrum-团队\">我们怎样管理多个 Scrum 团队</span></h1><p>在多个 Scrum 团队开发同⼀个产品的状况下，很多事情都会变得更加复杂、棘⼿。这个问题普遍存在，跟 Scrum 没太⼤关系。更多开发者＝更多复杂情况。</p>\n<p>有两个核⼼问题：</p>\n<ul>\n<li>要创建多少个团队？</li>\n<li>如何把⼈员分配到各个团队中？</li>\n</ul>\n<h2><span id=\"创建多少个团队\">创建多少个团队？</span></h2><p>单个 Scrum 团队最多包括 11 个⼈。⼤家可以⼀起⼯作，但是效果不好。每天的 Scrum 会议基本上都会超过 15 分钟。每个⼈都不太清楚其他⼈在做什么，所以整个状态就有些混乱。Scrum Master 很难保证每个⼈都在向同⼀个⽬标努⼒，也不太能找得到时间来解决发现的所有问题。</p>\n<p>有⼈可能会建议说，把⼤团队分成两个团队。但这样做情况就⼀定会好转么？未必。</p>\n<p>如果这个团队在实施 Scrum ⽅⾯很有经验，也习惯这种做法，⽽且能够以符合其内在逻辑的⽅式切分产品，把它分成两个独⽴的部分，保证各⾃的源代码不会重叠，那把团队分割就是⼀个好主意。不然我还是会坚持⽤⼀个团队，尽管⼤团队存在种种缺陷。</p>\n<p>我的经验是，宁可团队数量少，⼈数多，也⽐弄上⼀⼤堆总在互相⼲扰的⼩团队强。要想拆分⼩团队，必须确保他们彼此之间不会产⽣互相⼲扰！</p>\n<h2><span id=\"最佳的团队规模\">最佳的团队规模</span></h2><p>在我读过的⼤多数书中，5 到 9 个⼈被公认为是最佳的团队构成⼈数。</p>\n<p>从到⽬前为⽌观察到的情况来看，我同意这种说法。不过我会建议说 3 到 8 个⼈。⽽且我相信，为了达到这种团队规模，花上⼀定代价还是值得的。</p>\n<p>假设你有⼀个 10 ⼈的 Scrum 团队。那么就考虑⼀下把最差的 2 个⼈踢出去吧。</p>\n<p>假设你有两个不同的产品，每个产品都由⼀个 3 ⼈团队负责，进度都很慢。也许可以把他们合并成有 6 个⼈的团队，同时负责这两个产品。然后让其中⼀个产品负责⼈离开这⾥，或者给他顾问之类的⾓⾊。</p>\n<p>假设你的团队有 12 个⼈，因为代码库很烂，所以两个团队不可能独⽴在上⾯⼯作。那就应该认真投⼊时间、精⼒修复代码库，⽽不是增加新功能，直到可以分拆团队为⽌。这种投资很快就可以得到回报。</p>\n<h2><span id=\"我们怎样在团队中分配人手\">我们怎样在团队中分配⼈⼿</span></h2><p>有多个团队开发同⼀个产品时，⼀般有两种分配⼈⼿的策略：</p>\n<ul>\n<li>让⼀个指定的⼈来做分配，例如产品负责⼈或 Scrum Master</li>\n<li>让团队⾃⼰决定</li>\n</ul>\n<p>我们这三种全都⽤过。三种？是的，策略 1，策略 2，还有两者的组合。我们发现两者组合以后的效果最好。</p>\n<p>在 Sprint 计划会议之前，产品负责⼈和 Scrum Master ⼀起开团队分配会，讨论是否需要重新分配。也许会合并两个团队，或者调换某个⼈。我们就⼀些问题达成⼀致，并写到团队分配提案中，在Sprint 计划会议上进⾏讨论。</p>\n<p>在 Sprint 计划会议上，我们⾸先遍历产品待办事项列表中优先级最⾼的条⽬。然后团队领导说「各位，我们建议下⼀个 Sprint 像下⾯这样分配⼈⼿。」</p>\n<p>你们看，我们会从 4 个团队变成 3 个，每个团队中的⼈员名单已列出来了。你们可以凑到⼀块，⾃⼰商量⼀下要墙上的哪块地⽅。</p>\n<p>产品负责人和 Scrum Master 耐⼼地等着⼤家在房间⾥转悠，直到他们分成 3 组，各⾃站在⼀块空墙下。</p>\n","excerpt":"","more":"<h1 id=\"02-硝烟中的-Scrum-和-XP-★★★★☆\"><a href=\"#02-硝烟中的-Scrum-和-XP-★★★★☆\" class=\"headerlink\" title=\"02 硝烟中的 Scrum 和 XP ★★★★☆\"></a>02 硝烟中的 Scrum 和 XP ★★★★☆</h1><h2 id=\"如何编写产品待办列表-Product-Backlog\"><a href=\"#如何编写产品待办列表-Product-Backlog\" class=\"headerlink\" title=\"如何编写产品待办列表 Product Backlog\"></a>如何编写产品待办列表 Product Backlog</h2><h2 id=\"用户故事-User-Story-包含以下字段：\"><a href=\"#用户故事-User-Story-包含以下字段：\" class=\"headerlink\" title=\"用户故事 User Story 包含以下字段：\"></a>用户故事 User Story 包含以下字段：</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qweqweqweqweqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww</span><br><span class=\"line\"></span><br><span class=\"line\">qweqweqwe</span><br></pre></td></tr></table></figure>\n\n\n<ul>\n<li><strong>ID：</strong>统一标识符，⾃增⻓的数字，用来防止重命名名故事称后，无法搜索到故事。</li>\n<li><strong>名称：</strong>简短的、描述性的。⽐如「查看你⾃⼰的交易明细」。它必须要含义明确，这样开发⼈员和产品负责⼈才能⼤致明⽩我们说的是什么东⻄，跟其他故事区分开。它⼀般由 2 到 10 个字组成。</li>\n<li><strong>重要性 Importance：</strong>产品负责⼈评出⼀个数值，指⽰这个故事有多重要。例如 10 或 150，分数越⾼越重要<ul>\n<li>我⼀直都想避免优先级这个说法，因为⼀般说来优先级 1 都表⽰最⾼优先级，如果后来有其他更重要的东⻄就⿇烦了。它的优先级评级应该是什么呢？优先级 0 ？优先级 -1？</li>\n<li>分数只是⽤来根据重要性对待办事项列表条⽬排序。假如 A 的分数是 20，⽽ B 的分数是 100，那仅仅是说明 B ⽐ A重 要⽽已，绝不意味着 B ⽐ A 重要五倍。如果 B 的分数是 21 ⽽不是100，含义也是⼀样的。</li>\n<li>最好在分数之间留出适当间隔，以防后⾯出现⼀个 C，⽐ A 重要⽽不如 B 重要。当然我们也可以给 C 打⼀个 20.5 分，但这样看上去就很难看了，所以我们还是留出间隔来！</li>\n<li>⽆论任何故事，只要产品负责⼈相信它会在下⼀个 Sprint 实现，那它就应该被划分到⼀个特有的重要性层次。</li>\n</ul>\n</li>\n<li><strong>初始估算 Initial Estimate：</strong>团队的初步估算，表⽰与其他故事相⽐，完成该故事所需的⼯作量。<ul>\n<li>最⼩的单位是故事点，1 故事点 &#x3D; 1 理想化的人&#x2F;天</li>\n<li>假设一个功能需要 3 个人研发 4 天，那么就是 12 故事点</li>\n<li>不需要保证估值绝对⽆误，⽐如两个故事点的故事就应该花两天时间，⽽是要保证相对的正确性，比如两个点的故事所花费的时间应该是四个点的故事所需的⼀半</li>\n</ul>\n</li>\n<li><strong>如何做演示 How To Demo：</strong>本质上是一个简单的测试规范。「先这样做，然后那样做，得到 XXX 结果」</li>\n<li><strong>注解 Notes：</strong>相关信息、解释说明和对其他资料的引用等等，一般都非常简短。</li>\n</ul>\n<p>我们曾试过很多字段，但最后发现，只有上⾯的六个字段会⼀直使⽤下去。</p>\n<p><a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png%23align=left&display=inline&height=1230&name=screely-1568170309766.png&originHeight=1230&originWidth=2120&size=343655&status=done&width=2120'>1568614620521-a1bd13c3-6dc6-4b9c-b864-9200dfbbc6ad.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568170309766.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;343655&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568170309766.png</p>\n<h2 id=\"额外的用户故事字段\"><a href=\"#额外的用户故事字段\" class=\"headerlink\" title=\"额外的用户故事字段\"></a>额外的用户故事字段</h2><p>有时为了便于产品负责⼈判断优先级别，我们也会在产品待办事项列表中使⽤⼀些其他字段：</p>\n<ul>\n<li><strong>类别 Track：</strong>当前故事的⼤致分类，例如「后台系统」或「优化」。这样产品负责⼈就可以很容易选出所有的「优化」条⽬，把它们的级别都设得⽐较低，类似的操作执⾏起来都很⽅便。</li>\n<li><strong>组件 Components：</strong>通常在⽂档中⽤复选框实现，例如「数据库」「服务器」「客户端」。团队或者产品负责⼈可以在这⾥进⾏标识，以明确哪些技术组件在这个故事的实现中会被包含进来。这种做法在多个 Scrum 团队协作的时候很有⽤。⽐如⼀个后台系统团队和⼀个客户端团队，他们很容易知道⾃⼰应当对哪些故事负责。</li>\n<li><strong>请求者 Requestor：</strong>产品负责⼈可能需要记录是哪个客户或相关⼲系⼈最先提出了这项需求，在后续开发过程中向他提供反馈。</li>\n<li><strong>Bug 跟踪 ID Bug tracking ID：</strong>如果你有个 Bug 跟踪系统，那么了解⼀下故事与 Bug 之间的直接联系就会对你很有帮助。</li>\n</ul>\n<h2 id=\"如何让产品待办事项列表停留在业务层次上\"><a href=\"#如何让产品待办事项列表停留在业务层次上\" class=\"headerlink\" title=\"如何让产品待办事项列表停留在业务层次上\"></a>如何让产品待办事项列表停留在业务层次上</h2><p>如果产品负责⼈有技术相关的背景，那他就可能添加这样⼀个故事「给 Events 表添加索引」。他为啥要这么做？真正的潜在⽬标也许是要提⾼在后台系统中搜索事件表单的响应速度。</p>\n<p>到后⾯我们可能会发现：索引并不是带来表单速度变慢的瓶颈。也许原因与索引完全不相⼲。指出如何解决问题的应该是开发团队，产品负责⼈只需要关注业务⽬标。</p>\n<p>只要发现这种⾯向技术的故事，我⼀般都会问产品负责⼈「但是为什么呢」这样的问题，⼀直问下去，直到我们发现内在的⽬标为⽌。然后再⽤真正的⽬标来改写这个故事：提⾼在后台系统中搜索并⽣成表单的响应速度。</p>\n<p>最开始的技术描述只会作为⼀个注解存在，为事件表添加索引可能会解决这个问题。</p>\n<h1 id=\"如何制定-Sprint-计划\"><a href=\"#如何制定-Sprint-计划\" class=\"headerlink\" title=\"如何制定 Sprint 计划\"></a>如何制定 Sprint 计划</h1><h2 id=\"⽆休⽌的-Sprint-计划会议\"><a href=\"#⽆休⽌的-Sprint-计划会议\" class=\"headerlink\" title=\"⽆休⽌的 Sprint 计划会议\"></a>⽆休⽌的 Sprint 计划会议</h2><p>在 Sprint 计划会议中最困难的事情是：</p>\n<ul>\n<li>⼈们认为他们花不了多⻓时间</li>\n<li>但他们会的！</li>\n</ul>\n<p>Scrum 中的⼀切事情都有时间盒 Time Box。我喜欢这条简单如⼀的规则，并⼀直⼒求贯彻到底。</p>\n<p>假如 Sprint 计划会议接近尾声，但仍然没有得出 Sprint ⽬标或者 Sprint Backlog，这时该怎么办？我们要打断它么？还是再延⻓⼀个⼩时？或者到时间就结束会议，然后明天继续？</p>\n<p>最好的方法是打断会议，这个 Sprint 让⼤家不太好过。但我们应该看到它的正⾯影响，整个团队都从中获益匪浅，下个 Sprint 计划会议会更有效率。另外，如果他们从前还觉得你定下的会议时间过⻓的话，下次他们的抵制情绪就会少⼀些了。</p>\n<p>学会按照时间盒安排⼯作，学会制定合乎情理的时间盒，这对会议⻓度和 Sprint ⻓度同样有帮助。</p>\n<h2 id=\"确认-Sprint-长度\"><a href=\"#确认-Sprint-长度\" class=\"headerlink\" title=\"确认 Sprint 长度\"></a>确认 Sprint 长度</h2><p>产品负责⼈⼀般会喜欢短⼀点的 Sprint，⽽开发⼈员喜欢时间⻓的 Sprint。所以 Sprint 的⻓度是妥协后的产物。做过多次实验后，我们最终总结出了最喜欢的⻓度：三个星期。绝⼤部分团队的 Sprint ⻓度都是三周。它不⻓不短，既让我们拥有⾜够的敏捷性，⼜让团队进⼊心流的状态，同时还可以解决 Sprint 中出现的问题。</p>\n<h2 id=\"确定-Sprint-⽬标\"><a href=\"#确定-Sprint-⽬标\" class=\"headerlink\" title=\"确定 Sprint ⽬标\"></a>确定 Sprint ⽬标</h2><p>出于某些原因，制定 Sprint ⽬标确实很困难。但我发现即使是像挤⽛膏⼀样把它挤出来，那也是值得的。半死不活的⽬标也⽐啥都没有强。这个⽬标可以是挣更多的钱，或者完成优先级排到最前⾯的三个故事，或打动 CEO，或把系统做得⾜够好，可以作为 Beta 版发布给真正的⽤户使⽤，或添加基本的后台系统⽀持等等。</p>\n<p>它必须⽤业务术语表达，⽽不是技术词汇，让团队以外的⼈也能够理解。</p>\n<h2 id=\"决定-Sprint-要包含的故事\"><a href=\"#决定-Sprint-要包含的故事\" class=\"headerlink\" title=\"决定 Sprint 要包含的故事\"></a>决定 Sprint 要包含的故事</h2><p>决定哪些故事需要在这个 Sprint 中完成，是 Sprint 计划会议的⼀个主要活动。更具体地说，就是哪些故事需要从产品待办事项列表拷⻉到 Sprint Backlog 中，如下图所⽰。</p>\n<p><a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png%23align=left&display=inline&height=1230&name=screely-1568122769088.png&originHeight=1230&originWidth=2120&size=117456&status=done&width=2120'>1568614726313-4f71aa61-6fcb-4674-973f-04a7c2d71351.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122769088.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;117456&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122769088.png</p>\n<p>每个矩形都表⽰⼀个故事，按重要性排序。最重要的故事在列表顶部。矩形尺⼨表⽰故事⼤⼩（也就是以故事点估算的时间⻓短。括号的⾼度表⽰团队估算的⽣产率 Estimated Velocity，也即团队认为他们在下⼀个 Sprint 中所能完成的故事点数。</p>\n<p>在 Sprint 中包含多少故事由团队决定，⽽不是产品负责⼈或其他⼈。这便引发了两个问题：</p>\n<ul>\n<li>团队怎么决定把哪些故事放到 Sprint ⾥⾯？</li>\n<li>产品负责⼈怎么影响他们的决定？</li>\n</ul>\n<h2 id=\"产品负责⼈如何对-Sprint-放哪些故事产⽣影响\"><a href=\"#产品负责⼈如何对-Sprint-放哪些故事产⽣影响\" class=\"headerlink\" title=\"产品负责⼈如何对 Sprint 放哪些故事产⽣影响\"></a>产品负责⼈如何对 Sprint 放哪些故事产⽣影响</h2><p>假设在 Sprint 计划会议中我们遇到下图所⽰的情况。</p>\n<p><a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png%23align=left&display=inline&height=1230&name=screely-1568122776640.png&originHeight=1230&originWidth=2120&size=109748&status=done&width=2120'>1568614755142-82102b02-0efe-4ac1-8ce9-e0f7a45b8853.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122776640.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;109748&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122776640.png</p>\n<p>产品负责⼈很失望，因为故事 D 不会被放到 Sprint ⾥⾯。那他在 Sprint 计划会议上能做些什么？</p>\n<ul>\n<li>⾸先，他可以重新设置优先级。如果他给故事 D 赋予最⾼的重要级别，团队就不得不把它先放到 Sprint⾥⾯来，需要把 C 扔出去。</li>\n<li>其次，他可以缩⼩故事 A 的范围，直到团队相信故事 D 能在这个 Sprint ⾥完成为⽌</li>\n<li>最后，他还可以拆分故事。产品负责⼈判断出故事A中某些⽅⾯实际并不重要，所以他把 A 分成两个故事 A1 和 A2，赋给它们不同的重要级别。</li>\n</ul>\n<p><a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png%23align=left&display=inline&height=1230&name=screely-1568122784593.png&originHeight=1230&originWidth=2120&size=123423&status=done&width=2120'>1568614771876-52d52b76-01dd-4074-b572-0da3b3e77bab.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122784593.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;123423&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122784593.png</p>\n<h2 id=\"团队怎样决定把哪些故事放到-Sprint-⾥⾯\"><a href=\"#团队怎样决定把哪些故事放到-Sprint-⾥⾯\" class=\"headerlink\" title=\"团队怎样决定把哪些故事放到 Sprint ⾥⾯\"></a>团队怎样决定把哪些故事放到 Sprint ⾥⾯</h2><p>下图中，左边是 Sprint 启动时的估算的⽣产率，右边是 Sprint 结束时的实际⽣产率。每个矩形都是⼀个故事，⾥⾯的数字表⽰这个故事的原始估算。</p>\n<p><a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png%23align=left&display=inline&height=1230&name=screely-1568122792044.png&originHeight=1230&originWidth=2120&size=124879&status=done&width=2120'>1568614796129-1a01d34e-1af9-432e-b653-daeac8013aac.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568122792044.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;124879&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568122792044.png</p>\n<p>这个数字并不精确。但它依然很有⽤，尤其是与啥都没有相⽐，感觉就更明显了。它可以给你⼀些硬⽣⽣的事实：抛开具体原因，我们曾经以为能完成这么多，⽽实际完成的⼯作与当初预计的还是有区别。</p>\n<p>我们还可以看看团队的历史，看看他们在过去⼏个 Sprint ⾥⾯的⽣产率是多少，然后假定在下⼀个 Sprint ⾥⾯⽣产率差不多不变。</p>\n<p>这项技术也叫昨⽇天⽓ Yesterday’s Weather。要想使⽤该技术，必须满⾜两个条件：</p>\n<ul>\n<li>团队已经完成了⼏个 Sprint，这样就可以得到统计数据</li>\n<li>以⼏乎完全相同的⽅式，团队⻓度不变，⼯作状态等条件不变来进⾏下⼀个 Sprint</li>\n</ul>\n<p>再复杂⼀点⼉，还可以进⾏简单的资源计算。假设我们在计划⼀个 4 ⼈团队 3 星期的 Sprint，15个⼯作⽇。Lisa 会休假两天，Dave 只能投⼊ 50 ％的时间，另外还会休假⼀天，把这些加到⼀起，这个 Sprint ⼀共有 50 个可⽤的⼈&#x2F;天。</p>\n<p>但实际中，估算的单位是故事点，也就是理想化的人&#x2F;天。⼀个理想化的⼈&#x2F;天是完美、⾼效、不受打扰的⼀天，但这种情况太少⻅了。我们还必须考虑到各种因素，例如要把未计划到的⼯作添加到Sprint 中、⼈们患病不能⼯作等等。</p>\n<p>那我们的估算⽣产率肯定要⽐ 50 少，少多少呢？我们引⼊投⼊程度 Focus Factor 这个词来看下。</p>\n<blockquote>\n<p>投⼊程度⽤来估算团队会在 Sprint 中投⼊多少精⼒。投⼊程度低，就表⽰团队估计会受到很⼤⼲扰，或者他们觉得⾃⼰的时间估算太过理想化。要想得出⼀个合理的投⼊程度，最好的办法就是看看上⼀个 Sprint的 值，对前⼏个 Sprint 取平均值⾃然更好。<br>投入程度 &#x3D; 故事点数 ÷ 估算生产率。假设上个 Sprint 中，⼯作了 45 个⼈&#x2F;天，完成 18 个故事点，那么投入程度为 40%。</p>\n</blockquote>\n<p>那么就能得出，本次 Sprint 估算生产率是 20 个故事点。</p>\n<p>昨⽇天⽓⽤起来很⽅便，但需要考虑⼀些常识：</p>\n<ul>\n<li>如果上⼀个 Sprint ⼲得很糟，是因为⼤部分成员都病了⼀星期。那你差不多可以放⼼假设这次运⽓不会那么坏，给这个 Sprint 设个⾼点的投⼊程度</li>\n<li>如果团队最近刚装了⼀个执⾏速度快如闪电的持续集成系统，那你也可以因此提⾼⼀下投⼊程度</li>\n<li>如果有新⼈加⼊这个 Sprint，就得把他的培训占⽤的精⼒也算进来，降低投⼊程度</li>\n</ul>\n<p>只要条件允许，你就应该看看从前的 Sprint，计算出平均数，这样可以得到更合理的估算。</p>\n<p>如果这是个全新的团队，没有任何数据怎么办？你可以参考⼀下在类似条件下⼯作的团队，他们的投⼊程度数值是多少。</p>\n<p>如果没有其他团队可以参考怎么办？随便猜⼀个数作为投⼊程度吧。毕竟这个猜测只会在第⼀个Sprint ⾥⾯使⽤。过了这次以后你就有了历史数据可以分析，然后对投⼊程度和估算⽣产率做出不断的改进。</p>\n<p>我在新团队中使⽤的默认投⼊程度通常是 70％，因为这是其他⼤多数团队都能达到的数值。</p>\n<h2 id=\"使⽤计划扑克做时间估算\"><a href=\"#使⽤计划扑克做时间估算\" class=\"headerlink\" title=\"使⽤计划扑克做时间估算\"></a>使⽤计划扑克做时间估算</h2><p>估算是⼀项团队活动，通常每个成员都会参与所有故事的估算。为啥要每个⼈都参加？</p>\n<ul>\n<li>在计划的时候，我们⼀般都还不知道到底谁会来实现哪个故事的哪个部分</li>\n<li>每个故事⼀般有好⼏个⼈参与，也包括不同类型的专⻓，⽤户界⾯设计、编程、测试等</li>\n<li>团队成员必须要对故事内容有⼀定的理解才能进⾏估算。要求每个⼈都做估算，我们就可以确保他们都理解了每个条⽬的内容。这样就为⼤家在 Sprint 中相互帮助夯实了基础，也有助于故事中的重要问题被尽早发现。</li>\n<li>如果要求每个⼈都对故事做估算，我们就会常常发现两个⼈对同⼀个故事的估算结果差异很⼤。我们应该尽早发现这种问题并就此进⾏讨论。</li>\n</ul>\n<p>如果让整个团队进⾏估算，通常那个对故事理解最透彻的⼈会第⼀个发⾔。不幸的是，这会严重影响其他⼈的估算。</p>\n<blockquote>\n<p>这里就不太懂，比如设计师如何预估需要技术实现的 Story？设计师又不懂技术<br>有⼀项很优秀的技术可以避免这⼀点，它的名字是计划扑克，它是 Mike Cohn 创造出来的。</p>\n</blockquote>\n<p>每个⼈都会得到如下图所⽰的 13 张纸牌。在估算故事的时候，每个⼈都选出⼀张纸牌来表⽰他的时间估算，以故事点的⽅式表⽰，并把它正⾯朝下扣在桌上。所有⼈都完成以后，桌上的纸牌会被同时揭开。这样每个⼈都会被迫进⾏⾃我思考，⽽不是依赖于其他⼈估算的结果。</p>\n<p><a href='02%20%E7%A1%9D%E7%83%9F%E4%B8%AD%E7%9A%84%20Scrum%20%E5%92%8C%20XP%20%E2%98%85%E2%98%85%E2%98%85%E2%98%85%E2%98%86/1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png%23align=left&display=inline&height=1230&name=screely-1568172384831.png&originHeight=1230&originWidth=2120&size=1102278&status=done&width=2120'>1568614899388-cbbb6200-ee5a-4c1e-a83e-96bfee35e809.png#align&#x3D;left&amp;display&#x3D;inline&amp;height&#x3D;1230&amp;name&#x3D;screely-1568172384831.png&amp;originHeight&#x3D;1230&amp;originWidth&#x3D;2120&amp;size&#x3D;1102278&amp;status&#x3D;done&amp;width&#x3D;2120</a>screely-1568172384831.png</p>\n<p>如果在两个估算之间有着巨⼤差异，团队就会就此进⾏讨论，并试图让⼤家对故事内容达成共识。他们也许会进⾏任务分解，之后再重新估算。这样的循环会往复进⾏，直到时间估算趋于⼀致为⽌，也就是每个⼈对这个故事的估算都差不多相同。</p>\n<p>重要的是，我们必须提醒团队成员，他们要对这个故事中所包含的全部⼯作进⾏估算，⽽不是他们⾃⼰负责的部分⼯作。测试⼈员不能只估算测试⼯作。</p>\n<p>注意，这⾥的数字顺序不是线性的。例如在 40 和 100 之间就没有数字。为什么这样？</p>\n<p>这是因为，⼀旦时间的估算值⽐较⼤，其精确度就很难把握；这样做就可以避免⼈们对估算精确度产⽣错误的印象。如果⼀个故事的估算值是差不多 20 个故事点，它到底应该是 20 还是 18 还是 21，其实⽆关紧要。我们知道的就是它是⼀个很⼤的故事，很难估算。所以 20 只是⼀个粗略估计。</p>\n<p>需要进⾏更精确的估算？那就把故事分拆，去估算那些更⼩的故事！</p>\n<p>下⾯这些卡⽚⽐较特殊：</p>\n<ul>\n<li>0：这个故事已经完成了或者这个故事根本没啥东⻄，⼏分钟就能搞定</li>\n<li>？：我⼀点概念都没有。没想法</li>\n<li>咖啡杯：我太累了，先歇会吧</li>\n</ul>\n<h1 id=\"我们怎样让别⼈了解我们的-Sprint\"><a href=\"#我们怎样让别⼈了解我们的-Sprint\" class=\"headerlink\" title=\"我们怎样让别⼈了解我们的 Sprint\"></a>我们怎样让别⼈了解我们的 Sprint</h1><p>在讲述 Scrum 的书和⽂章中，⼤多数都是⽤⼩时⽽不是天数来估算时间。我们也这样⼲过。我们的通⽤⽅程为 1 个有效的⼈&#x2F;天＝6 个有效的⼈&#x2F;⼩时。</p>\n<p>现在我们已经不这么⼲了，⾄少在⼤部分团队中如此。原因如下：</p>\n<ul>\n<li>⼈&#x2F;⼩时的粒度太细了，它会导致太多⼩到 1—2 个⼩时的任务出现，然后就会引发微观管理</li>\n<li>最后发现实际上每个⼈还是按照⼈&#x2F;天的⽅式来思考，只是在填写数据时把它乘 6 就得到了⼈&#x2F;⼩时。「嗯……这个任务要花⼀天。哦，对，我要写⼩时数，那我就写 6 ⼩时好了」</li>\n<li>两种不同的单位会导致混乱。「这个估算的单位是啥？⼈&#x2F;天还是⼈&#x2F;⼩时？」</li>\n</ul>\n<h1 id=\"我们怎样布置房间\"><a href=\"#我们怎样布置房间\" class=\"headerlink\" title=\"我们怎样布置房间\"></a>我们怎样布置房间</h1><p><strong>让团队坐在一起</strong></p>\n<p>⼤家都懒得动。⾄少我⼯作的地⽅是这样的。他们不想收拾起⾃⼰的零碎⼉、拔下计算机电源、把东⻄都挪到新的电脑桌上，然后把⼀切再插回去。挪的距离越短，这种抵触情绪就越强烈。「⽼⼤，⼲嘛呢，动这 5 ⽶有啥⽤？」</p>\n<p>这点深有体会。靠的越近、交流的会越频繁。之前刚工作的时候，和 leader 面对面，交流的一般。后来察觉到这个因素，搬到 leader 的旁边，交流频率显著上升，时不时的讨论下。</p>\n<p>坐在一起有以下含义：</p>\n<ul>\n<li>互相听到：所有⼈都可以彼此交谈，不必⼤声喊，不必离开座位</li>\n<li>互相看到：所有⼈都可以看到彼此，都能看到任务板，不⽤⾮得近到可以看清楚内容，但⾄少可以看到个⼤概</li>\n<li>隔离：如果你们整个团队突然站起来，⾃发形成⼀个激烈的设计讨论，团队外的任何⼈都不会被打扰到。反之亦然。</li>\n</ul>\n<p>隔离并不是意味着这个团队需要被完全隔离起来。在⼀个格⼦间的环境中，如果你的团队拥有⾃⼰的格⼦，⽽且隔间的墙⾜够⼤，可以屏蔽墙内外的⼤多数噪⾳，这也就⾜够了。</p>\n<h1 id=\"我们怎么做-Sprint-回顾\"><a href=\"#我们怎么做-Sprint-回顾\" class=\"headerlink\" title=\"我们怎么做 Sprint 回顾\"></a>我们怎么做 Sprint 回顾</h1><p><strong>我们怎样才能在下个 Sprint 中做得更好：</strong></p>\n<ul>\n<li>Good：如果我们可以重做同⼀个 Sprint，哪些做法可以保留？</li>\n<li>Could Have Done Better：如果我们可以重做同⼀个 Sprint，哪些做法需要改变？</li>\n<li>Improvements：有关将来如何改进的具体想法？</li>\n</ul>\n<p><strong>定义验收标准：</strong></p>\n<ul>\n<li>必须发布：重要性 &gt;＝ 100 的 User Story</li>\n<li>应该发布：重要性在 50—99 之间</li>\n<li>稍后发布：重要性在 25—49 之间的条⽬也都是需要的，不过可以在 1.1 版中发布</li>\n<li>不确定的：重要性 &lt;25 的条⽬都是不确定的，也许永远不会⽤到</li>\n</ul>\n<h1 id=\"我们怎样结合使用-Scrum-和-XP\"><a href=\"#我们怎样结合使用-Scrum-和-XP\" class=\"headerlink\" title=\"我们怎样结合使用 Scrum 和 XP\"></a>我们怎样结合使用 Scrum 和 XP</h1><p>Scrum 注重的是管理和组织实践，⽽ XP 关注的是实际的编程实践。这就是为什么它们可以很好地协同⼯作，它们解决的是不同领域的问题，可以互为补充，相得益彰。</p>\n<h2 id=\"结对编程\"><a href=\"#结对编程\" class=\"headerlink\" title=\"结对编程\"></a>结对编程</h2><ul>\n<li>结对编程可以提⾼代码质量</li>\n<li>结对编程可以让团队的精⼒更加集中。⽐如坐在你后⾯的那个⼈会提醒你，这个东⻄真的是本次 Sprint 必需的吗？</li>\n<li>令⼈惊奇的是，很多强烈抵制结对编程的开发⼈员根本就没有尝试过，⽽⼀旦尝试之后就会迅速喜欢上它</li>\n<li>结对编程令⼈精疲⼒竭，不能全天都这样做</li>\n<li>常常更换结对是有好处的</li>\n<li>结对编程可以增进团队间的知识传播，速度快到令⼈难以想象</li>\n<li>有些⼈就是不习惯结对编程。不要因为⼀个优秀的开发⼈员不习惯结对编程就把他置之不理</li>\n<li>可以把代码审查作为结对编程的替代⽅案</li>\n<li>领航员（不⽤键盘的员工）应该⾃⼰也有⼀台机器。不是⽤来开发，⽽是在需要的时候稍稍做⼀些探索尝试、当司机（使⽤键盘的员工）、遇到难题的时候查看⽂档，等等</li>\n<li>不要强制⼤家使⽤结对编程。⿎励他们，提供合适的⼯具，让他们按照⾃⼰的节奏去尝试</li>\n</ul>\n<h2 id=\"测试驱动开发-TDD\"><a href=\"#测试驱动开发-TDD\" class=\"headerlink\" title=\"测试驱动开发 TDD\"></a>测试驱动开发 TDD</h2><p>测试驱动开发意味着你要先写⼀个⾃动测试，然后编写恰好够⽤的代码，让它通过这个测试，接着对代码进⾏重构，主要是提⾼它的可读性和消除重复。整理⼀下，然后继续。</p>\n<p>⼈们对测试驱动开发有着各种看法：</p>\n<ul>\n<li>TDD 很难，开发⼈员需要花上⼀定时间才能掌握。实际上，往往问题并不在于你⽤了多少精⼒去教学、辅导和演⽰。多数情况下，开发⼈员掌握它的唯⼀⽅式就是跟⼀个熟悉 TDD 的⼈⼀起结对编程，⼀旦掌握以后，他就会受到彻底的影响，从此再也不想使⽤其他⽅式⼯作。</li>\n<li>TDD 对系统设计的正⾯影响特别⼤。</li>\n<li>在新产品中，需要过上⼀段时间，TDD 才能开始应⽤并有效运⾏，尤其是⿊盒集成测试。但是回报来得⾮常快。</li>\n<li>投⼊⾜够的时间，来保证⼤家可以很容易地编写测试。这意味着要有合适的⼯具、有经验的⼈、提供合适的⼯具类或基类，等等。</li>\n</ul>\n<h1 id=\"我们怎样做测试\"><a href=\"#我们怎样做测试\" class=\"headerlink\" title=\"我们怎样做测试\"></a>我们怎样做测试</h1><h2 id=\"如果没有任何事情需要测试，测试⼈员该做什么？\"><a href=\"#如果没有任何事情需要测试，测试⼈员该做什么？\" class=\"headerlink\" title=\"如果没有任何事情需要测试，测试⼈员该做什么？\"></a>如果没有任何事情需要测试，测试⼈员该做什么？</h2><p>⾸先，他应该要为测试做准备。包括编写测试规范，准备测试环境等等。开发⼈员有开发完的功能可供测试以后，就不⽤再等了，测试先⽣可以⽴刻开始测试。</p>\n<p>如果团队在做 TDD，从第⼀天开始，⼤家都会花时间来编写测试代码，此时测试⼈员应该跟编写测试代码的开发⼈员⼀起结对编程。如果测试⼈员根本不会编程，他也应该跟开发⼈员结对，即便他只能坐在⼀边看，让开发⼈员敲键盘。相对于好的开发⼈员，好的测试⼈员常常能想出多种不同类型的测试，所以他们可以互补。</p>\n<p>如果团队没有实施 TDD，或者没有⾜够的测试⽤例需要编写，那测试⼈员可以去随意做⼀些能够帮助团队达成 Sprint ⽬标的事情，就像其他团队成员⼀样。如果测试⼈员会编程，那⾃然再好不过。如果他不会，你的团队就得找出在 Sprint 中需要完成的、⽽且不⽤编程的⼯作。</p>\n<h1 id=\"我们怎样管理多个-Scrum-团队\"><a href=\"#我们怎样管理多个-Scrum-团队\" class=\"headerlink\" title=\"我们怎样管理多个 Scrum 团队\"></a>我们怎样管理多个 Scrum 团队</h1><p>在多个 Scrum 团队开发同⼀个产品的状况下，很多事情都会变得更加复杂、棘⼿。这个问题普遍存在，跟 Scrum 没太⼤关系。更多开发者＝更多复杂情况。</p>\n<p>有两个核⼼问题：</p>\n<ul>\n<li>要创建多少个团队？</li>\n<li>如何把⼈员分配到各个团队中？</li>\n</ul>\n<h2 id=\"创建多少个团队？\"><a href=\"#创建多少个团队？\" class=\"headerlink\" title=\"创建多少个团队？\"></a>创建多少个团队？</h2><p>单个 Scrum 团队最多包括 11 个⼈。⼤家可以⼀起⼯作，但是效果不好。每天的 Scrum 会议基本上都会超过 15 分钟。每个⼈都不太清楚其他⼈在做什么，所以整个状态就有些混乱。Scrum Master 很难保证每个⼈都在向同⼀个⽬标努⼒，也不太能找得到时间来解决发现的所有问题。</p>\n<p>有⼈可能会建议说，把⼤团队分成两个团队。但这样做情况就⼀定会好转么？未必。</p>\n<p>如果这个团队在实施 Scrum ⽅⾯很有经验，也习惯这种做法，⽽且能够以符合其内在逻辑的⽅式切分产品，把它分成两个独⽴的部分，保证各⾃的源代码不会重叠，那把团队分割就是⼀个好主意。不然我还是会坚持⽤⼀个团队，尽管⼤团队存在种种缺陷。</p>\n<p>我的经验是，宁可团队数量少，⼈数多，也⽐弄上⼀⼤堆总在互相⼲扰的⼩团队强。要想拆分⼩团队，必须确保他们彼此之间不会产⽣互相⼲扰！</p>\n<h2 id=\"最佳的团队规模\"><a href=\"#最佳的团队规模\" class=\"headerlink\" title=\"最佳的团队规模\"></a>最佳的团队规模</h2><p>在我读过的⼤多数书中，5 到 9 个⼈被公认为是最佳的团队构成⼈数。</p>\n<p>从到⽬前为⽌观察到的情况来看，我同意这种说法。不过我会建议说 3 到 8 个⼈。⽽且我相信，为了达到这种团队规模，花上⼀定代价还是值得的。</p>\n<p>假设你有⼀个 10 ⼈的 Scrum 团队。那么就考虑⼀下把最差的 2 个⼈踢出去吧。</p>\n<p>假设你有两个不同的产品，每个产品都由⼀个 3 ⼈团队负责，进度都很慢。也许可以把他们合并成有 6 个⼈的团队，同时负责这两个产品。然后让其中⼀个产品负责⼈离开这⾥，或者给他顾问之类的⾓⾊。</p>\n<p>假设你的团队有 12 个⼈，因为代码库很烂，所以两个团队不可能独⽴在上⾯⼯作。那就应该认真投⼊时间、精⼒修复代码库，⽽不是增加新功能，直到可以分拆团队为⽌。这种投资很快就可以得到回报。</p>\n<h2 id=\"我们怎样在团队中分配⼈⼿\"><a href=\"#我们怎样在团队中分配⼈⼿\" class=\"headerlink\" title=\"我们怎样在团队中分配⼈⼿\"></a>我们怎样在团队中分配⼈⼿</h2><p>有多个团队开发同⼀个产品时，⼀般有两种分配⼈⼿的策略：</p>\n<ul>\n<li>让⼀个指定的⼈来做分配，例如产品负责⼈或 Scrum Master</li>\n<li>让团队⾃⼰决定</li>\n</ul>\n<p>我们这三种全都⽤过。三种？是的，策略 1，策略 2，还有两者的组合。我们发现两者组合以后的效果最好。</p>\n<p>在 Sprint 计划会议之前，产品负责⼈和 Scrum Master ⼀起开团队分配会，讨论是否需要重新分配。也许会合并两个团队，或者调换某个⼈。我们就⼀些问题达成⼀致，并写到团队分配提案中，在Sprint 计划会议上进⾏讨论。</p>\n<p>在 Sprint 计划会议上，我们⾸先遍历产品待办事项列表中优先级最⾼的条⽬。然后团队领导说「各位，我们建议下⼀个 Sprint 像下⾯这样分配⼈⼿。」</p>\n<p>你们看，我们会从 4 个团队变成 3 个，每个团队中的⼈员名单已列出来了。你们可以凑到⼀块，⾃⼰商量⼀下要墙上的哪块地⽅。</p>\n<p>产品负责人和 Scrum Master 耐⼼地等着⼤家在房间⾥转悠，直到他们分成 3 组，各⾃站在⼀块空墙下。</p>\n"},{"title":"blog template","date":"2024-05-05T16:00:00.000Z","_content":"# Blog Template\n\n\n## H2 TITLE\n\n### H3TITLE\n\n#### H4 TITLE\n\n##### H5 TITLE \n\n###### H6 title\n\ntextwqeqweqwewqweeeeeeeeeeeeeeeeeeeeeqweqwe.\n\n恶趣味我去额温枪恶趣味我去恶趣味我去问问其味无穷额外。\n\n> 社会中似乎普遍存在这样的情况：一个人的工作越是明显地对他人有益，他得到的酬劳就越低。”这听上去不可思议，但格雷伯用了苏格拉底式的归谬法，连续追问：“只需要询问以下几个简单的问题：倘若这个专业人士阶层嗖一下消失了，世界会变成什么样？倘若消失的人是护士、垃圾清理工、机械师，那又会发生什么？显然，如果护士、垃圾清理工和机械师转瞬之间就不存在了，那么我们的生活将会立刻受到灾难性的打击。如果世界上不再有教师，不再有码头工人，那我们的生活将会迅速陷入困境。哪怕是少了科幻小说家，少了斯卡音乐家，这个世界都会逊色不少。可如果消失的是这个世界所有的私募基金首席执行官、游说者、公关研究员、精算师、电话推销员、法警和法律顾问，那人类是否会痛苦不堪？是否会面临无法生存的情况？这就不好说了。个人实际贡献越多，获得的报酬越少：除了少数人们熟知的例外（比如医生），这种情况竟然真的普遍存在。”\n\n* 这是 list\n* qwewqe\n* qewqe\n  * qweweq\n  * qweqwewqe\n    * qweqwewqe\n    * qweqwewqe\n\n```\nqweqweqweqwewqeqweqweqwqewqeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n```\n\n`qweeeeeeeeeeeeeeeeeeeeeee`\n`qweqweqwwww`\n`qweqwewqeqweq`\n`qweqweqwe`\n\nqweqweqwewqeqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\nqweqweqwe\nqweqweqwe\nqweqweqweqw\nqweqweqwe\nqweqwe\n\n1. 这是 list\n2. qwewqe\n3. qewqe\n   1. qweweq\n   2. qweqwewqe\n      1. qweqwewqe\n      2. qweqwewqe\n\n**weeeeeeeqqqqqqqqqqqqqqqqqqqqqqqqqqqqq**\n\n*qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee*\n\n~qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee~\n\n\n~~qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee~~\n\n==hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n\n==🔴hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n==🔵hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n==🟡hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n==🟣hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n\n[wqeeeeeee](www.baidu.com)\n\n[[qweqweqwe]]\n\n[^1][^2][^3][^4][^5]\n\n- - -\nSep 23, 2024\n\n| Year | Indicator              |     | Data                                                         |\n|------|------------------------|-----|--------------------------------------------------------------|\n| 2020 | Total Population       |     | $334 million (Census, 2024).                                 |\n| 2022 | Gender Ratio           |     | Male 49.5%; Female 50.5% (Census, 2024).                     |\n| 2023 | Age Structure          |     | 0-14 years: 18.6%<br>5-24 years: 12.9%<br>25-64 years: 51.5%<br>65 years and over: 17%<br>(Census, 2024). |\n| 2022 | Population by Race     |     | White Monoracial Population: 55.03%<br>Hispanic Population: 16,26%<br>Black Monoracial Population: 10.41%<br>Multiracial Population: 7.48%<br>Population Identifying as Some Other Race Alone: 5.2%<br>Population Asian Alone: 4.78%<br>Other: 0.86%<br>(Data Commons, 2022). |\n| 2023 | Population Growth Rate |     | 0.35% (Census, 2024).                                        |\n| 2023 | Education Level        |     | High school graduate or higher: 90.5%<br>Bachelor's degree or higher: 37.9%<br>(Census, 2024). |\n\n![](Blog%20Template/image.png)\n![](https://cdn.jsdelivr.net/gh/CourseRye/ScreenShot@master/uPic/9a6xun.png)\n\n\n\n\n[^1]: footnote text\n[^2]: footnote text\n[^3]: footnote text\n[^4]: footnote text\n[^5]: footnote text\n\n","source":"_posts/Blog Template.md","raw":"---\ntitle: blog template\ntags:\n\t- vw3x\n\t- v2ex\ndate: 2024-05-06 \n---\n# Blog Template\n\n\n## H2 TITLE\n\n### H3TITLE\n\n#### H4 TITLE\n\n##### H5 TITLE \n\n###### H6 title\n\ntextwqeqweqwewqweeeeeeeeeeeeeeeeeeeeeqweqwe.\n\n恶趣味我去额温枪恶趣味我去恶趣味我去问问其味无穷额外。\n\n> 社会中似乎普遍存在这样的情况：一个人的工作越是明显地对他人有益，他得到的酬劳就越低。”这听上去不可思议，但格雷伯用了苏格拉底式的归谬法，连续追问：“只需要询问以下几个简单的问题：倘若这个专业人士阶层嗖一下消失了，世界会变成什么样？倘若消失的人是护士、垃圾清理工、机械师，那又会发生什么？显然，如果护士、垃圾清理工和机械师转瞬之间就不存在了，那么我们的生活将会立刻受到灾难性的打击。如果世界上不再有教师，不再有码头工人，那我们的生活将会迅速陷入困境。哪怕是少了科幻小说家，少了斯卡音乐家，这个世界都会逊色不少。可如果消失的是这个世界所有的私募基金首席执行官、游说者、公关研究员、精算师、电话推销员、法警和法律顾问，那人类是否会痛苦不堪？是否会面临无法生存的情况？这就不好说了。个人实际贡献越多，获得的报酬越少：除了少数人们熟知的例外（比如医生），这种情况竟然真的普遍存在。”\n\n* 这是 list\n* qwewqe\n* qewqe\n  * qweweq\n  * qweqwewqe\n    * qweqwewqe\n    * qweqwewqe\n\n```\nqweqweqweqwewqeqweqweqwqewqeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee\n```\n\n`qweeeeeeeeeeeeeeeeeeeeeee`\n`qweqweqwwww`\n`qweqwewqeqweq`\n`qweqweqwe`\n\nqweqweqwewqeqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww\nqweqweqwe\nqweqweqwe\nqweqweqweqw\nqweqweqwe\nqweqwe\n\n1. 这是 list\n2. qwewqe\n3. qewqe\n   1. qweweq\n   2. qweqwewqe\n      1. qweqwewqe\n      2. qweqwewqe\n\n**weeeeeeeqqqqqqqqqqqqqqqqqqqqqqqqqqqqq**\n\n*qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee*\n\n~qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee~\n\n\n~~qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee~~\n\n==hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n\n==🔴hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n==🔵hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n==🟡hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n==🟣hgfffffffffffffffffffffffffffffffffffffffffffffffff==\n\n[wqeeeeeee](www.baidu.com)\n\n[[qweqweqwe]]\n\n[^1][^2][^3][^4][^5]\n\n- - -\nSep 23, 2024\n\n| Year | Indicator              |     | Data                                                         |\n|------|------------------------|-----|--------------------------------------------------------------|\n| 2020 | Total Population       |     | $334 million (Census, 2024).                                 |\n| 2022 | Gender Ratio           |     | Male 49.5%; Female 50.5% (Census, 2024).                     |\n| 2023 | Age Structure          |     | 0-14 years: 18.6%<br>5-24 years: 12.9%<br>25-64 years: 51.5%<br>65 years and over: 17%<br>(Census, 2024). |\n| 2022 | Population by Race     |     | White Monoracial Population: 55.03%<br>Hispanic Population: 16,26%<br>Black Monoracial Population: 10.41%<br>Multiracial Population: 7.48%<br>Population Identifying as Some Other Race Alone: 5.2%<br>Population Asian Alone: 4.78%<br>Other: 0.86%<br>(Data Commons, 2022). |\n| 2023 | Population Growth Rate |     | 0.35% (Census, 2024).                                        |\n| 2023 | Education Level        |     | High school graduate or higher: 90.5%<br>Bachelor's degree or higher: 37.9%<br>(Census, 2024). |\n\n![](Blog%20Template/image.png)\n![](https://cdn.jsdelivr.net/gh/CourseRye/ScreenShot@master/uPic/9a6xun.png)\n\n\n\n\n[^1]: footnote text\n[^2]: footnote text\n[^3]: footnote text\n[^4]: footnote text\n[^5]: footnote text\n\n","slug":"Blog Template","published":1,"updated":"2024-09-24T05:43:36.250Z","_id":"cm1g0gs1800001xv214csg924","comments":1,"layout":"post","photos":[],"content":"<h1><span id=\"blog-template\">Blog Template</span></h1><h2><span id=\"h2-title\">H2 TITLE</span></h2><h3><span id=\"h3title\">H3TITLE</span></h3><h4><span id=\"h4-title\">H4 TITLE</span></h4><h5><span id=\"h5-title\">H5 TITLE</span></h5><h6><span id=\"h6-title\">H6 title</span></h6><p>textwqeqweqwewqweeeeeeeeeeeeeeeeeeeeeqweqwe.</p>\n<p>恶趣味我去额温枪恶趣味我去恶趣味我去问问其味无穷额外。</p>\n<blockquote>\n<p>社会中似乎普遍存在这样的情况：一个人的工作越是明显地对他人有益，他得到的酬劳就越低。”这听上去不可思议，但格雷伯用了苏格拉底式的归谬法，连续追问：“只需要询问以下几个简单的问题：倘若这个专业人士阶层嗖一下消失了，世界会变成什么样？倘若消失的人是护士、垃圾清理工、机械师，那又会发生什么？显然，如果护士、垃圾清理工和机械师转瞬之间就不存在了，那么我们的生活将会立刻受到灾难性的打击。如果世界上不再有教师，不再有码头工人，那我们的生活将会迅速陷入困境。哪怕是少了科幻小说家，少了斯卡音乐家，这个世界都会逊色不少。可如果消失的是这个世界所有的私募基金首席执行官、游说者、公关研究员、精算师、电话推销员、法警和法律顾问，那人类是否会痛苦不堪？是否会面临无法生存的情况？这就不好说了。个人实际贡献越多，获得的报酬越少：除了少数人们熟知的例外（比如医生），这种情况竟然真的普遍存在。”</p>\n</blockquote>\n<ul>\n<li>这是 list</li>\n<li>qwewqe</li>\n<li>qewqe<ul>\n<li>qweweq</li>\n<li>qweqwewqe<ul>\n<li>qweqwewqe</li>\n<li>qweqwewqe</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qweqweqweqwewqeqweqweqwqewqeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</span><br></pre></td></tr></table></figure>\n\n<p><code>qweeeeeeeeeeeeeeeeeeeeeee</code><br><code>qweqweqwwww</code><br><code>qweqwewqeqweq</code><br><code>qweqweqwe</code></p>\n<p>qweqweqwewqeqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww<br>qweqweqwe<br>qweqweqwe<br>qweqweqweqw<br>qweqweqwe<br>qweqwe</p>\n<ol>\n<li>这是 list</li>\n<li>qwewqe</li>\n<li>qewqe<ol>\n<li>qweweq</li>\n<li>qweqwewqe<ol>\n<li>qweqwewqe</li>\n<li>qweqwewqe</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p><strong>weeeeeeeqqqqqqqqqqqqqqqqqqqqqqqqqqqqq</strong></p>\n<p><em>qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</em></p>\n<p><del>qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</del></p>\n<p><del>qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</del></p>\n<p>&#x3D;&#x3D;hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;🔴hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;<br>&#x3D;&#x3D;🔵hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;<br>&#x3D;&#x3D;🟡hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;<br>&#x3D;&#x3D;🟣hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;</p>\n<p><a href=\"www.baidu.com\">wqeeeeeee</a></p>\n<p>[[qweqweqwe]]</p>\n<p>[^1][^2][^3][^4][^5]</p>\n<hr>\n<p>Sep 23, 2024</p>\n<table>\n<thead>\n<tr>\n<th>Year</th>\n<th>Indicator</th>\n<th></th>\n<th>Data</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2020</td>\n<td>Total Population</td>\n<td></td>\n<td>$334 million (Census, 2024).</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>Gender Ratio</td>\n<td></td>\n<td>Male 49.5%; Female 50.5% (Census, 2024).</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>Age Structure</td>\n<td></td>\n<td>0-14 years: 18.6%<br>5-24 years: 12.9%<br>25-64 years: 51.5%<br>65 years and over: 17%<br>(Census, 2024).</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>Population by Race</td>\n<td></td>\n<td>White Monoracial Population: 55.03%<br>Hispanic Population: 16,26%<br>Black Monoracial Population: 10.41%<br>Multiracial Population: 7.48%<br>Population Identifying as Some Other Race Alone: 5.2%<br>Population Asian Alone: 4.78%<br>Other: 0.86%<br>(Data Commons, 2022).</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>Population Growth Rate</td>\n<td></td>\n<td>0.35% (Census, 2024).</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>Education Level</td>\n<td></td>\n<td>High school graduate or higher: 90.5%<br>Bachelor’s degree or higher: 37.9%<br>(Census, 2024).</td>\n</tr>\n</tbody></table>\n<p><img src=\"/Blog%20Template/image.png\"><br><img src=\"https://cdn.jsdelivr.net/gh/CourseRye/ScreenShot@master/uPic/9a6xun.png\"></p>\n<p>[^1]: footnote text<br>[^2]: footnote text<br>[^3]: footnote text<br>[^4]: footnote text<br>[^5]: footnote text</p>\n","excerpt":"","more":"<h1 id=\"Blog-Template\"><a href=\"#Blog-Template\" class=\"headerlink\" title=\"Blog Template\"></a>Blog Template</h1><h2 id=\"H2-TITLE\"><a href=\"#H2-TITLE\" class=\"headerlink\" title=\"H2 TITLE\"></a>H2 TITLE</h2><h3 id=\"H3TITLE\"><a href=\"#H3TITLE\" class=\"headerlink\" title=\"H3TITLE\"></a>H3TITLE</h3><h4 id=\"H4-TITLE\"><a href=\"#H4-TITLE\" class=\"headerlink\" title=\"H4 TITLE\"></a>H4 TITLE</h4><h5 id=\"H5-TITLE\"><a href=\"#H5-TITLE\" class=\"headerlink\" title=\"H5 TITLE\"></a>H5 TITLE</h5><h6 id=\"H6-title\"><a href=\"#H6-title\" class=\"headerlink\" title=\"H6 title\"></a>H6 title</h6><p>textwqeqweqwewqweeeeeeeeeeeeeeeeeeeeeqweqwe.</p>\n<p>恶趣味我去额温枪恶趣味我去恶趣味我去问问其味无穷额外。</p>\n<blockquote>\n<p>社会中似乎普遍存在这样的情况：一个人的工作越是明显地对他人有益，他得到的酬劳就越低。”这听上去不可思议，但格雷伯用了苏格拉底式的归谬法，连续追问：“只需要询问以下几个简单的问题：倘若这个专业人士阶层嗖一下消失了，世界会变成什么样？倘若消失的人是护士、垃圾清理工、机械师，那又会发生什么？显然，如果护士、垃圾清理工和机械师转瞬之间就不存在了，那么我们的生活将会立刻受到灾难性的打击。如果世界上不再有教师，不再有码头工人，那我们的生活将会迅速陷入困境。哪怕是少了科幻小说家，少了斯卡音乐家，这个世界都会逊色不少。可如果消失的是这个世界所有的私募基金首席执行官、游说者、公关研究员、精算师、电话推销员、法警和法律顾问，那人类是否会痛苦不堪？是否会面临无法生存的情况？这就不好说了。个人实际贡献越多，获得的报酬越少：除了少数人们熟知的例外（比如医生），这种情况竟然真的普遍存在。”</p>\n</blockquote>\n<ul>\n<li>这是 list</li>\n<li>qwewqe</li>\n<li>qewqe<ul>\n<li>qweweq</li>\n<li>qweqwewqe<ul>\n<li>qweqwewqe</li>\n<li>qweqwewqe</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">qweqweqweqwewqeqweqweqwqewqeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</span><br></pre></td></tr></table></figure>\n\n<p><code>qweeeeeeeeeeeeeeeeeeeeeee</code><br><code>qweqweqwwww</code><br><code>qweqwewqeqweq</code><br><code>qweqweqwe</code></p>\n<p>qweqweqwewqeqweqwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwwww<br>qweqweqwe<br>qweqweqwe<br>qweqweqweqw<br>qweqweqwe<br>qweqwe</p>\n<ol>\n<li>这是 list</li>\n<li>qwewqe</li>\n<li>qewqe<ol>\n<li>qweweq</li>\n<li>qweqwewqe<ol>\n<li>qweqwewqe</li>\n<li>qweqwewqe</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p><strong>weeeeeeeqqqqqqqqqqqqqqqqqqqqqqqqqqqqq</strong></p>\n<p><em>qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</em></p>\n<p><del>qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</del></p>\n<p><del>qweeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee</del></p>\n<p>&#x3D;&#x3D;hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;</p>\n<p>&#x3D;&#x3D;🔴hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;<br>&#x3D;&#x3D;🔵hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;<br>&#x3D;&#x3D;🟡hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;<br>&#x3D;&#x3D;🟣hgfffffffffffffffffffffffffffffffffffffffffffffffff&#x3D;&#x3D;</p>\n<p><a href=\"www.baidu.com\">wqeeeeeee</a></p>\n<p>[[qweqweqwe]]</p>\n<p>[^1][^2][^3][^4][^5]</p>\n<hr>\n<p>Sep 23, 2024</p>\n<table>\n<thead>\n<tr>\n<th>Year</th>\n<th>Indicator</th>\n<th></th>\n<th>Data</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>2020</td>\n<td>Total Population</td>\n<td></td>\n<td>$334 million (Census, 2024).</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>Gender Ratio</td>\n<td></td>\n<td>Male 49.5%; Female 50.5% (Census, 2024).</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>Age Structure</td>\n<td></td>\n<td>0-14 years: 18.6%<br>5-24 years: 12.9%<br>25-64 years: 51.5%<br>65 years and over: 17%<br>(Census, 2024).</td>\n</tr>\n<tr>\n<td>2022</td>\n<td>Population by Race</td>\n<td></td>\n<td>White Monoracial Population: 55.03%<br>Hispanic Population: 16,26%<br>Black Monoracial Population: 10.41%<br>Multiracial Population: 7.48%<br>Population Identifying as Some Other Race Alone: 5.2%<br>Population Asian Alone: 4.78%<br>Other: 0.86%<br>(Data Commons, 2022).</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>Population Growth Rate</td>\n<td></td>\n<td>0.35% (Census, 2024).</td>\n</tr>\n<tr>\n<td>2023</td>\n<td>Education Level</td>\n<td></td>\n<td>High school graduate or higher: 90.5%<br>Bachelor’s degree or higher: 37.9%<br>(Census, 2024).</td>\n</tr>\n</tbody></table>\n<p><img src=\"/Blog%20Template/image.png\"><br><img src=\"https://cdn.jsdelivr.net/gh/CourseRye/ScreenShot@master/uPic/9a6xun.png\"></p>\n<p>[^1]: footnote text<br>[^2]: footnote text<br>[^3]: footnote text<br>[^4]: footnote text<br>[^5]: footnote text</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cm1g0gs1800001xv214csg924","tag_id":"cm1g0gs1d00011xv2dlkj2kn4","_id":"cm1g0gs1f00031xv2b55g4mg9"},{"post_id":"cm1g0gs1800001xv214csg924","tag_id":"cm1g0gs1e00021xv204udgxl1","_id":"cm1g0gs1f00041xv2fjyo507m"}],"Tag":[{"name":"vw3x","_id":"cm1g0gs1d00011xv2dlkj2kn4"},{"name":"v2ex","_id":"cm1g0gs1e00021xv204udgxl1"}]}}